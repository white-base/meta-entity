{"version":3,"file":"logic-entity.min.js","sources":["../node_modules/logic-core/src/message.js","../node_modules/logic-core/src/extend-error.js","../node_modules/logic-core/src/type.js","../node_modules/logic-core/src/util.js","../node_modules/logic-core/src/event-emitter.js","../node_modules/logic-core/src/i-object.js","../node_modules/logic-core/src/i-marshal.js","../node_modules/logic-core/src/i-collection.js","../node_modules/logic-core/src/i-collection-property.js","../node_modules/logic-core/src/i-element.js","../node_modules/logic-core/src/i-list.js","../node_modules/logic-core/src/i-control-list.js","../node_modules/logic-core/src/i-serialize.js","../node_modules/logic-core/src/i-collection-array.js","../node_modules/logic-core/src/namespace-manager.js","../node_modules/logic-core/src/meta-registry.js","../node_modules/logic-core/src/meta-object.js","../node_modules/logic-core/src/meta-element.js","../node_modules/logic-core/src/base-collection.js","../node_modules/logic-core/src/collection-array.js","../node_modules/logic-core/src/collection-property.js","../src/message-wrap.js","../src/i-control-export.js","../src/i-control-group.js","../src/i-control-import.js","../src/i-control-schema.js","../src/i-transaction.js","../src/trans-queue.js","../src/collection-transaction.js","../src/meta-row.js","../src/collection-meta-row.js","../src/base-column.js","../src/meta-column.js","../src/object-column.js","../src/base-column-collection.js","../src/collection-meta-view-column.js","../src/collection-meta-table-column.js","../src/base-entity.js","../src/collection-meta-table.js","../src/meta-table.js","../src/meta-view.js","../src/collection-meta-view.js","../src/meta-set.js"],"sourcesContent":["/**** message.js | Message ****/\n//==============================================================\nimport  defaultCode  from './locales/default.json';\n// import {osLocale} from 'os-locale';\n\nconst localesPath = './locales';    // 상대 경로\n\n// inner function\nfunction _isObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\nfunction _isString(obj) {    // 공백아닌 문자 여부\n    if (typeof obj === 'string' && obj.length > 0) return true;\n    return false;\n}\nfunction _deepMerge(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var targetValue = target[key];\n            var sourceValue = source[key];\n            if (_isObject(sourceValue)) {\n                if (!_isObject(targetValue)) {\n                    target[key] = {};\n                }\n                target[key] = _deepMerge(target[key], sourceValue);\n            } else {\n                target[key] = sourceValue;\n            }\n        }\n    }\n    return target;\n}\n\nasync function _loadJSON(filePath) {\n    const isNode = typeof process !== 'undefined' && process.versions !== null && process.versions.node !== null && globalThis.isDOM !== true;\n    const isESM = isNode && (typeof require === 'undefined' || globalThis.isESM === true);   // REVIEW: test hack\n    \n    try {\n        if (isESM) {\n            return (await import(filePath, { with: { type: 'json' } })).default;\n        } else if (isNode) {\n            return require(filePath);\n        } else {\n            const response = await fetch(filePath);\n            return await response.json();\n        }\n    } catch (error) {\n        // console.log(`Error loading JSON file: ${filePath}`, error);\n        return undefined;\n    }\n}\n\nfunction _getLocale() {\n    let locale = '';\n\n    if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {\n        // 브라우저 환경\n        const lang = navigator.languages?.[0] || navigator.language || Intl.DateTimeFormat().resolvedOptions().locale;\n        locale = lang.split(/[_-]/)[0]; // \"ko-KR\" -> \"ko\"\n    } else if (typeof process !== 'undefined') {\n        // Node.js 환경\n        const rawLocale = process.env.LANG || process.env.LC_ALL || process.env.LANGUAGE;\n        if (rawLocale) {\n            locale = rawLocale.split(/[:_.]/)[0].replace('_', '-'); // \"ko_KR.UTF-8\" -> \"ko\"\n        }\n    }\n    return locale || 'en';\n}\n\nfunction _replacePlaceholders (p_template, p_values) {\n    let namedValues = {}, indexedValues = [];\n    \n    if (Array.isArray(p_values)) indexedValues = p_values;\n    else if (typeof p_values === 'object') namedValues = p_values;\n\n    // `${변수명}` 치환\n    p_template = p_template.replace(/\\$\\{(\\w+)\\}/g, function(match, key) {\n        return namedValues.hasOwnProperty(key) ? namedValues[key] : match;\n    });\n    // `$1, $2` 치환\n    p_template = p_template.replace(/\\$(\\d+)/g, function(match, index) {\n        var i = parseInt(index, 10) - 1;\n        return indexedValues[i] !== undefined ? indexedValues[i] : match;\n    });\n\n    return p_template;\n};\n\n/**\n * 'Message' is a class that manages messages and codes.  \n */\nclass Message {\n\n    /**\n     * Namespace path. ('Common')\n     */\n    static _NS = 'Common';\n    \n    /**\n     * Internal repository that stores message code.  \n     */\n    static $storage = {\n        lang: { default: {} },\n        path: []\n    };\n    \n    /**\n     * Sets whether automatic language detection is enabled. Default is true.  \n     */\n    // static autoDetect = true;\n    \n    /**\n     * Set the default language. Default is 'default'.  \n     */\n    static defaultLang = 'default';\n    \n    /**\n     * Sets the current language. Default is 'default'.  \n     */\n    static currentLang = this.defaultLang;\n\n    \n    /**\n     * Returns a message that corresponds to the message code.  \n     * \n     * @param {string} p_code Message code\n     * @returns {string} Message String\n     */\n    static getMessageByCode (p_code) {\n        var value = this.$storage.lang[this.currentLang]?.[p_code] || this.$storage.lang[this.defaultLang]?.[p_code];\n        return typeof value === 'number' ? String(value) : value;\n    };\n\n    /**\n     * Add the message code to the storage.  \n     * \n     * @param {object} p_msg Message Object\n     * @param {string} p_path Message file path\n     */\n    static importMessage (p_msg, p_path) {\n        // let locale;\n\n        if (_isObject(p_msg)) {\n            _deepMerge(this.$storage.lang.default, p_msg);\n            if (_isString(p_path)) this.$storage.path.push(p_path);\n        }\n\n        // locale = _getLocale();\n        // if (locale === 'en') locale = 'default';\n        // else await Message.changeLanguage(locale);\n    };\n\n    /**\n     * Change the language.  \n     * \n     * @param {string} p_lang language code\n     */\n    static async changeLanguage (p_lang) {\n        this.currentLang = p_lang;\n        if (p_lang === 'default') return;\n        for (var i = 0; i < this.$storage.path.length; i++) {\n            var localPath = this.$storage.path[i];\n            var msg = await _loadJSON(`${localPath}/${p_lang}.json`);\n\n            this.$storage.lang[p_lang] = this.$storage.lang[p_lang] || {};\n            // if (typeof $storage.lang[p_lang] === 'undefined') $storage.lang[p_lang] = {};\n\n            if (typeof msg === 'object') _deepMerge(this.$storage.lang[p_lang], msg);\n            else console.warn(`Path '${localPath}/${p_lang}' does not have a file.`);\n        }\n    }\n\n    /**\n     * Returns a string corresponding to the given message code.  \n     * \n     * @param {string} p_code Message code\n     * @param {object | string[]} p_values Value to replace in message\n     * @returns {string} 메시지\n     */\n    static get (p_code, p_values) {\n        var msg = Message.getMessageByCode(p_code);\n        var result;\n\n        if (typeof msg === 'undefined') {\n            return `There is no message for code. '${p_code}'`;\n        }\n        result = _replacePlaceholders(msg, p_values);\n        return $intro(p_code) + result;\n\n        // inner funciton\n        function $intro(code) {\n            var intro = '';\n            var firstChar = code.substring(0, 1);\n            \n            if (firstChar === 'E') intro = 'Error';\n            else if (firstChar === 'W') intro = 'Warn';\n            return intro + ' ['+ code +'] ';\n        }\n    };\n\n    /**\n     * Initialize the language.  \n     */\n    static resetLang () {\n        // let locale;\n        this.currentLang = this.defaultLang;\n        // if (this.autoDetect) {\n        //     locale = _getLocale();\n        //     if (locale === 'en') locale = 'default';\n        //     await Message.changeLanguage(locale);\n        // }\n    }\n\n    /**\n     * Set the current language by automatically detecting the language.  \n     */\n    static async autoDetect () {\n        let locale = _getLocale();  // internal function\n        // let locale = await osLocale(); // external function\n        // locale = locale.split(/[_-]/)[0];\n\n        if (locale === 'en') locale = 'default';\n        await Message.changeLanguage(locale);\n    }\n}\n// console.log('Before import');\n// (async () => {\n//     await Message.importMessage(defaultCode, localesPath);\n// })();\n\n// async function main() {\n//     await (async () => {\n//     await Message.importMessage(defaultCode, localesPath);\n//     // await Messagde.importMessage(...);\n//     })(); // ← IIFE가 반환하는 promise를 여기서 await\n    \n//     console.log('importMessage가 끝난 후 실행됨');\n// }\n//  main();\n\n\n// await Message.importMessage(defaultCode, localesPath);\n// console.log('After import');\nMessage.importMessage(defaultCode, localesPath);\n\nexport default Message;\nexport { Message };","/**** extend-error.js | ExtendError ****/\n//==============================================================\nimport Message from './message.js';\n\n// inner function \nfunction _buildMessageProp(obj) {\n    var msg = '';\n    for (var prop in obj) {\n        if (typeof obj[prop] === 'string') msg += prop + ' : '+ obj[prop] + '\\n';\n        else continue;\n    }\n    return msg;\n}\nfunction _buildMsgQueue(queue) {\n    var msg = '';\n    var queue_cnt = queue.length;\n    for (var i = queue_cnt; i > 0; i--) {\n        var mark = '';\n        for (var j = i; j <= queue_cnt; j++) { mark += '#'; }\n        msg += '' + mark + ' '+ queue[i - 1] + '\\n';\n    }\n    return msg;\n}\n\nclass ExtendError extends Error {\n\n    static _NS = 'Common';      // namespace\n\n    /**\n     * Save previously generated messages.  \n     * \n     * @member {string[]} ExtendError#queue\n     */\n    queue = [];\n\n    /**\n     * Error message related to property type.  \n     * \n     * @member {object} ExtendError#prop\n     */\n    prop = {};\n\n    /**\n     * Use user messages to create an ExtendError instance.  \n     *\n     * @param {string} msg Error message string\n     * @param {ExtendError | object | null} causeOrProp Error message by existing ExtendError, Error object or property\n     *\n     * @example\n     * throw new ExtendError(\"Custom error message\");\n     * throw new ExtendError(\"Custom error message\", error);\n     * throw new ExtendError(\"Custom error message\", { style: \"required\" });\n     */\n\n    /**\n     * Create an instance of 'ExtendError' using the message code and substitution value.  \n     *\n     * @param {RegExp} msgPattern Code value of regular expression type\n     * @param {ExtendError | object | null} causeOrProp Error message by existing ExtendError, Error object or property\n     * @param {string[]} placeholders Array of strings containing substitution values such as '$1' and '$2' in the\n     *\n     * @example\n     * // For messages that do not have a substitution value\n     * throw new ExtendError(/EL01504/);\n     * throw new ExtendError(/EL01504/, error);\n     * throw new ExtendError(/EL01504/, { style: \"required\" });\n     * // For messages with substitution values\n     * throw new ExtendError(/EL01504/, undefined, ['value1', 'value2']);\n     * throw new ExtendError(/EL01504/, error, ['value1', 'value2']););\n     * throw new ExtendError(/EL01504/, { style: \"required\" }, ['value1', 'value2']);\n     */\n    constructor(p_msg, p_prop, p_codeVal) {\n        super();\n        \n        var _build = '';\n        var _prop;\n        var _queue = [];    \n        var _msg;\n\n        if (p_prop instanceof ExtendError) {\n            _queue = p_prop.queue;\n            _prop = p_prop.prop;\n        } else if (p_prop instanceof Error) {\n            _queue.push(p_prop.message);\n        } else if (typeof p_prop  === 'object' && p_prop !== null) {\n            _prop = p_prop;\n        }\n        \n        if (typeof p_msg === 'string') {\n            _msg = p_msg;\n        } else if (p_msg instanceof RegExp) {\n            _msg = Message.get(p_msg.source, p_codeVal);\n        } else _msg = '';\n        \n        _build = _msg + '\\n';\n        \n        if (_prop) _build += _buildMessageProp(_prop);\n        if (_queue.length > 0) _build += _buildMsgQueue(_queue);\n\n        this.message = _build;\n        this.queue = _queue;\n        this.queue.push(_msg);\n    }\n\n    /**\n     * Converts error messages into strings.  \n     * \n     * @return error message string\n     */\n    toString() {\n        return 'ExtendError : ' + this.message;\n    }\n}\n\nexport default ExtendError;\nexport { ExtendError };","/**** util-type.js Type ****/\n//==============================================================\n// import Message from './message.js';\nimport ExtendError from './extend-error.js';\n \nvar _global = globalThis;\nvar OLD_ENV = _global.OLD_ENV ? _global.OLD_ENV : false;    // 커버리지 테스트 역활\n\n/**\n * This is a type module.\n */\nvar Type = {};\n\n/**\n * object 와 new 생성한 사용자 함수를 제외한 객쳐 여부  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isPrimitiveObj(obj) { // REVIEW: 정리 필요, 의미적으로 명료하게..\n    if(typeof obj === 'object' && obj !== null \n        && (obj instanceof RegExp || obj instanceof Date )) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 최상위 object 이거나 사용자 함수에서 생성한 객체 여부  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isObject(obj)  {  // REVIEW: 정리 필요, 의미적으로 명료하게\n    if(typeof obj === 'object' && obj !== null && !_isPrimitiveObj(obj)) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 공백객체 인지 확인  \n * \n * @param {*} obj 검사대상\n * @returns {boolean}\n */\nfunction _isEmptyObj(obj)  {\n    if(_isObject(obj) && Object.keys(obj).length === 0 && getAllProperties(obj).length === 0) return true;\n    return false;\n}\n\n/**\n * 공백이 아닌 객체 (prototype 및 속성 있는것)  \n * \n * @param {*} obj 대상 \n * @returns {boolean}\n */\nfunction _isFillObj(obj)  {\n    if(_isObject(obj) && getAllProperties(obj).length > 0) return true;\n    return false;\n}\n\n/**\n * 내장함수 유무  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isBuiltFunction(obj) {\n    if (typeof obj === 'function' && (false \n        || obj === Number || obj === String || obj === Boolean\n        || obj === Object || obj === Array || obj === Function\n        || obj === RegExp || obj === Date \n        || obj === Symbol || obj === BigInt\n    )) return true;\n    return false;\n}\n\n/**\n * 첫문자 대문자 여부  \n * \n * @param {string} strValue \n * @returns {boolean}\n */\nfunction _isUpper(strValue) {\n    var firstStr = strValue.charAt(0);\n    if (firstStr === '') return false;\n    if(firstStr === firstStr.toUpperCase()) return true;\n    return false;\n}\n\n/**\n * 리터럴 여부  \n * number, string, boolean, bigint, RexExp instance  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isLiteral(obj) {\n    if (typeof obj  === 'number') return true;\n    if (typeof obj  === 'string') return true;\n    if (typeof obj  === 'boolean') return true;\n    if (typeof obj  === 'bigint') return true;\n    if (obj instanceof RegExp) return true;\n    return false;\n}\n\n/**\n * 리터럴값 비교  \n * number, string, boolean, bigint, RexExp instance  \n * \n * @param {*} obj1 \n * @param {*} obj2 \n * @returns {boolean}\n */\nfunction _equalLiternal(obj1, obj2) {\n    if (obj1 === obj2) return true;\n    if (obj1 instanceof RegExp && obj2 instanceof RegExp && obj1.source === obj2.source) return true;\n    return false;\n}\n\n/**\n * function 생성하는 생성자\n * @param {*} type \n * @returns {object}\n */\nvar _creator = function(type) {\n    return new type;\n};\n\n/**\n * 타임명 얻기  \n * \n * @param {*} obj \n * @returns {string}\n */\nfunction _typeName(obj) {\n    return obj['name'];\n}\n\n/**\n * kind 코드, 대문자로 얻기 '_any_'...  \n * \n * @param {*} val \n * @returns {string}\n */\nfunction _getKeyCode(val) {\n    var reg = /^_[a-zA-Z]+_/;\n    var result;\n\n    if (typeof val !== 'string') return '';\n    result = reg.exec(val);\n    if (result !== null) return result[0].toUpperCase();\n    return '';\n}\n\n// 배열 구조 분해 할당을 해제 \nfunction restoreArrowFunction(transformedCode) {\n    // 1. 화살표 함수의 매개변수와 본문 전체를 추출\n    const regex = /\\((.*?)\\)\\s*=>\\s*\\{([\\s\\S]*)\\}/;\n    const match = transformedCode.match(regex);\n  \n    // 특별히 `_ref => { ... }` 형태도 대응할 수 있도록 추가 처리\n    //  -> _ref => { let [String] = _ref; return Number; }\n    //  -> 실제로는 ( _ref ) => { ... } 형태로 통일\n    if (!match) {\n        // 혹시 _ref => { ... } 형태라면, 강제로 괄호를 넣어 재시도\n        const altRegex = /^(.*?)\\s*=>\\s*\\{([\\s\\S]*)\\}/;\n        const altMatch = transformedCode.match(altRegex);\n        if (!altMatch) {\n            throw new Error('Invalid arrow function format.');\n        }\n        // altMatch[1] = \"_ref\"\n        // altMatch[2] = \"let [String] = _ref; return Number;\"\n        let altParams = altMatch[1].trim();\n        let altBody = altMatch[2].trim();\n    \n        // 화살표 함수 형태 통일:  ( _ref ) => { ... }\n        return restoreArrowFunction(`(${altParams}) => {${altBody}}`);\n    }\n  \n    // 2. 매개변수와 함수 본문 부분 분리\n    let params = match[1].trim();  // 함수의 매개변수 부분\n    let body = match[2].trim();    // 함수 본문\n  \n    // 3. 구조 분해 할당 패턴 (객체/배열 모두 대응) - 여러 줄(줄바꿈)도 허용\n    //    예: let { aa: String } = _ref5;  또는 let [[{ bb: Number }]] = _ref6;\n    const paramAssignments = body.match(/let\\s+(\\{[\\s\\S]*?\\}|\\[[\\s\\S]*?\\])\\s*=\\s*(\\w+);/g) || [];\n  \n    // 4. 찾아낸 구조 분해 할당들을 순회하며 매개변수( _ref5, _ref6 등 )를 원래 형태로 치환\n    paramAssignments.forEach(assign => {\n        // - parts[1]: { aa: String } 또는 [String] 등 (줄바꿈 포함 가능)\n        // - parts[2]: _ref5, _ref6 등\n        const parts = assign.match(/let\\s+(\\{[\\s\\S]*?\\}|\\[[\\s\\S]*?\\])\\s*=\\s*(\\w+);/);\n        if (parts) {\n            const extractedParam = parts[1].trim(); // 원래 구조\n            const originalParam = parts[2].trim();  // 변환된 변수명 (_ref5 등)\n    \n            // 매개변수 목록에 있던 _ref5 등을 { aa: String } 등으로 치환\n            const re = new RegExp(`\\\\b${originalParam}\\\\b`, 'g');\n            params = params.replace(re, extractedParam);\n        }\n    });\n  \n    // 5. return 문이 있다면 반환값을 추출\n    //    예: return Number; -> \"Number\"\n    const returnStatementMatch = body.match(/return\\s+(.*?);/);\n    let returnType = returnStatementMatch ? returnStatementMatch[1].trim() : '';\n  \n    // 6. 최종 복원 – return 문이 있다면 { return ... } 형태로, 없으면 { } 로\n    if (returnType) {\n        // 불필요한 공백 없애기 위해 파라메터 부분도 스페이스 정리\n        params = params.replace(/\\s+/g, '');\n        return `(${params})=>{return ${returnType}}`;\n    } else {\n        params = params.replace(/\\s+/g, '');\n        return `(${params})=>{}`;\n    }\n}\n\n/**\n * 함수 규칙   \n * - (params 내부에는 '()' 입력 금지)  \n * - 참조형 타입 금지 : new Function() 시점에 자동 해석됨  \n * \n * @param {*} funBody \n * @returns {object}\n */\nfunction _parseFunc(funBody) {\n    var syntax1 = /\\([,_\\[\\]{:}\\w\\s]*\\)\\s*(?:=>)?\\s*{\\s*.*\\s*.*\\s*}/;    // 제한 규칙\n    var syntax2 = /(\\(.*\\)|\\w+)\\s*(?:=>).*/;\n    var regFunc1 = /(?:function\\s)?\\(([\\[\\]{:}\\s\\w,]*)\\)\\s*(?:=>)?\\s*{(?:\\s*return\\s+|\\s*)?([\\[\\]{:}\\s\\w,]*);?\\s*}/;\n    var regFunc2 = /\\(?([\\[\\]{:}\\s\\w,]*)\\)?\\s*(?:=>)\\s*{?(?:\\s*return\\s+|\\s*)?([\\[\\]\\s\\w,]*);?\\s*}?/;\n    \n    var arrFunc;\n    var result = { params: [], return: undefined };\n    var arrParam = [];\n    var arrRetrun;\n    \n    // 배열 구조 분해 할당을 해제 \n    if (/\\blet\\b/.test(funBody)) funBody = restoreArrowFunction(funBody);\n    \n    funBody = $skipComment(funBody);\n\n    try {\n        if (syntax1.test(funBody)) arrFunc = regFunc1.exec(funBody);\n        else if (syntax2.test(funBody)) arrFunc = regFunc2.exec(funBody);\n        else throw new ExtendError(/EL01301/, null, [funBody]);\n        \n        if (arrFunc === null) throw new ExtendError(/EL01302/, null, [funBody]);\n\n        arrParam = (new Function('return ['+ arrFunc[1] +']'))();\n        result['params'] = arrParam;\n        \n        if (arrFunc[2] !== '') arrRetrun = (new Function('return '+ arrFunc[2]))();\n        result['return'] = arrRetrun;\n\n    } catch (error) {\n        throw new ExtendError(/EL01303/, error, ['']);\n    }\n\n    return result;\n\n    // inner function\n    function $skipComment(body) {    // 주석 제거 comment\n        var rBody = body;\n        var bloackComment = /\\/\\*[^](.*?)\\*\\//g;\n        var lineComment = /\\/\\/[^](.*?)(\\n|$)/g;\n\n        rBody = rBody.replace(bloackComment, '');\n        rBody = rBody.replace(lineComment, '');\n        return rBody;\n    }\n}\n\n/**\n * 타입 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasType(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n\n    arr = arr.concat(['null', 'undefined', 'number', 'string', 'boolean']);\n    arr = arr.concat(['array', 'function', 'object']);\n    arr = arr.concat(['choice', 'union', 'class']);\n    arr = arr.concat(['symbol', 'bigint', 'regexp']);\n    arr = arr.concat(['etc']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * 타입 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _isLeafType(name) {\n    var arr = [];\n    \n    arr = arr.concat(['null', 'undefined', 'number', 'string', 'boolean']);\n    arr = arr.concat(['symbol', 'bigint', 'regexp', 'object']);\n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * choice type kind 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasKindChoice(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n    \n    arr = arr.concat(['_ALL_', '_ANY_', '_NON_', '_ERR_']);\n    arr = arr.concat(['_REQ_', '_OPT_', '_DEF_', '_EUM_']);\n    arr = arr.concat(['_ETC_']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * choice type kind 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasKindArray(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n\n    arr = arr.concat(['_ALL_', '_ANY_']);\n    arr = arr.concat(['_REQ_', '_OPT_', '_SEQ_']);\n    arr = arr.concat(['_ETC_']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * Query all properties of the object.\n * \n * @param {object} obj  Object to look up properties (except Object)\n * @param {boolean?} hasObj Whether to include properties of 'Object'\n * @returns {array<string>} Property Name Arrangement\n */\nfunction getAllProperties(obj, hasObj) {\n    var allProps = [], cur = obj;\n    var is = hasObj || false;\n    do {\n        var props = Object.getOwnPropertyNames(cur);\n        for (var i = 0; i < props.length; i++) {\n            var prop = props[i];\n            if (allProps.indexOf(prop) === -1 && (is || !Object.prototype.hasOwnProperty(prop))) allProps.push(prop);\n        }\n    } while (cur = Object.getPrototypeOf(cur));\n    return allProps;\n}\nType.getAllProperties = getAllProperties;\n\n/**\n * Compare the two objects to see if they are the same (except Prototype)  \n * \n * @param {any} obj1 Source object\n * @param {any} obj2 Object to compare\n * @returns {boolean} Whether the two objects are the same ('true' or 'false')\n */\nfunction deepEqual(obj1, obj2) {\n    // 두 객체가 동일한 참조를 가지면 true를 반환\n    if (obj1 === obj2) return true;\n\n    // 두 객체 중 하나가 null이거나 타입이 다르면 false를 반환\n    if (obj1 === null || obj2 === null || typeof obj1 !== typeof obj2) return false;\n\n    // 함수 비교\n    if (typeof obj1 === 'function' && typeof obj2 === 'function') {\n        return obj1.toString() === obj2.toString();\n    }\n\n    // 원시 값 비교\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n\n    // 배열 비교\n    if (Array.isArray(obj1) && Array.isArray(obj2)) {\n        if (obj1.length !== obj2.length) return false;\n        for (var i = 0; i < obj1.length; i++) {\n            if (!deepEqual(obj1[i], obj2[i])) return false;\n        }\n        return true;\n    }\n\n    // 객체 비교\n    // var keys1 = Object.keys(obj1);\n    // var keys2 = Object.keys(obj2);\n    var keys1 = Object.getOwnPropertyNames(obj1);\n    var keys2 = Object.getOwnPropertyNames(obj2);\n\n    if (keys1.length !== keys2.length) return false;\n\n    for (var j = 0; j < keys1.length; j++) {\n        var key = keys1[j];\n        if (keys2.indexOf(key) === -1 || !deepEqual(obj1[key], obj2[key])) return false;\n    }\n\n    return true;\n}\nType.deepEqual = deepEqual;\n\n// function deepEqual(obj1, obj2) {\n//     if (obj1 === obj2) return true;\n//     if (typeof obj1 !== typeof obj2) return false;\n//     if ($_isPrimitiveType(obj1) && !(obj1 === obj2)) return false;\n//     if (typeof obj1 === 'function' && !$equalFunction(obj1, obj2)) return false;\n\n//     if (Array.isArray(obj1)) {\n//         if (obj1.length !== obj2.length) return false;\n//         for (var i = 0; i < obj1.length; i++) {\n//             var val1 = obj1[i];\n//             var val2 = obj2[i];\n//             if (!deepEqual(val1, val2)) return false;\n//         }\n//     } else {\n//         if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\n//         for (var key in obj1) {\n//             if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n//                 var val1 = obj1[key];\n//                 var val2 = obj2[key];\n//                 if (!deepEqual(val1, val2)) return false;\n//             }\n//         }\n//     }\n//     return true;\n//     // inner function\n//     function $equalFunction(fun1, fun2) {\n//         // if (typeof fun1 !== 'function') return false;\n//         // if (typeof fun2 !== 'function') return false;\n//         if (fun1 === fun2 || fun1.toString() === fun2.toString()) return true;\n//         return false;\n//     }\n//     function $_isPrimitiveType(obj) {\n//         if (typeof obj === 'string' || typeof obj === 'number' \n//             || typeof obj === 'boolean' || typeof obj === 'undefined' || typeof obj === 'bigint') return true;\n//         return false;\n//     }\n// }\n\n\n/**\n * Gets the type of the given function (generator). (Can include '_UNION')  \n * The returned arrays are included in order from the specified function.  \n * \n * @param {function} ctor Generator function or class\n * @param {boolean} [hasUnion= true] whether '_UNION' is included (default: 'true')\n * @returns {array<function>} Array function type\n */\nfunction getTypes(ctor, hasUnion) {\n    var arr = [];\n    var tempArr = [];\n    var union;\n    var proto;\n\n    hasUnion = hasUnion === false ? false : true;\n    \n    if (typeof ctor !== 'function') throw new ExtendError(/EL0130C/, null, [typeof ctor]);\n\n    arr.push(ctor);\n    proto = $getPrototype(ctor);        \n    \n    if (proto !== Function.prototype) {\n        arr = arr.concat(getTypes(proto, hasUnion));\n    }\n    if (hasUnion) {\n        union = ctor['_UNION'] || [];\n        for (var i = 0; i < union.length; i++) {\n            arr = arr.concat(getTypes(union[i], hasUnion));\n        }\n    }\n\n    for (var j = 0; j < arr.length; j++) {\n        var idx = tempArr.indexOf(arr[j]);\n        if (idx < 0) tempArr.push(arr[j]);\n    }\n    return tempArr;\n\n    // innner function\n    function $getPrototype(ctor) {\n        // if (ctor.hasOwnProperty('super')) return ctor.super;\n        if (Object.prototype.hasOwnProperty.call(ctor, 'super')) return ctor.super;\n        return !OLD_ENV && typeof Object.getPrototypeOf === 'function' ? Object.getPrototypeOf(ctor) : ctor.__proto__;\n    }\n}\nType.getTypes = getTypes;\n\n/**\n * Verify that the prototype (inheritance) chain of the function type contains the specified target.  \n * \n * @param {function} ctor Generator function or class\n * @param {function | string} target To be examined (generator function or class name)\n * @returns {boolean} whether to be included in the prototype chain ('true' or 'false')\n */\nfunction isProtoChain(ctor, target) {\n    var arr;\n    if (typeof ctor !== 'function') return false;\n    if (!(typeof target === 'function' || typeof target === 'string')) return false;\n\n    arr = getTypes(ctor, false);\n    for (var i = 0; i < arr.length; i++) {\n        if (typeof target === 'string') {\n            if (target === arr[i].name) return true;\n        } else {\n            if (target === arr[i]) return true;\n        }\n    }\n    return false;\n}\nType.isProtoChain = isProtoChain;\n\n/**\n * Verify that the given function type is included in the prototype (inheritance) chain or is of type '_UNION'.  \n * \n * @param {function} ctor Generator function or class\n * @param {function | string} target To be examined (generator function or class name)\n * @returns {boolean} Prototype chain or type '_UNION' ('true' or 'false')\n */\nfunction hasType(ctor, target) {\n    var arr;\n    if (typeof ctor !== 'function') return false;\n    if (!(typeof target === 'function' || typeof target === 'string')) return false;\n\n    arr = getTypes(ctor);\n    for (var i = 0; i < arr.length; i++) {\n        if (typeof target === 'string') {\n            if (target === arr[i].name) return true;\n        } else {\n            if (target === arr[i]) return true;\n        }\n    }\n    return false;\n}\nType.hasType = hasType;\n\n/**\n * Returns extension information of the target type in JSON format.  \n * Analyze the internal properties of the object to transform all properties into the format 'typeObject()'.  \n * \n * @param {*} target Target type\n * @returns {object} converted extension type object\n * @example\n * var obj = {\n *      $ype: '',\n *      default: null,                  // string, number, boolean, regexp\n *      kind: '',                       // array, choice\n *      creator: null, _instance: {},   // class\n *      _prop: {},                      // union\n *      params: [], return: null,       // function\n *      name: name, func: null,\n * }\n */\nfunction typeObject(target) {\n    var obj = {};\n    var typeObj = _isObject(target) && target['$type'] ? target : extendType(target);\n    var leafType = ['null', 'undefined', 'number', 'string', 'boolean', 'symbol', 'bigi¡nt', 'object', 'regexp'];\n\n    obj['$type'] = typeObj['$type'];\n    \n    if (typeObj['default'] !== null && typeof typeObj['default'] !== 'undefined') obj['default'] = typeObj['default'];\n    if (typeObj['kind'] !== null && typeof typeObj['kind'] !== 'undefined') obj['kind'] = typeObj['kind'];\n    if (typeObj['params']) obj['params'] = typeObj['params'];\n    if (typeObj['return']) obj['return'] = typeObj['return'];\n    if (typeObj['creator']) obj['creator'] = typeObj['creator'];\n    if (typeObj['_instance']) obj['_instance'] = typeObj['_instance'];\n\n    if (leafType.indexOf(obj['$type']) > -1) {\n        if (typeObj['default']) obj['default'] = typeObj['default'];\n        return obj;\n    }\n    if (obj['$type'] === 'array' ||  obj['$type'] === 'choice') {\n        obj['list'] = [];\n        for(var i = 0; i < typeObj['list'].length; i++) {\n            obj['list'][i] = typeObject(typeObj['list'][i]);\n        }\n    }\n    if (obj['$type'] === 'function') {\n        for(var j = 0; j < obj['params'].length; j++) {\n            obj['params'][j] = typeObject(typeObj['params'][j]);\n        }\n        if (typeObj['return']) obj['return'] = typeObject(typeObj['return']);\n    }\n    if (obj['$type'] === 'class') {\n        if (typeof typeObj['ref'] === 'function') {\n            obj['creator'] = typeObj['ref'].name; \n            var temp = _creator(typeObj['ref']);\n            obj['_instance'] = typeObject(temp);\n        }\n    }\n    if (obj['$type'] === 'union') {\n        obj['_prop'] = {};\n        var temp2 = typeObj['ref'] || typeObj['_prop'];\n        var list = getAllProperties(temp2);\n        for (var k = 0; k < list.length; k++) {\n            var key = list[k];\n            if (key === '_interface' || key === 'isImplementOf' ) continue;             // 예약어\n            obj['_prop'][key] = typeObject(temp2[key]);\n        }\n    }\n    return obj;\n}\nType.typeObject = typeObject;\n\n/**\n * Returns the extension type name of the target object.  \n * \n * @param {*} target Target object\n * @returns {string} extended type name\n */\nfunction typeOf(target) {\n    return extendType(target)['$type'];\n}\nType.typeOf = typeOf;\n\n/**\n * Returns the extension type of the target object.  \n * \n * @param {any} target Target object\n * @returns {object} extended type object\n * @example\n * var singleType = ['undefined', 'null', 'number', 'string', 'boolean', 'regexp', 'object', 'symbol'];\n * var unionType = ['array', 'choice', 'function', 'class', 'union'];\n */\nfunction extendType(target) {\n    var obj =  { $type: '', ref: undefined };\n\n    obj.toString = function(){\n        var temp = '';\n        var arr = [];\n        if (this['$type'] === 'array' || this['$type'] === 'choice') {\n            for (var i = 0; i < this['list'].length; i++) {\n                var _type = extendType(this['list'][i]);\n                if (_type['default'] && _type['default'] !== null) {\n                    var def;\n                    if (_type['$type'] === 'string') def = '\\''+ _type['default'] +'\\'';\n                    else def = _type['default'];\n                    arr.push(_type['$type'] + '('+ def +')');\n                } else arr.push(_type['$type']);\n            }\n            if (this['kind'] === '_OPT_' || this['kind'] === '_REQ_' || this['kind'] === '_SEQ_' || this['kind'] === '_EUM_' || this['kind'] === '_DEF_') {\n                temp = this['$type'] +'('+ this['kind'] +')['+ arr.join(', ')+ ']';\n            } else temp = this['$type'] +'('+ this['kind'] +')';\n            \n        } else {\n            temp = this['$type'];\n            if (this['default'] && this['default'] !== null) {\n                if (this['$type'] === 'string') temp += '(\\''+ this['default'] +'\\')';\n                else temp += '('+this['default']+')';\n            }\n        }\n        return temp;\n    };\n    // special type\n    if (typeof target === 'object'  && target !== null && target['$type']) {\n        obj['$type'] = target['$type'];\n        if (target['default']) obj['default'] = target['default'];\n        if (target['kind']) obj['kind'] = target['kind'];\n        if (target['ref']) obj['ref'] = target['ref'];\n        if (target['list']) obj['list'] = target['list'];\n        if (target['name']) obj['name'] = target['name'];\n        if (target['func']) obj['func'] = target['func'];\n        if (target['params']) obj['params'] = target['params'];\n        if (target['return']) obj['return'] = target['return'];\n        if (!_hasType(obj['$type'])) throw new ExtendError(/EL01304/, null, [obj['$type']]);\n        if (obj['$type'] === 'array') {\n            obj['kind'] = obj['kind'] || '_ALL_';\n            if (!_hasKindArray(obj['kind'])) throw new ExtendError(/EL01305/, null, [obj['kind']]);\n        }\n        if (obj['$type'] === 'choice') {\n            if (!_hasKindChoice(obj['kind'])) throw new ExtendError(/EL01306/, null, [obj['kind']]);\n        }\n        return obj;\n    } else {\n        obj['ref'] = target;\n    }\n\n    // step : operation\n    if (target === null) {\n        obj['$type'] = 'null';\n    } else if (target === Number) {\n        obj['$type'] = 'number';\n        obj['default'] = null;            \n    } else if (target === String) {\n        obj['$type'] = 'string';\n        obj['default'] = null;\n    } else if (target === Boolean) {\n        obj['$type'] = 'boolean';\n        obj['default'] = null;\n    } else if (target === Array) {\n        obj['$type'] = 'array';\n        obj['kind'] = '_ALL_';\n        obj['list'] = [];\n    } else if (target === Function) {\n        obj['$type'] = 'function';\n        obj['params'] = [];\n    } else if (target === Object) {\n        obj['$type'] = 'object';\n    } else if (target === RegExp) {\n        obj['$type'] = 'regexp';\n        obj['default'] = null;\n    } else if (target === Symbol) {      // ES6+\n        obj['$type'] = 'symbol';\n    } else if (target === BigInt) {      // ES6+\n        obj['$type'] = 'bigint';\n        obj['default'] = null;\n    } else if (target instanceof RegExp) {\n        obj['$type'] = 'regexp';\n        obj['default'] = target;\n    // step : typeof\n    } else if (typeof target === 'undefined') {\n        obj['$type'] = 'undefined';\n    } else if (typeof target === 'number') {\n        obj['$type'] = 'number';\n        obj['default'] = target;\n    } else if (typeof target === 'string') {\n        obj['$type'] = 'string';\n        obj['default'] = target;\n    } else if (typeof target === 'boolean') {\n        obj['$type'] = 'boolean';\n        obj['default'] = target;\n    } else if (typeof target === 'bigint') { // ES6+\n        obj['$type'] = 'bigint';\n        obj['default'] = target;\n    } else if (typeof target === 'symbol') { // ES6+\n        obj['$type'] = 'symbol';\n    // step : function\n    } else if (typeof target === 'function') {\n        var kind = target['_KIND'];\n        if (kind) {\n            kind = kind.toLowerCase();\n            if (kind === 'function') obj['$type'] = 'function';\n            else obj['$type'] = 'class';    // class, interface, abstract\n        } else obj['$type'] = _isUpper(target.name) ? 'class' : 'function';\n            \n        if (obj['$type'] === 'function') {\n            try {\n                var funcType  = target['_TYPE'] ? target['_TYPE'] : _parseFunc(target.toString());\n                obj['params'] = funcType['params'];\n                obj['return'] = funcType['return'];\n            } catch (_err) {\n                obj['params'] = [];\n            }\n        }\n    // step : array\n    } else if (Array.isArray(target)) {\n        if (target.length ===  1 && Array.isArray(target[0])) {\n            obj['$type'] = 'choice';\n            if (target[0].length === 0) obj['kind'] = '_ANY_';\n            else obj['kind'] = _getKeyCode(target[0][0]);\n            obj['list'] = obj['kind'] ? target[0].slice(1) : target[0];\n        } else {\n            obj['$type'] = 'array';\n            if (target.length === 0) obj['kind'] = '_ANY_';\n            else obj['kind'] = _getKeyCode(target[0]);\n            obj['list'] = obj['kind'] ? target.slice(1) : target;\n        }\n        if (!obj['kind']) obj['kind'] = '_OPT_';\n        // kind 검사\n        if (obj['$type'] === 'array' && !_hasKindArray(obj['kind'])) throw new ExtendError(/EL01307/, null, [obj['kind']]);\n        if (obj['$type'] === 'choice' && !_hasKindChoice(obj['kind'])) throw new ExtendError(/EL01308/, null, [obj['kind']]);\n\n    // step : object\n    } else if (_isFillObj(target) || _isEmptyObj(target)) {\n        obj['$type'] = 'union';\n    \n    // REVIEW:  기타 모든 함수는 object 로 처리한다. 더 좋은 방법이 있으면 대체 한다.\n    } else {\n    // } else if(_isPrimitiveObj(type)) {\n        obj['$type'] = 'object';\n    }\n    // } else throw new ExtendError(/EL01309/, null, []);    // REVIEW: 커버리지 확인시 주석 처리\n    return obj;\n}\nType.extendType = extendType;\n\n/**\n * 원본타입에 대상타입이 덮어쓰기가 허용 가능한지 검사합니다.  \n * 원본타입에 대상타입으로 캐스팅이 가능하지 확인합니다.\n * @param {any} extType 원본 타입\n * @param {any} tarType 대상 타입\n * @param {number} opt 허용옵션 : 0 = 기본, 1 = 타입생성 비교 \n * @param {string?} pathName '' 공백시 성공\n * @returns {throw?}\n */\nfunction _execAllow(extType, tarType, opt, pathName) {\n    var eType = extendType(extType);\n    var tType = extendType(tarType);\n    var prop = {};\n    var sExt = eType.toString(), sTar = tType.toString();\n    \n    pathName = pathName ? pathName : 'extType';\n    if (pathName !== 'extType' || !pathName) prop['error path'] = pathName;\n    opt = opt || 0;\n\n    // if (_isObject(eType['ref']) && _isObject(tType['ref']) && deepEqual(eType, tType)) return; // REVIEW: 필요없어  보이지만 잠시 남겨둠\n    // origin seq, opt 필수 검사\n    if (eType['kind']) {\n        if ((eType['kind'] === '_SEQ_' || eType['kind'] === '_OPT_' || eType['kind'] === '_REQ_' || eType['kind'] === '_EUM_'|| eType['kind'] === '_DEF_') \n        && eType['list'].length === 0) {\n            throw new ExtendError(/EL01201/, prop, ['extType', sExt]);\n        }\n    }\n    // tarType seq, opt 필수 검사\n    if (tType['kind']) {\n        if ((tType['kind'] === '_SEQ_' || tType['kind'] === '_OPT_' || tType['kind'] === '_REQ_'  || tType['kind'] === '_EUM_'|| tType['kind'] === '_DEF_') \n        && tType['list'].length === 0) {\n            throw new ExtendError(/EL01201/, prop, ['tarType', sTar]);\n        }\n    }\n    //  원본은 초이스가 아니고, tarType choice 의 인 경우\n    if (eType['$type'] !== 'choice' && tType['$type'] === 'choice' ) {\n        var choType = { $type: 'choice', kind: '_REQ_', list: [extType] };\n        _execAllow(choType, tarType, opt, pathName);\n        return;\n    }\n    // check allow type\n    if (_isLeafType(eType['$type'])) {\n        if(typeof eType['default'] !== 'undefined' && eType['default'] !== null && !_equalLiternal(eType['default'], tType['default'])) {\n            throw new ExtendError(/EL01202/, prop, [eType['$type'], eType, tType]);\n        }\n        if (eType['$type'] !== tType['$type']) throw new ExtendError(/EL01203/, prop, [eType['$type'], tType['$type']]);\n    \n    } else if (eType['$type'] === 'array')  $arrayAllow();\n    else if (eType['$type'] === 'choice') $choiceAllow();\n    else if (eType['$type'] === 'class') $classAllow();\n    else if (eType['$type'] === 'union') $unionAllow();\n    else if (eType['$type'] === 'function') $functionAllow();\n    else throw new ExtendError(/EL01204/, prop, []);\n\n    // inner function\n    function $arrayAllow() {\n        if (tType['$type'] !== 'array' || !Array.isArray(tType['list'])) throw new ExtendError(/EL01211/, prop, [tType['$type']]);\n        \n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (tType['kind'] === '_ANY_') return;\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_OPT_') {\n                throw new ExtendError(/EL01212/, prop, [sTar]);\n            }\n            return;\n\n        // _SEQ_ (sequence)\n        } else if (eType['kind'] === '_SEQ_') {\n            if (eType['kind'] !== tType['kind'])  throw new ExtendError(/EL01213/, prop, [tType]);\n            if (eType['list'].length > tType['list'].length) {\n                throw new ExtendError(/EL01214/, prop, [eType.list.length, tType.list.length]);\n            }\n\n            // element check\n            for (var i = 0; i < eType['list'].length; i++) {\n                try {\n                    _execAllow(eType['list'][i], tType['list'][i], opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01215/, error, [i]);\n                }\n            }\n            return;\n        \n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' || tType['kind'] === '_OPT_') {\n                throw new ExtendError(/EL01216/, prop, [eType['$type'], sTar]);\n            }\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' ) {\n                throw new ExtendError(/EL01217/, prop, [eType['$type'], sTar]);\n            }\n        \n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01218/, prop, [eType['kind']]);\n        }\n\n        // element check\n        for (var k = 0; k < tType['list'].length; k++) {\n            var success = false;\n            for (var j = 0; j < eType['list'].length; j++) {\n                try {\n                    if (success) break;\n                    if (extendType(tType['list'][k])['$type'] === 'choice' && extendType(eType['list'][j])['$type'] !== 'choice' ) {\n                        var oriChoice = { $type: 'choice', kind: '_OPT_', list: eType['list'] };\n                        _execAllow(oriChoice, tType['list'][k], opt, pathName);\n                    } else {\n                        _execAllow(eType['list'][j], tType['list'][k], opt, pathName);\n                    }\n                    success = true;\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) throw new ExtendError(/EL01219/, prop, [eType, tType]);\n        }\n    }\n\n    function $choiceAllow() {\n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            if (tType['$type'] === tType['$type'] && tType['kind'] === '_ERR_') {\n                throw new ExtendError(/EL01221/, prop, [eType['$type'], sTar]);\n            }\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (tType['$type'] === 'undefined') throw new ExtendError(/EL01222/, prop, ['_ANY_', 'undefined']);\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_OPT_' || tType['kind'] === '_ERR_' || tType['kind'] === '_NON_')) {\n                throw new ExtendError(/EL01223/, prop, [sTar]);\n            }\n            return;\n        \n        // _NON_ \n        } else if  (eType['kind'] === '_NON_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                // 4\n                throw new ExtendError(/EL01224/, prop, [sTar]);\n            }\n            return;\n\n        // _ERR_ (error)\n        } else if (eType['kind'] === '_ERR_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                // 5\n                throw new ExtendError(/EL01225/, prop, [sTar]);\n            }\n            return;\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' \n            || tType['kind'] === '_OPT_' || tType['kind'] === '_NON_' || tType['kind'] === '_ERR_')) {\n                // 6\n                throw new ExtendError(/EL01226/, prop, [sTar]);\n            }\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (tType['$type'] === 'undefined') return;\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' \n            || tType['kind'] === '_NON_' || tType['kind'] === '_ERR_')) {\n                // 7\n                throw new ExtendError(/EL01227/, prop, [sTar]);\n            }\n        \n            // _EUN_ (enumeration)\n        } else if (eType['kind'] === '_EUM_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                throw new ExtendError(/EL01228/, prop, []);\n            }\n            for (var i = 0; i < eType['list'].length; i++) {\n                if (!_isLiteral(eType['list'][i])) throw new ExtendError(/EL01229/, prop, [i, extendType(eType['list'][i])]);\n            }\n            for (var j = 0; j < tType['list'].length; j++) {\n                if (!_isLiteral(tType['list'][j])) throw new ExtendError(/EL0122A/, prop, [j, extendType(tType['list'][j])]);\n            }\n\n        // _DEF_ (default)\n        } else if (eType['kind'] === '_DEF_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                throw new ExtendError(/EL0122B/, prop, []);\n            }\n            if (!_isLiteral(eType['list'][0])) throw new ExtendError(/EL0122C/, prop, [extendType(eType['list'][0])]);\n            if (!_isLiteral(tType['list'][0])) throw new ExtendError(/EL0122D/, prop,  [extendType(tType['list'][0])]);\n\n        // _ETC_\n        } else {\n            throw new ExtendError(/EL0122E/, prop, [eType['kind']]);\n        }\n\n        // element check\n        var arrTarget = (tType['kind']) ? tType['list'] : [tarType];\n        for (var m = 0; m < arrTarget.length; m++) {\n            var success = false;\n            for (var n = 0; n < eType['list'].length; n++) {\n                try {\n                    if (success) continue;\n                    _execAllow(eType['list'][n], arrTarget[m], opt, pathName);\n                    success = true;\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) throw new ExtendError(/EL0122F/, prop, [m, eType, extendType(arrTarget[m])['$type']]);\n        }\n    }\n    \n    function $classAllow() {\n        var oriObj;\n        var tarObj;\n        if (tType['$type'] === 'class') {         // # class to class\n            if (isProtoChain(tType['ref'], eType['ref'])) return undefined;   // 1.proto check\n            if (opt === 1) {\n                try {\n                    // 생성비교\n                    oriObj = new eType['ref']();\n                    tarObj = new tType['ref']();\n                    return _execAllow(oriObj, tarObj, opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01231/, error, []);\n                }                    \n            }\n            throw new ExtendError(/EL01232/, prop, [opt]);\n\n        } else if (tType['$type'] === 'union') {  // # class to union\n            if (opt === 1) {\n                try {\n                    // 생성비교\n                    oriObj = new eType['ref']();\n                    return _execAllow(oriObj, tType['ref'], opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01233/, error, []);\n                }                    \n            }\n            throw new ExtendError(/EL01234/, prop, [opt]);\n\n        }\n        throw new ExtendError(/EL01235/, prop, [tType]);\n    }\n\n    function $unionAllow() {\n        var list;\n\n        if (tType['$type'] !== 'union') throw new ExtendError(/EL01241/, prop, [tType]);\n        list = getAllProperties(eType['ref']);\n\n        for (var i = 0; i < list.length; i++) {\n            var key = list[i];\n            if (!(key in tType['ref'])) throw new ExtendError(/EL01242/, prop, [key, typeOf(extType[key])]);      \n            try {\n                _execAllow(eType['ref'][key], tType['ref'][key], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01243/, error, [key]);\n            }\n        }\n    }\n\n    function $functionAllow() {\n        if (tType['$type'] !== 'function')  throw new ExtendError(/EL01251/, prop, [tType]);\n        if (eType['ref'] === Function) return;\n        // special type check\n        if (eType['name']) {\n            if (eType['name'] === tarType.name  \n            || eType['name'] === tType['name'] \n            || (tType['func'] && eType['name'] === tType['func'].name)) return;\n            throw new ExtendError(/EL01252/, prop, [eType['name'], tType.name]);\n        }\n        if (eType['func']) {\n            if (typeof tType['func'] !== 'function') throw new ExtendError(/EL01253/, prop, []);\n            if (isProtoChain(tType['func'], eType['func'])) return;\n            throw new ExtendError(/EL01254/, prop, []);\n        }\n\n        if (!eType['return'] && (!eType['params'] || eType['params'].length === 0)) return;\n        if (typeof tType['params'] === 'undefined' && typeof tType['return'] === 'undefined') { \n            throw new ExtendError(/EL01255/, prop, [extendType(eType.params), typeOf(eType.return)]);\n        }\n        if (Array.isArray(eType['params']) && eType['params'].length > 0) {  \n            try {   // params check\n                _execAllow(['_SEQ_'].concat(eType['params']), ['_SEQ_'].concat(tType['params']), opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01256/, error, []);\n            }\n        }\n        if (eType['return']) {            \n            try {   // return check\n                _execAllow(eType['return'], tType['return'], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01257/, error, []);\n            }\n        }\n    }\n}\n\n/**\n * 타입을 검사하여 메세지를 리턴\n * @param {any} extType 검사할 타입 , extType \n * @param {any} target 검사대상\n * @param {number} [opt] 허용옵션 : 0 = 기본, 1 = 타입생성 비교 \n * @param {string} [pathName] '' 공백시 성공\n * @throws {ExtendError}\n */\nfunction _execMatch(extType, target, opt, pathName) {\n    var eType = extendType(extType);\n    var tType = extendType(target);\n    var prop = {};\n    var sExt = eType.toString(), sTar = tType.toString();\n    \n    pathName = pathName ? pathName : 'extType';\n    if (pathName !== 'extType') prop['error path'] = pathName;    // TODO: 'target' 명칭의 중복 수정필요\n    opt = opt || 0;\n\n    // seq, opt 필수 검사\n    if (eType['kind']) {\n        if ((eType['kind'] === '_SEQ_' || eType['kind'] === '_OPT_' || eType['kind'] === '_REQ_' || eType['kind'] === '_EUM_'|| eType['kind'] === '_DEF_') \n        && (typeof eType['ref'] === 'undefined' || eType['list'].length === 0)) {\n            throw new ExtendError(/EL01101/, prop, ['extType', sExt]);\n        }\n    }\n\n    // check match type\n    if (eType['$type'] === 'null') {\n        if (target !== null) throw new ExtendError(/EL01102/, prop, ['null', sTar]);\n    \n    } else if (eType['$type'] === 'undefined') {\n        if (typeof target !== 'undefined') throw new ExtendError(/EL01102/, prop, ['undefined', sTar]);\n    \n    } else if (eType['$type'] === 'string') {\n        if (typeof eType['default'] === 'string' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'string') throw new ExtendError(/EL01102/, prop, ['string', sTar]);\n    \n    } else if (eType['$type'] === 'number') {\n        if (typeof eType['default'] === 'number' && typeof target === 'undefined') target = eType['default']; \n        if (typeof target !== 'number') throw new ExtendError(/EL01102/, prop, ['number', sTar]);\n    \n    } else if (eType['$type'] === 'boolean') {\n        if (typeof eType['default'] === 'boolean' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'boolean') throw new ExtendError(/EL01102/, prop, ['boolean', sTar]);\n    \n    } else if (eType['$type'] === 'bigint') {    // ES6+\n        if (typeof eType['default'] === 'bigint' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'bigint') throw new ExtendError(/EL01102/, prop, ['bigint', sTar]);\n    \n    } else if(eType['$type'] === 'symbol') {    // ES6+\n        if (typeof target !== 'symbol') throw new ExtendError(/EL01102/, prop, ['symbol', sTar]);\n    \n    } else if (eType['$type'] === 'regexp') {\n        if (eType['default'] && eType['default'] !== null && typeof target === 'undefined') target = eType['default'];\n        if (!(target instanceof RegExp)) throw new ExtendError(/EL01102/, prop, ['regexp', sTar]);\n    \n    } else if (eType['$type'] === 'object') {\n        if (tType['$type'] !== 'object') throw new ExtendError(/EL01102/, prop, ['object', sTar]);\n\n    } else if (eType['$type'] === 'array') $arrayMatch();\n    else if (eType['$type'] === 'choice') $choiceMatch();\n    else if (eType['$type'] === 'class') $classMatch();\n    else if (eType['$type'] === 'union') $unionMatch();\n    else if (eType['$type'] === 'function') $functionMatch();        \n    else throw new ExtendError(/EL01103/, prop, []);\n\n    // inner function\n    function $arrayMatch() {\n        if (!Array.isArray(target)) throw new ExtendError(/EL01111/, prop, [sTar]);\n        \n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {      \n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (target.length === 0) throw new ExtendError(/EL01112/, prop, [target.length]);\n            return;\n\n        // _SEQ_ (sequence)\n        } else if (eType['kind'] === '_SEQ_') {\n            if (eType['list'].length > target.length) throw new ExtendError(/EL01113/, prop, [eType['list'].length, tType['list'].length]);    // REVIEW: 세부정보 표현\n            for(var i = 0; i < eType['list'].length; i++) {\n                var _elem   = eType['list'][i];\n                var _tar    = tType['list'][i];\n                if (_isLiteral(_elem)) {\n                    if (!_equalLiternal(_elem, _tar)) throw new ExtendError(/EL01114/, prop, [i, _elem, _tar]);\n                } else {\n                    try {\n                        _execMatch(_elem, _tar, opt, pathName);\n                    } catch (error) {\n                        throw new ExtendError(/EL01115/, error, [i, typeOf(_elem)]);\n                    }\n                }\n            }\n            return;\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (target.length === 0) throw new ExtendError(/EL01116/,  prop, [target.length]);\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (Array.isArray(target) && target.length === 0) return;\n\n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01117/,  prop, [eType['kind']]);\n        }\n        \n\n        // element check\n        for (var k = 0; k < target.length; k++) {\n            var tar = target[k];\n            var success = false;\n            for (var j = 0; j < eType['list'].length; j++) {\n                try {\n                    var elem = eType['list'][j];\n                    if (_isLiteral(elem)) {\n                        if (_equalLiternal(elem, tar)) {\n                            success = true;\n                            break;\n                        }\n                    } else {\n                        _execMatch(elem, tar, opt, pathName);    // REVIEW: pathName + '['+i+']'  이렇게 들어가야 함\n                        success = true;\n                        break;\n                    }\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) {\n                throw new ExtendError(/EL01118/, prop, [eType.toString(), tType.toString()]);\n            }\n        }\n    }\n\n    function $choiceMatch() {\n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            return undefined;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (typeof target !== 'undefined') return undefined;\n            throw new ExtendError(/EL01121/, prop, []);\n\n        // _NON_ (none)\n        } else if (eType['kind'] === '_NON_') {\n            if (typeof target === 'undefined') return undefined;\n            throw new ExtendError(/EL01122/, []);\n            \n        // _ERR_ (error)\n        } else if (eType['kind'] === '_ERR_') {\n            if (target instanceof Error) return undefined;\n            throw new ExtendError(/EL01123/, []);\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (typeof target === 'undefined') return undefined;\n\n        // _EUN_ (enumeration)\n        } else if (eType['kind'] === '_EUM_') {\n            for (var i = 0; i < eType['list'].length; i++) {\n                if (!_isLiteral(eType['list'][i])) throw new ExtendError(/EL01124/, prop, [i, typeOf(eType['list'][i])]);\n            }\n\n        // _DEF_ (default)\n        } else if (eType['kind'] === '_DEF_') {\n            if (!_isLiteral(eType['list'][0])) throw new ExtendError(/EL01125/, prop, [typeOf(eType['list'][0])]);\n            if (typeof target === 'undefined') {\n                target = eType['list'][0];\n                return undefined;\n            }\n            // _IDX_ (index)\n            // } else if (eType['kind'] === '_IDX_') {\n            /**\n             * POINT:\n             * - 검사\n             *  + target object 검사\n             *  -\\+ 파라메터 2개 검사\n             * \n             * - 인덱스 타입 목록 추출\n             * \n             * - 초이스로 변환\n             *  + 허용타입들 + \n             * \n             * this.command = [['_AND_',  { aa: 1 }, ClassA ]]\n             * [['_IDX_', String]]\n             * [['_KEY_', Number, String, '리터럴']]\n             * \n             * this.command = [['_AND_', [['_IDX_', String]], [['_KEY_', Number, String, '리터럴']] ]]\n             * \n             * 마지막에 리턴 및 실패 처리\n             */\n\n            /**\n             * - 검사\n             *  + 타겟의 object 여부 검사\n             *  + 파라메터 1개 이상 검사\n             * - 조건문 처리\n             *  + 둘다 성공해야 성공\n             */\n            // POINT: 개발 해야함\n            // if (eType['list'].length === 0) throw new ExtendError('TODO: IDX 는 검사 타입이 없습니다. 하나이상 있어야 합니다.', prop, []);\n            // if (tType['$type'] !== 'union') throw new ExtendError('TODO: IDX 는 검사 대상이 object(union) 타입만 가능합니다.', prop, ['object', sTar]);\n\n            // for(var i = 0; i < eType['list'].length; i++) {\n            //     var _elem   = eType['list'][i];\n                \n            //     // var _tar    = tType['list'][i];\n            //     try {\n            //         _execMatch(_elem, target);\n            //     } catch (error) {\n            //         throw new ExtendError('TODO: ', error, []);\n            //     }\n                \n            // }\n        \n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01126/,  prop, [eType['kind']]);\n        }\n\n        // element check\n        for (var j = 0; j < eType['list'].length; j++) {\n            try {\n                var elem = eType['list'][j];\n                if (_isLiteral(elem)) {\n                    if (_equalLiternal(elem, target)) return undefined;\n                } else {\n                    return _execMatch(elem, target, opt, pathName);\n                }\n            } catch (error) {\n                continue;\n            }\n        }\n        throw new ExtendError(/EL01127/, prop,[eType, tType]);\n    }\n\n    function $classMatch() {\n        if (tType['$type'] === 'class') {         // # class to class\n            if (typeof eType['ref'] === 'undefined') return undefined;  // 전역 클래스 타입\n            if (isProtoChain(tType['ref'], eType['ref'])) return undefined;\n        } else if (typeof target === 'object') {    // # class to typeof 'object'\n            if (target instanceof extType) return undefined;     \n            if (!_isBuiltFunction(extType) && target !== null && opt === 1) {\n                try {\n                    var subPath = pathName === 'extType' ? '<instance>' : pathName + '<instance>';\n                    return _execMatch(_creator(extType), target, opt, subPath);\n                } catch (error) {\n                    throw new ExtendError(/EL01131/, error);\n                }\n            }\n            throw new ExtendError(/EL01132/, prop, [_typeName(extType)]);\n        }\n        throw new ExtendError(/EL01133/, prop, [tType]);                \n    }\n\n    function $unionMatch() {\n        var list;\n        \n        if (tType['$type'] !== 'union') throw new ExtendError(/EL01141/, prop, [tType]);\n        list = getAllProperties(eType.ref);\n\n        for (var i = 0; i < list.length; i++) {\n            var key = list[i];\n            var listDefType = extendType(extType[key]);\n            // REVIEW: for 위쪽으로 이동 검토!\n            if (key === '_interface' || key === 'isImplementOf') continue;             // 예약어\n            // REVIEW: 재귀로 구현 체크\n            // default 설정\n            if (typeof listDefType['default'] !== 'undefined' && listDefType['default'] !== null && typeof target[key] === 'undefined') target[key] = listDefType['default'];\n            // POINT:\n            // if (target !== null && !(key in target)) throw new ExtendError(/EL01142/, prop, [key, typeOf(extType[key])]);    \n            try {\n                var subPath = pathName +'[\\''+ key+'\\']';\n                _execMatch(extType[key], target[key], opt, subPath);\n            } catch (error) {\n                throw new ExtendError(/EL01143/, error, [key]);\n            }\n        }\n    }\n\n    function $functionMatch() {\n        if (tType['$type'] !== 'function') throw new ExtendError(/EL01151/, prop, [tType]);\n        if (eType['ref'] === Function) return;\n        // special type check\n        if (eType['name']) {\n            if (eType['name'] === target.name \n            || eType['name'] === tType['name'] \n            || (tType['func'] && eType['name'] === tType['func'].name)) return;\n            throw new ExtendError(/EL01152/, prop, [eType['name'], target.name]);\n        }\n        if (eType['func']) {\n            if (typeof tType['func'] !== 'function') throw new ExtendError(/EL01153/, prop, []);\n            if (isProtoChain(tType['func'], eType['func'])) return;\n            throw new ExtendError(/EL01154/, prop, []);\n        }\n\n        if (!eType['return'] && (!eType['params'] || eType['params'].length === 0)) return;\n        if (typeof tType['params'] === 'undefined' && typeof tType['return'] === 'undefined') { \n            throw new ExtendError(/EL01155/, prop, [extendType(eType.params), typeOf(eType.return)]);\n        }\n        // params check\n        if (Array.isArray(eType['params']) && eType['params'].length > 0) {  \n            try {\n                _execAllow(['_SEQ_'].concat(eType['params']), ['_SEQ_'].concat(tType['params']), opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01156/, error, []);\n            }\n        }\n        // return check\n        if (eType['return']) {            \n            try {\n                _execAllow(eType['return'], tType['return'], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01157/, prop, []);\n            }\n        }\n    }\n}\n\n/**\n * Verify that the extension type allows the target type.  \n * \n * @param {any} extType Extension Type\n * @param {any} tarType What type to check\n * @param {number} [opt=0] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {throw?} Exception occurs if extension type does not allow target type\n */\nfunction allowType(extType, tarType, opt) {\n    try {\n        _execAllow(extType, tarType, opt);\n    } catch (error) {\n        throw new ExtendError(/EL0130A/, error);\n    }\n}\nType.allowType = allowType;\n\n/**\n * Verify that the extension type matches the target.  \n * \n * @param {any} extType Extension Type\n * @param {any} target For inspection\n * @param {number} [opt=0] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {throw?} Exception occurs when failing\n */\nfunction matchType(extType, target, opt) {\n    try {\n        _execMatch(extType, target, opt);\n    } catch (error) {\n        throw new ExtendError(/EL0130B/, error);\n    }\n}\nType.matchType = matchType;\n\n/**\n * Determine whether the extension type allows the target type.  \n * \n * @param {any} extType Extension Type\n * @param {any} target Type to be examined\n * @param {number} opt Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {boolean} whether to allow ('true' or 'false')\n */\nfunction isAllowType(extType, target, opt) {\n    try {\n        _execAllow(extType, target, opt);\n    } catch (error) {\n        return false;\n    }\n    return true;\n}\nType.isAllowType = isAllowType;\n\n/**\n * Verify that the extension type matches the target.  \n * \n * @param {any} extType Extension Type\n * @param {any} target Type to be examined\n * @param {number} [opt] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {boolean} Match or not ('true' or 'false')\n */\nfunction isMatchType(extType, target, opt) {\n    try {\n        _execMatch(extType, target, opt);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\nType.isMatchType = isMatchType;\n\nexport default Type;\nexport { Type };","/**** util.js | Util ****/\n//==============================================================\n// import Message from './message.js';\nimport ExtendError from './extend-error.js';\nimport Type from './type.js';\n   \nvar _global = globalThis;\n\nvar OLD_ENV = _global.OLD_ENV ? _global.OLD_ENV : false;    // 커버리지 테스트 역활\n\n/**\n * This is a utility module.\n */\nvar Util = {};\n\n\n// local function\nfunction _isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\n// polyfill\nif (!Array.isArray || OLD_ENV) {\n    Array.isArray = function(p_obj) {\n        return Object.prototype.toString.call(p_obj) === '[object Array]';\n    };\n}\n// REVIEW: 제거해둠, 대부분은 keys 는 기본으로 정의되어 있음\n// if (!Object.keys) {\n//     Object.keys = (function () {\n//         var hasOwnProperty = Object.prototype.hasOwnProperty;\n//         var hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n//         var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n//         var dontEnumsLength = dontEnums.length;\n//         return function (obj) {\n//             if (typeof obj !== 'object' && typeof obj !== 'function' || obj === null) throw new Error('Object.keys called on non-object');\n//             var result = [];\n//             for (var prop in obj) if (hasOwnProperty.call(obj, prop)) result.push(prop);\n//             if (hasDontEnumBug) {\n//               for (var i=0; i < dontEnumsLength; i++) {\n//                 if (hasOwnProperty.call(obj, dontEnums[i])) result.push(dontEnums[i]);\n//               }\n//             }\n//             return result;\n//         }\n//     })()\n// };\n\n/**\n * Returns the nested depth of the array.  \n * REVIEW: 필요성 검토 필요!\n * \n * @param {array} p_elem Array elements\n * @param {number} p_depts Current depth (default: 0)\n * @returns {number} Maximum nested depth of array\n */\nUtil.getArrayDepth = function getArrayDepth(p_elem, p_depts) {\n    var MAX     = 10;\n    var level   = 0;\n    \n    p_depts = p_depts || 0;\n    if (p_elem instanceof Array && MAX > p_depts) {\n        level++;\n        p_depts++;\n        level = level + getArrayDepth(p_elem[0], p_depts);\n    }\n    return level;\n};\n\n/**\n * Creates a 36-digit GUID.  \n * \n * @returns {string} GUID string generated\n */\nUtil.createGuid = function createGuid() {\n    function _p8(s) {  \n        var p = (Math.random().toString(16)+'000000000').substring(2,10);  \n        return s ? '-' + p.substring(0, 4) + '-' + p.substring(4, 8) : p ;  \n    }\n    return _p8() + _p8(true) + _p8(true) + _p8();\n};\n\n/**\n * Deep copy of the object (except prototype)  \n * \n * @param {object} p_target Destination object to copy\n * @returns {object} copied object\n */\nUtil.deepCopy = function deepCopy(p_target) {\n    var nobj;\n\n    if (!_isObject(p_target)) {\n        return p_target;\n    }\n    if (p_target instanceof RegExp) return p_target;\n\n    // 객체인지 배열인지 판단\n    nobj = Array.isArray(p_target) ? [] : {};\n    \n    if (Array.isArray(p_target)) {\n        for (var i = 0; i < p_target.length; i++) {\n            nobj[i] = deepCopy(p_target[i]);\n        }\n    } else {\n        for (var key in p_target) {\n            if (Object.prototype.hasOwnProperty.call(p_target, key)) {\n                nobj[key] = deepCopy(p_target[key]);\n            }\n        }\n    }\n    return nobj;\n};\n\n/**\n * Sets the specified creator to inherit the parent creator.   \n * \n * @function\n * @param {function | object} ctor generator function or object\n * @param {function | object} superCtor Parent generator function or object\n */\nUtil.inherits = (function () {\n    if (typeof Object.create === 'function' && !OLD_ENV) {\n        // implementation from standard node.js 'Util' module\n        return function(ctor, superCtor) {\n            if (superCtor) {\n                ctor.super = superCtor;\n                ctor.prototype = Object.create(superCtor.prototype, {\n                    constructor: {\n                        value: ctor,\n                        writable: true,\n                        configurable: true,\n                        enumerable: false,\n                    }\n                });\n            }\n        };\n    } else {\n        // old school shim for old browsers\n        return function (ctor, superCtor) {\n            if (superCtor) {\n                ctor.super = superCtor;\n                var TempCtor = function () {};\n                TempCtor.prototype = superCtor.prototype;\n                ctor.prototype = new TempCtor();\n                ctor.prototype.constructor = ctor;\n            }\n        };\n    }\n}());\n\n/**\n * Verify that the object implements the specified interface.  \n * Verify that the 'obj' object created with 'ctor' implements the interface provided by 'interfaces'.  \n * If 'ctor._KIND' is 'Interface', use 'allowType()' to confirm.  \n * Otherwise, use 'matchType()' to confirm.  \n * \n * @name implements\n * @function\n * @param {function} p_ctor Generator to be examined\n * @param {object} p_obj object to be examined\n * @param {function?} args List of interfaces to check\n */\nUtil.implements = function(p_ctor, p_obj) {\n    var _interface = [];\n    var addCnt = 0;\n\n    if (typeof p_ctor !== 'function') throw new ExtendError(/EL01401/, null, [typeof p_ctor]);\n    if (!_isObject(p_obj)) throw new ExtendError(/EL01402/, null, [typeof p_obj]);\n\n    if (typeof p_obj._interface === 'undefined') {\n        Object.defineProperty(p_obj, '_interface', {\n            get: function() { \n                return _interface;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n    }    \n\n    if (!p_ctor['_UNION']) p_ctor['_UNION'] = [];\n    \n    for(var i = 2; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'function') {\n            if (p_obj._interface.indexOf(arguments[i]) < 0) { // 중복 검사 \n                p_obj._interface.push(arguments[i]);\n                addCnt++;\n            }\n        } else throw new ExtendError(/EL01403/, null, [i - 2, typeof arguments[i]]);\n    } \n\n    for (var j = 0; j < p_ctor['_UNION'].length; j++) {\n        if (p_obj._interface.indexOf(p_ctor['_UNION'][j]) < 0) {    // 인터페이스 중복 검사 후 등록\n            p_obj._interface.push(p_ctor['_UNION'][j]);\n            addCnt++;\n        }\n    }\n\n    try {\n        var beginIdx = p_obj._interface.length - addCnt;\n        for (var k = beginIdx; k < p_obj._interface.length; k++) {\n            if (p_ctor['_KIND'] === 'interface') {  // 인터페이스 타입과 분리\n                Type.allowType(p_obj._interface[k], p_obj, 1);\n            } else Type.matchType(p_obj._interface[k], p_obj, 1);\n        }\n    } catch (error) { \n        throw new ExtendError(/EL01404/, error, [$typeName(p_obj), $typeName(p_obj._interface[i]), p_ctor['_KIND'] || 'class']);\n    }\n\n    if (typeof p_obj.isImplementOf === 'undefined') {   // 내부 메소드 설정\n        Object.defineProperty(p_obj, 'isImplementOf', {\n            value: $isImplementOf,\n            configurable: false,\n            enumerable: false\n        });\n    }\n\n    // inner function\n    function $isImplementOf(target) {\n        if (typeof target === 'function') {\n            for (var i = 0; i < this._interface.length; i++) {\n                if (this._interface[i] === target) return true;  \n            }\n        } else if (typeof target === 'string') {\n            for (var j = 0; j < this._interface.length; j++) {\n                if (this._interface[j].name === target) return true;  \n            }\n        } else throw new ExtendError(/EL01405/, null, [typeof target]);\n        return false;\n    }\n    function $typeName(obj) {\n        var proto;\n        var constructor;\n        if (typeof obj === 'function') {\n            return obj.name;\n        } else if (typeof obj === 'object') {\n            proto = !OLD_ENV && Object.getPrototypeOf ? Object.getPrototypeOf(obj) : obj.__proto__ ;\n            constructor = proto.constructor;\n            return  constructor.name;\n        } else return 'unknown name';\n    }\n};\n\nexport default Util;\nexport { Util };","/**** trans-queue.js | EventEmitter ****/\n//==============================================================\nimport ExtendError from './extend-error.js';\n// import Util from './util.js';\n// import Message from './message.js';\n  \nvar EventEmitter = (function () {\n    /**\n     * Creates an instance of the class 'EventEmitter'.\n     * @constructs EventEmitter\n     */\n    function EventEmitter() {\n        \n        var $storage = {};\n        var isLog = false;\n\n        /**\n         * Internal object that stores registered events.  \n         * \n         * @private\n         * @member {object}  EventEmitter#$subscribers  \n         */\n        Object.defineProperty(this, '$storage', {\n            get: function() { return $storage; },\n            set: function(nVal) { \n                if (!_isObject(nVal)) throw new ExtendError(/EL01501/, null, [this.constructor.name, nVal]);\n                $storage = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Array that stores registered event names.  \n         * \n         * @protected\n         * @member {object}  EventEmitter#_list  \n         */\n        Object.defineProperty(this, '_list', {\n            get: function() { \n                return Object.keys(this.$storage);\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Array that stores registered event names.\n         * \n         * @member {boolean}  EventEmitter#isLog  \n         */\n        Object.defineProperty(this, 'isLog', {\n            get: function() { return isLog; },\n            set: function(nVal) {\n                if (typeof nVal !== 'boolean') throw new ExtendError(/EL01502/, null, [this.constructor.name, nVal]);\n                isLog = nVal;\n            }\n        });\n    }\n    EventEmitter._NS = 'Common';    // namespace\n\n    // local function\n    function _isString(obj) {    // 공백 아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    /**\n     * Adds a listener (function) for the event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.on = function(p_event, p_listener) {\n        if (!_isString(p_event)) throw new ExtendError(/EL01503/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01504/, null, [typeof p_listener]);\n        \n        if (typeof this.$storage[p_event] !== 'object') {\n            this.$storage[p_event] = [];\n        }\n        if (this.$storage[p_event].indexOf(p_listener) === -1) {\n            this.$storage[p_event].push(p_listener);\n        }\n        // this.$storage[p_event].push(p_listener);\n\n    };\n    /** Alias for method 'on(). */\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n    \n    /**\n     * Adds a one-time function for the event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.once = function(p_event, p_listener) {\n        var self = this;\n\n        if (!_isString(p_event)) throw new ExtendError(/EL01505/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01506/, null, [typeof p_listener]);\n\n        function onceListener() {\n            self.off(p_event, onceListener);\n            p_listener.apply(self, arguments);\n        }\n        this.on(p_event, onceListener);\n    };\n\n    /**\n     * Removes the listener (function) of the specified event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.off = function(p_event, p_listener) {\n        if (!_isString(p_event)) throw new ExtendError(/EL01507/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01508/, null, [typeof p_listener]);\n        \n        if (typeof this.$storage[p_event] === 'object') {\n            var idx = this.$storage[p_event].indexOf(p_listener);\n            if (idx > -1) {\n                this.$storage[p_event].splice(idx, 1);\n            }\n        }\n    };\n    /** Alias of method 'off()'. */\n    EventEmitter.prototype.removeListener = EventEmitter.prototype.off; // 별칭\n\n    /**\n     * Remove all events or all listeners registered for a particular event.  \n     * @param {string} [p_event] Name of the event to be removed (Remove all events if omitted)\n     */\n    EventEmitter.prototype.removeAllListeners = function(p_event) {\n        if (!p_event) {\n            this.$storage = {};  // 초기화\n        }\n        if (typeof this.$storage[p_event] === 'object') {\n            delete this.$storage[p_event];\n        }\n    };\n\n    /**\n     * Runs the listener (function) of the registered event.  \n     * \n     * @param {string} p_event Event Name\n     * @returns {boolean | undefined}  'true' listener execution successful, 'false' execution failed, 'undefined' listener no\n     */\n    EventEmitter.prototype.emit = function(p_event) {\n        var args = [].slice.call(arguments, 1);\n        var listeners = [];\n        // var isListener = false;\n        var isReturn;\n\n        if (!_isString(p_event)) throw new ExtendError(/EL01509/, null, [typeof p_event]);\n\n        if (typeof this.$storage[p_event] === 'object') {\n            listeners = this.$storage[p_event].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                isReturn = listeners[i].apply(this, args);\n                if (isReturn === false) return false;\n            }\n        }\n        if (this.isLog) console.log('['+p_event+'] 이벤트가 밸생하였습니다.');\n\n        return listeners.length > 0 ? true : undefined;\n    };\n\n    return EventEmitter;\n    \n}());\n\nexport default EventEmitter;\nexport { EventEmitter };","/**** i-object.js | IObject ****/\n//==============================================================    \n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \n   \nvar IObject  = (function () {\n    /**\n     * Object interface.  \n     * \n     * @constructs IObject \n     * @interface\n     */\n    function IObject() {\n    }\n    \n    IObject._NS = 'Interface';    // namespace\n    IObject._KIND = 'interface';\n\n    /**\n     * Returns a list of types of objects.  \n     * \n     * @returns {Function[]} Arrangement of types of objects\n     * @abstract\n     */\n    IObject.prototype.getTypes  = function() {\n        throw new ExtendError(/EL02111/, null, ['IObject']);\n    };\n    \n    /**\n     * Verify that the object is an instance of a particular class or interface.  \n     * \n     * @returns {boolean} Instance or 'true' if it's an instance or 'false' if it's not\n     * @abstract\n     */\n    IObject.prototype.instanceOf  = function() {\n        throw new ExtendError(/EL02112/, null, ['IObject']);\n    };\n\n    /**\n     * Compare that the object is the same as the given object.  \n     * \n     * @returns {boolean} If two objects are the same, 'true', or 'false'\n     * @abstract\n     */\n    IObject.prototype.equal  = function() {\n        throw new ExtendError(/EL02113/, null, ['IObject']);\n    };\n    \n    return IObject;\n    \n}());\n\nexport default IObject;\nexport { IObject };","/**** i-marshal.js | IMarshal ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \n   \nvar IMarshal  = (function () {\n    /**\n     * Object control interface.  \n     * \n     * @interface\n     */\n    function IMarshal() {\n\n        /**\n         * Internal property that stores the unique identifier of the object.  \n         * \n         * @member {string} IMarshal#_guid\n         */\n        this._guid = String;\n\n        /**\n         * Internal property that stores the creator type of the object.  \n         * \n         * @member {string} IMarshal#_type REVIEW:\n         */\n        this._type = [['_req_', Function, { $type: 'class' } ]];\n    }\n\n    IMarshal._NS = 'Interface';    // namespace\n    IMarshal._KIND = 'interface';\n    \n    /**\n     * Returns the object literal.  \n     * \n     * @abstract\n     */\n    IMarshal.prototype.getObject = function() {\n        throw new ExtendError(/EL02121/, null, ['IMarshal']);\n    };\n\n    /**\n     * Set the object literal by converting it to an instance.  \n     * \n     * @abstract\n     */\n    IMarshal.prototype.setObject  = function() {\n        throw new ExtendError(/EL02122/, null, ['IMarshal']);\n    };\n\n    return IMarshal;\n    \n}());\n\nexport default IMarshal;\nexport { IMarshal };","/**** i-collection.js | ICollection ****/\n//==============================================================\n// import Message from './message.js';\nimport ExtendError from './extend-error.js';\n\nvar ICollection  = (function () {\n    /**\n     * This is the collection interface.\n     * @constructs ICollection\n     * @interface\n     */\n    function ICollection() {\n    }\n\n    ICollection._KIND = 'interface';\n    ICollection._NS = 'Interface';    // namespace\n\n    /**\n     * Add an element to the collection.  \n     * \n     * @abstract\n     */\n    ICollection.prototype.add  = function() {\n        throw new ExtendError(/EL02161/, null, ['ICollection']);\n    };\n\n    /**\n     * Remove an element from the collection.  \n     * \n     * @abstract\n     */\n    ICollection.prototype.remove  = function() {\n        throw new ExtendError(/EL02162/, null, ['ICollection']);\n    };\n\n    /**\n     * Verify that an element exists in the collection.  \n     * \n     * @returns {boolean} If the element exists, it is 'true', otherwise it is 'false'\n     * @abstract\n     */\n    ICollection.prototype.contains  = function() {\n        throw new ExtendError(/EL02163/, null, ['ICollection']);\n    };\n\n    /**\n     * Returns the index of an element in the collection.  \n     * \n     * @returns {number}  index of element, '-1' without element\n     * @abstract\n     */\n    ICollection.prototype.indexOf  = function() {\n        throw new ExtendError(/EL02164/, null, ['ICollection']);\n    };\n\n    return ICollection;\n    \n}());\n\nexport default ICollection;\nexport { ICollection };","/**** i-collection-property.js | IPropertyCollection ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport ICollection from './i-collection.js';\n   \nvar IPropertyCollection  = (function (_super) {\n    /**\n     * This is the property collection interface.  \n     * \n     * @constructs IPropertyCollection\n     * @interface\n     * @extends  ICollection\n     */\n    function IPropertyCollection() {\n        _super.call(this);\n    }\n    Util.inherits(IPropertyCollection, _super);\n\n    IPropertyCollection._KIND = 'interface';\n    IPropertyCollection._NS = 'Interface';    // namespace\n\n    /**\n     * Returns the property key for the specified index.  \n     * \n     * @returns {boolean} Property key for that index\n     * @abstract\n     */\n    IPropertyCollection.prototype.indexToKey  = function() {\n        throw new ExtendError(/EL02181/, null, ['IPropertyCollection']);\n    };\n\n    return IPropertyCollection;\n    \n}(ICollection));\n\nexport default IPropertyCollection;\nexport { IPropertyCollection };","/**** i-element.js | IElement ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar IElement  = (function () {\n    /**\n     * Element (independent) interface.  \n     * @constructs IElement\n     * @interface\n     */\n    function IElement() {\n        /**\n         * Internal property that stores the name of the element.  \n         * \n         * @member {string} IElement#_name\n         */\n        this._name = String;\n    }\n\n    IElement._NS = 'Interface';    // namespace\n    IElement._KIND = 'interface';\n\n    /**\n     * Creates a copy of the current element.  \n     * \n     * @returns {object} Replicated Elements\n     * @abstract\n     */\n    IElement.prototype.clone  = function() {\n        throw new ExtendError(/EL02131/, null, ['IElement']);\n    };\n\n    return IElement;\n    \n}());\n\nexport default IElement;\nexport { IElement };","/**** i-list.js | IList ****/\n//==============================================================\n// import Message from './message.js';    \n// import ExtendError from './extend-error.js';  \n   \nvar IList  = (function () {\n    /**\n     * List interface.  \n     * \n     * @constructs IList\n     * @interface\n     */\n    function IList() {\n\n        /**\n         * An internal array that stores the data in the list.  \n         * \n         * @member {array} IList#_list\n         */\n        this._list = Array;\n        \n        /**\n         * Returns the number of lists.  \n         * \n         * @member {number} IList#count\n         */\n        this.count = Number;\n    }\n\n    IList._NS = 'Interface';    // namespace\n    IList._KIND = 'interface';\n\n    return IList;\n    \n}());\n\nexport default IList;\nexport { IList };","/**** i-control-list.js | IListControl ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar IListControl  = (function () {\n    /**\n     * List control interface.  \n     * \n     * @constructs IListControl\n     * @interface\n     */\n    function IListControl() {\n    }\n\n    IListControl._NS = 'Interface';    // namespace\n    IListControl._KIND = 'interface';\n    \n    /**\n     * Add an element to the list.  \n     * \n     * @abstract\n     */\n    IListControl.prototype.add = function() {\n        throw new ExtendError(/EL02151/, null, ['IListControl']);\n    };\n\n    /**\n     * Remove an element from the list.  \n     * \n     * @abstract\n     */\n    IListControl.prototype.del  = function() {\n        throw new ExtendError(/EL02152/, null, ['IListControl']);\n    };\n\n    /**\n     * Verify that an element exists in the list.  \n     * \n     * @returns {boolean} If the element exists, it is 'true', otherwise it is 'false'\n     * @abstract\n     */\n    IListControl.prototype.has  = function() {\n        throw new ExtendError(/EL02153/, null, ['IListControl']);\n    };\n\n    /**\n     * Search for elements in the list.  \n     * \n     * @abstract\n     */\n    IListControl.prototype.find  = function() {\n        throw new ExtendError(/EL02154/, null, ['IListControl']);\n    };\n\n    return IListControl;\n    \n}());\n\nexport default IListControl;\nexport { IListControl };","/**** i-serialize.js | ISerialize ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar ISerialize  = (function () {\n    /**\n     * Interface for serialization and deserialization.  \n     * @constructs ISerialize\n     * @interface\n     */\n    function ISerialize() {\n    }\n\n    ISerialize._NS = 'Interface';    // namespace\n    ISerialize._KIND = 'interface';\n\n    /**\n     * Serialize objects, convert them into strings (such as JSON), and export them.  \n     * \n     * @returns {string} Serialized String\n     * @abstract\n     */\n    ISerialize.prototype.output  = function() {\n        throw new ExtendError(/EL02191/, null, ['ISerialize']);\n    };\n\n    /**\n     * Restore objects by loading serialized data.  \n     * \n     * @abstract\n     */\n    ISerialize.prototype.load  = function() {\n        throw new ExtendError(/EL02192/, null, ['ISerialize']);\n    };\n\n    return ISerialize;\n    \n}());\n\nexport default ISerialize;\nexport { ISerialize };","/**** i-collection-array.js | IArrayCollection ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';   \nimport Util from './util.js'; \nimport ICollection from './i-collection.js';\n   \nvar IArrayCollection  = (function (_super) {\n    /**\n     * Array collection interface.  \n     * \n     * @extends ICollection\n     */\n    function IArrayCollection() {\n        _super.call(this);\n    }\n    Util.inherits(IArrayCollection, _super);\n    \n    IArrayCollection._KIND = 'interface';\n    IArrayCollection._NS = 'Interface';    // namespace\n\n    /**\n     * Adds an element to the specified location.  \n     * \n     * @abstract\n     */\n    IArrayCollection.prototype.insertAt  = function() {\n        throw new ExtendError(/EL02171/, null, ['IArrayCollection']);\n    };\n\n    return IArrayCollection;\n    \n}(ICollection));\n\nexport default IArrayCollection;\nexport { IArrayCollection };","/**** namespace-manager.js | NamespaceManager ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Type from './type.js';\nimport Util from './util.js';\nimport IList from './i-list.js';\nimport IListControl from './i-control-list.js';\n// import ISerialize from './i-serialize.js';\n   \nvar NamespaceManager = (function () {\n    /**\n     * Create a Namespace Manager.  \n     * \n     * @constructs NamespaceManager\n     */\n    function NamespaceManager() {\n\n        var $storage = this.$createNsRefer();\n        var _elemTypes  = []; \n        var allowOverlap = false;\n        \n        \n        /**\n         * Namespace repository  \n         * \n         * @member {string} NamespaceManager#$storage\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$storage', {\n            get: function() { return $storage; },\n            set: function(nVal) { $storage = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Namespace element type list.  \n         * Allow all types if empty.  \n         * \n         * @member {array<any>}  NamespaceManager#_elemTypes  \n         * @protected\n         */\n        Object.defineProperty(this, '_elemTypes', {\n            get: function() {\n                return _elemTypes;\n            },\n            set: function(val) {\n                var arrType = Array.isArray(val) ? val : Array.prototype.slice.call(arguments, 0);\n                _elemTypes = arrType;\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Namespace element list.  \n         * \n         * @member {array<string>}  NamespaceManager#_list\n         * @readonly\n         */\n        Object.defineProperty(this, '_list', {\n            get: function() {\n                var storage = this.$storage;\n                var arr = [];\n                var stack = [];\n                findElement(storage);\n                return arr;\n\n                // inner function\n                function findElement(target) { \n                    for (var prop in target) {\n                        if (prop === '_type') continue;\n                        var ns = target[prop];\n                        stack.push(prop);\n                        if (!ns['_type']) {\n                            arr.push(stack.join('.'));\n                        } else findElement(ns);\n                        stack.pop();\n                    }\n                }\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Total number of Namespace elements.  \n         * \n         * @member {number} NamespaceManager#count \n         * @readonly\n         */\n        Object.defineProperty(this, 'count', {\n            get: function() {\n                return this._list.length;\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Set whether to allow duplicate element registration.  \n         * Default is 'false' and does not allow duplication.  \n         * \n         * @member {boolean} NamespaceManager#allowOverlap\n         */\n        Object.defineProperty(this, 'allowOverlap', {\n            get: function() { return allowOverlap; },\n            set: function(val) { \n                if (typeof val !== 'boolean') throw new ExtendError(/EL03311/, null, [typeof val]);\n                allowOverlap = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        // inner variable access\n        // this.__SET$storage = function(val, call) {\n        //     if (call instanceof NamespaceManager) $storage = val;\n        // }\n\n        this._$KEYWORD = ['namespace', 'ns', 'NS', '_type'];    // 금지단어\n\n        Util.implements(NamespaceManager, this);        // strip:\n    }\n    NamespaceManager._UNION = [IList, IListControl];\n    NamespaceManager._NS = 'Meta';\n    \n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _validNamespace(nsName) {  // 네임스페이스 이름 검사\n        var regex = /^[_a-zA-Z]([.]?[_0-9a-zA-Z])*$/;\n        return regex.test(nsName);\n    }\n\n    function _validName(sName) {   // 이름 검사\n        var regex = /^[_a-zA-Z]([_0-9a-zA-Z])*$/;\n        return regex.test(sName);\n    }\n\n    function _getArray(ns) {  // 네임스페이스 문자열 배열로 얻기\n        var sections = [];\n        if (ns === '') return sections;\n        if (typeof ns === 'string') {\n            if (!_validNamespace(ns)) throw new ExtendError(/EL03312/, null, [ns]);\n            sections = ns.split('.');\n        } else if (Array.isArray(ns)) {\n            sections = ns;\n        } else throw new ExtendError(/EL03313/, null, [typeof ns]);\n\n        for (var i = 0; i < sections.length; i++) {\n            var sName =sections[i];\n            if (!_isString(sName)) throw new ExtendError(/EL03314/, null, [i, typeof sName]);\n            if (!_validName(sName)) throw new ExtendError(/EL03315/, null, [i, sName]);\n        }\n        return sections;\n    }\n    \n    /**\n     * Creates a storage initialization object.  \n     * \n     * @returns {object} initialized namespace type object { _type: 'ns'}\n     * @private\n     */\n    NamespaceManager.prototype.$createNsRefer = function() {\n        return { _type: 'ns' };\n    };\n\n    /**\n     * Returns the Namespace path object.  \n     * \n     * @param {string | object} p_elem Factors to obtain the path\n     * @returns {object} Namespace path object {ns: '...', key: '...'}\n     * @protected\n     */\n    NamespaceManager.prototype._getPathObject = function(p_elem) {\n        var fullName;\n        var arr;\n        var key;\n        var nsPath;\n        var obj = {};\n\n        if (_isString(p_elem)) fullName = p_elem;\n        else fullName = this.getPath(p_elem);\n        \n        if (typeof fullName !== 'string') return undefined;\n\n        arr = fullName.split('.');\n        key = arr.pop();\n        nsPath = arr.join('.');\n        obj['ns'] = nsPath;\n        obj['key'] = key;\n        return obj;\n    };\n    \n    /**\n     * Initialize the namespace.  \n     */\n    NamespaceManager.prototype.init = function() {\n        this.$storage = this.$createNsRefer();\n    };\n\n    /**\n     * Add a path to the Namespace.  \n     * \n     * @param {string | array<string>} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     */\n    NamespaceManager.prototype.addNamespace = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n    \n        try {\n            sections = _getArray(p_ns);\n\n            if (this._$KEYWORD.indexOf(sections[0]) > -1) sections = sections.slice(1); // 최상위 에약어 제거\n        \n            for (var i = 0; i < sections.length; i+=1) {\n                // var sName = sections[i];\n                if (typeof parent[sections[i]] === 'undefined') {\n                    parent[sections[i]] = this.$createNsRefer();\n                }\n                parent = parent[sections[i]];\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL03321/, error, []);\n        }\n    };\n\n    /**\n     * Delete the path in the Namespace.  \n     * \n     * @param {string | array<string>} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     */\n    NamespaceManager.prototype.delNamespace = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n    \n        try {\n            sections = _getArray(p_ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName] && parent[sName]['_type'] === 'ns') {\n                    if (i === sections.length - 1) delete parent[sName];\n                    else parent = parent[sName];\n                } else return;\n            }\n        } catch (error) {\n            throw new ExtendError(/EL03322/, error, []);\n        }\n    };\n\n    /**\n     * Returns the path object of the namespace.  \n     * \n     * @param {string | sting[]} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     * @returns {object} path object\n     */\n    NamespaceManager.prototype.path = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n\n        if (!p_ns) return parent;\n        \n        try {\n            sections = _getArray(p_ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName] && parent[sName]['_type'] === 'ns') {\n                    if (i === sections.length - 1) return parent[sName];    \n                    parent = parent[sName];\n                } else return undefined;\n            }\n            return undefined;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03323/, error, []);\n        }\n    };\n\n    /**\n     * Adds an element to the specified namespace path.  \n     * \n     * @param {string} p_fullName Full path to the Namespace\n     * @param {any} p_elem Functions, classes, or objects to be added\n     */\n    NamespaceManager.prototype.add = function(p_fullName, p_elem) {\n        var parent = this.$storage;\n        var sections;\n        var oPath;\n        var key;\n        var ns;\n\n        try {\n            oPath = this._getPathObject(p_fullName);\n            key = oPath['key'];\n            ns = oPath['ns'];\n            sections = _getArray(ns);\n\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);  // []로 감싸서 choice 타입으로 변환됨\n            if (!_validName(key)) throw new ExtendError(/EL03331/, null, [key]);\n            if (!this.allowOverlap && this.getPath(p_elem)) {\n                throw new ExtendError(/EL03332/, null, []);\n            }\n            \n            if (sections.length === 0) {    // 최상위 등록\n                parent[key] = p_elem;\n                return;\n            } else this.addNamespace(ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (i === sections.length - 1) { \n                    parent[sName][key] = p_elem;\n                } else parent = parent[sName];\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL03333/, error, []);\n        }\n    };\n\n    /**\n     * Deletes an element from the specified namespace path.  \n     * \n     * @param {string} p_fullname Full path to the Namespace\n     * @returns {boolean} Successful deletion ('true' or 'false')\n     */\n    NamespaceManager.prototype.del = function(p_fullName) {\n        var parent = this.$storage;\n        var sections;\n\n        try {\n            sections = _getArray(p_fullName);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName]) {\n                    if (i === sections.length - 1) {\n                        delete parent[sName];\n                        return true;\n                    } else parent = parent[sName];\n                } else return false;\n            }\n            return false;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03334/, error, []);\n        }\n\n    };\n\n    /**\n     * Verify that the specified element exists in the Namespace.  \n     * \n     * @param {string | any} p_elem Function, class, or object to check\n     * @returns {boolean} Existence ('true' or 'false')\n     */\n    NamespaceManager.prototype.has = function(p_elem) {\n        if (_isString(p_elem) && this.find(p_elem)) return true;\n        else if (typeof this.getPath(p_elem) === 'string') return true;\n        return false;\n    };\n\n    /**\n     * Retrieves elements from the specified namespace path.  \n     * \n     * @param {string | array<string>} p_fullName Full path to the Namespace\n     * @returns {(object | function)?} Found elements\n     */\n    NamespaceManager.prototype.find = function(p_fullName) {\n        var parent = this.$storage;\n        var sections;\n\n        try {\n            sections = _getArray(p_fullName);   // try undefined\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName]) {\n                    if (i === sections.length - 1) return parent[sName];\n                    else parent = parent[sName];\n                } else return undefined;\n            }\n            return undefined;\n            \n        } catch (error) {\n            return undefined;              \n        }\n    };\n    \n    /**\n     * Returns the path of the specified element in the Namespace.  \n     * (Route of the first element in case of redundancy)  \n     * @param {any} p_elem Elements to find (function or object)\n     * @returns {string?} The path of the element, 'undefined' if not found\n     */\n    NamespaceManager.prototype.getPath = function(p_elem) {\n        var namespace = this.$storage;\n        var stack = [];\n\n        if (!p_elem) throw new ExtendError(/EL03341/, null, [typeof p_elem]);\n\n        if ($findElement(namespace)) {\n            return stack.join('.');\n        } else return undefined;\n\n        // inner function\n        function $findElement(target) { \n            for(var prop in target) {\n                var obj = target[prop];\n                if (obj === 'ns') continue;\n                if (obj && obj['_type'] === 'ns') {\n                    stack.push(prop);\n                    if($findElement(obj)) return true;\n                } else {\n                    if (obj === p_elem) {\n                        stack.push(prop);\n                        return true;\n                    }\n                }\n            }\n            stack.pop();\n            return false;\n        }\n    };\n\n    /**\n     * Serialize the namespace repository and convert it into a string.  \n     * To convert the function to JSON, you must specify a separate 'stringify' function.  \n     * \n     * @param {function?} p_stringify JSON Stringify function (optional)\n     * @param {string?} p_space Setting the blank to apply at the output\n     * @returns {string} serialized string\n     */\n    NamespaceManager.prototype.output = function(p_stringify, p_space) {\n        var arr = [];\n        var obj;\n        var str;\n        var temp = { list: arr };\n\n        try {\n            for (var i = 0; i < this._list.length; i++) {\n                var fullName    = this._list[i];\n                var fun         = this.find(fullName);\n                var nObj        = this._getPathObject(fullName);\n                obj = { \n                    ns: nObj.ns, \n                    key: nObj.key, \n                    full: fullName, \n                    elem: fun\n                };\n                arr.push(obj);\n            }\n\n            if (typeof p_stringify === 'function') str = p_stringify(temp, { space: p_space } );\n            else str = JSON.stringify(temp, null, p_space);\n            return str;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03342/, error, [error]);\n        }\n        \n    };\n\n    /**\n     * Parsing serialized strings and fetching them to the Namespace repository.  \n     * @param {string} p_str serialized string\n     * @param {function?} p_parse  JSON parser function\n     */\n    NamespaceManager.prototype.load = function(p_str, p_parse) {\n        var arr = [];\n        \n        if (!_isString(p_str)) throw new ExtendError(/EL03343/, null, [typeof p_str]);\n        \n        try {\n            if (typeof p_parse === 'function') arr = p_parse(p_str);\n            else arr = JSON.parse(p_str, null);\n            \n            this.init();\n            for (var i = 0; i < arr['list'].length; i++) {\n                var o = arr['list'][i];\n                var fun = o['elem'];\n                this.add(o['full'], fun);\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL03344/, error, [error.message]);\n        }\n    };\n\n    return NamespaceManager;\n}());\n\nexport default NamespaceManager;\nexport { NamespaceManager };","/**** meta-registry.js | MetaRegistry ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport NamespaceManager from './namespace-manager.js';\n       \nvar MetaRegistry = (function () {\n    /**\n     * 'MetaRegistry' is a class responsible for registering and managing meta objects.  \n     * \n     * @constructs MetaRegistry\n     * @static\n     */\n    function MetaRegistry() { \n    }\n\n    MetaRegistry._NS = 'Meta';    // namespace\n\n    // var define\n    var _list = [];\n    var namespace = new NamespaceManager();\n\n    /**\n     * List of meta objects.  \n     * \n     * @member {any[]} MetaRegistry#_list\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, '_list', {\n        get: function() { \n            var arr = [];\n            for (var i = 0; i < _list.length; i++) arr.push(_list[i]);\n            return arr;\n        },\n        configurable: false,\n        enumerable: true,\n    });\n\n    /**\n     * Total number of currently registered meta objects.  \n     * \n     * @member {number} MetaRegistry#count\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, 'count', {\n        get: function() { return _list.length; },\n        configurable: false,\n        enumerable: true,\n    });        \n\n    /**\n     * Namespace manager for meta objects.  \n     * \n     * @member {NamespaceManager} MetaRegistry#namespace\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, 'namespace', {\n        get: function() { return namespace; },\n        configurable: false,\n        enumerable: true,\n    });\n\n    // local function\n    function _isBuiltFunction(obj) {    // 내장함수 여부\n        if (typeof obj === 'function' && (false \n            || obj === Number || obj === String \n            || obj === Boolean || obj === Function\n            || obj === Object || obj === Array\n            || obj === RegExp || obj === Date \n            || obj === Symbol || obj === BigInt\n        )) return true;\n        return false;\n    }\n\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    \n    function _getGuidList(oGuid, arr) {  //객체 배열 리턴\n        arr = arr || [];\n        if (MetaRegistry.isGuidObject(oGuid)) arr.push(oGuid);\n        if (Array.isArray(oGuid)){\n            for(var i = 0; i < oGuid.length; i++) {\n                if (_isObject(oGuid[i])) _getGuidList(oGuid[i], arr);\n            }\n        } else if (_isObject(oGuid)) {\n            for(var prop in oGuid) {\n                if (_isObject(oGuid[prop])) _getGuidList(oGuid[prop], arr);\n            }\n        }\n        return arr;\n    };\n\n    /**\n     * Initializes registered meta objects and namespaces.  \n     */\n    MetaRegistry.init = function() {\n        _list.length = 0;\n        this.namespace.init();\n    };\n\n    /**\n     * Register the meta object and register the creator in the namespace.  \n     * An exception occurs if an object is already registered.   \n     * Register if there is no creator in the Namespace.  \n     * \n     * @param {MetaObject} p_meta Meta object to register\n     */\n    MetaRegistry.register = function(p_meta) {\n        var _ns;\n        var key;\n        var type;\n        // var fullName;\n\n        if (!this.isMetaObject(p_meta)) throw new ExtendError(/EL03211/, null, [p_meta._type, p_meta._guid]);\n        if (this.has(p_meta)) throw new ExtendError(/EL03212/, null, [p_meta._guid]);\n\n        _ns         = p_meta['_ns'] || '';\n        type        = p_meta['_type'];\n        key         = type.name;\n        // fullName    = p_meta['_ns'] && p_meta['_ns'].length > 0 ?  _ns +'.'+key : key;\n\n        _list.push(p_meta);  // 객체 등록\n        this.registerClass(type, _ns, key); // 클래스 등록\n    };\n\n    /**\n     * Undoes the meta object in the registry.  \n     * \n     * @param {MetaObject | string} p_meta Meta object or GUID string\n     * @returns {boolean} successful removal ('true' or 'false')\n     */\n    MetaRegistry.release = function(p_meta) {\n        var guid;\n\n        if (typeof p_meta !== 'object' && typeof p_meta !== 'string') {\n            throw new ExtendError(/EL03213/, null, [typeof p_meta]);\n        }\n\n        guid = typeof p_meta === 'string' ? p_meta : p_meta['_guid'];\n        if (!_isString(guid)) return false;\n\n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) {\n                _list.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Check if the registry has a meta object.  \n     * \n     * @param {object | string} p_oGuid  Object of type GUID or GUID string\n     * @returns {boolean} Existence ('true' or 'false')\n     */\n    MetaRegistry.has = function(p_oGuid) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n\n        if (!_isString(guid)) return false;\n\n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) return true;\n        }\n        return false;\n    };\n    \n    /**\n     * Locate the meta object in the registry.  \n     * \n     * @param {object | string} p_oGuid Object of type GUID or GUID string\n     * @returns {MetaObject?} meta object found, 'undefined' if not found\n     */\n    MetaRegistry.find = function(p_oGuid) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        \n        if (!_isString(guid)) return undefined;\n        \n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) return _list[i];\n        }\n        return undefined;\n    };\n\n    /**\n     * Checks for meta objects.  \n     * \n     * @param {object} p_target Target object\n     * @returns {boolean} Whether it is a meta object ('true' or 'false')\n     */\n    MetaRegistry.isMetaObject = function(p_target) {\n        if (!_isObject(p_target)) return false;\n        if (_isString(p_target['_guid']) && typeof p_target['_type'] === 'function') return true;\n        return false;\n    };\n    \n    /**\n     * Creates a meta object of a GUID object.  \n     * \n     * @param {object} p_oGuid GUID type object\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object\n     * @returns {MetaObject} created meta object\n     */\n    MetaRegistry.createMetaObject = function(p_oGuid, p_origin) {\n        var origin = p_origin ? p_origin : p_oGuid;\n        var args = [null];\n        var type;\n        var ns;\n        var fullName;\n        var coClass;\n        var params;\n        \n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03221/, null, [typeof p_oGuid]);\n        if (!_isString(p_oGuid['_type'])) throw new ExtendError(/EL03222/, null, [typeof p_oGuid['_type']]);\n        if (!_isObject(origin)) throw new ExtendError(/EL03223/, null, [typeof origin]);\n        \n        type        = p_oGuid['_type'];\n        ns          = p_oGuid['_ns'] || '';\n        fullName    =  ns !== '' ? [ns, type].join('.') : type;\n        coClass     = this.getClass(fullName);\n        \n        if (typeof coClass !== 'function') throw new ExtendError(/EL03224/, null, [fullName, typeof coClass]);\n        \n        // params = coClass.hasOwnProperty('_PARAMS') ? coClass['_PARAMS'] : []; // arr\n        params = Object.prototype.hasOwnProperty.call(coClass, '_PARAMS') ? coClass['_PARAMS'] : []; // arr\n        for (var i = 0; i < params.length; i++) {\n            var argName = params[i];\n            var prop = p_oGuid[argName];\n            var obj;\n            obj = _isObject(prop) && prop['$ref'] ? this.findSetObject(prop['$ref'], origin) : prop;\n            if (p_oGuid[argName]) args.push(obj);\n        }\n        return new (Function.prototype.bind.apply(coClass, args));\n    };\n    \n    /**\n     * Creates a reference object for a GUID object.  \n     * \n     * @param {MetaObject} p_meta Meta object\n     * @returns {object} created reference object ('{$ref: 'guid value'}')\n     * @example\n     * var meta = new MetaElement('m1');\n     * obj.onwer = MetaRegistry.createReferObject(meta);\n     * console.log(obj.onwer);          // { $ref : '5337877c-49d6-9add-f35a-7bd31d510d4f' }\n     */\n    MetaRegistry.createReferObject = function(p_meta) {\n        if (!_isObject(p_meta)) throw new ExtendError(/EL03225/, null, [typeof p_meta]);\n        if (!_isString(p_meta['_guid'])) throw new ExtendError(/EL03226/, null, [typeof p_meta['_guid']]);\n        return { $ref: p_meta['_guid'] };\n    };\n\n    /**\n     * Register the function in the Namespace and create a reference object.  \n     * \n     * @param {function} p_target Function or constructor\n     * @returns {object} created namespace reference object ('{$ns: 'Meta.MetaElement'}')\n     * @example\n     * var meta = new MetaElement('m1');\n     * obj.onwer = MetaRegistry.createReferObject(meta);\n     * console.log(obj);                // {onwer: {$ns: 'Meta.MetaElement'}}\n     */\n    MetaRegistry.createNsReferObject = function(p_target) {\n        var fullName;\n        var ns, key;\n\n        if (typeof p_target !== 'function') throw new ExtendError(/EL03227/, null, [typeof p_target]);\n        \n        if (!this.findClass(p_target)) {\n            ns  = p_target['_NS'] || '';\n            key = p_target.name;\n            this.registerClass(p_target, ns, key);\n        }\n        fullName = this.findClass(p_target);\n        return { $ns: fullName };\n    };\n\n    /**\n     * Set the GUID of the meta object in the GUID object.  \n     * - oGuid.$set = meta._guid  \n     * \n     * @param {object} p_oGuid GUID type object\n     * @param {MetaObject} p_meta Meta object\n     * @returns {object} set object\n     * @example\n     * var meta = new MetaElement('m1');    // meta.guid = '5337877c-49d6-9add-f35a-7bd31d510d4f'\n     * var obj = { name: 'm2' };\n     * MetaRegistry.setMetaObject(obj, meta);\n     * console.log(obj);                    // {name: 'm2, $set: '5337877c-49d6-9add-f35a-7bd31d510d4f'}\n     */\n    MetaRegistry.setMetaObject = function(p_oGuid, p_meta) {\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03241/, null, [typeof p_oGuid]);\n        if (!_isObject(p_meta)) throw new ExtendError(/EL03242/, null, [typeof p_meta]);\n        if (!_isString(p_meta['_guid'])) throw new ExtendError(/EL03243/, null,[typeof p_meta['_guid']]);\n        \n        p_oGuid['$set'] = p_meta['_guid'];\n        return p_oGuid;\n    };\n        \n    /**\n     * Validates the GUID object.  \n     * 1. Check if the object has duplicate GUID values  \n     * 2. Determine if an object has a '$ref' value  \n     * 3. Determine if an object has a '$ns' value  \n     * 4. Check the number of '_key' and '_elem' of objects   \n     * \n     * @param {object} p_oGuid GUID object to be inspected\n     * @returns {boolean} Inspection result ('true' or 'false')\n     */\n    MetaRegistry.validObject = function(p_oGuid) {\n        var _this = this;\n        var arrObj;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03251/, null, [typeof p_oGuid]);\n        \n        arrObj = _getGuidList(p_oGuid);\n        if (!$validUniqueGuid() || !$validReference(p_oGuid) || !$validCollection(p_oGuid)) return false;\n        return true;\n\n        // inner function\n        function $findGuid(guid, arr) { // guid 조회\n            for(var i = 0; i < arr.length; i++) {\n                if (arr[i]['_guid'] === guid) return arr[i];\n            }\n            return undefined;\n        }\n        function $validReference(oGuid) { // 참조 검사\n            if (oGuid['$ref'] && !$findGuid(oGuid['$ref'], arrObj)) return false;\n            if (oGuid['$set'] && !$findGuid(oGuid['$set'], arrObj)) return false;\n            if (oGuid['$ns'] && !_this.getClass(oGuid['$ns'])) return false;\n    \n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (_isObject(oGuid[i]) && !$validReference(oGuid[i])) return false;\n                }\n            } else {\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop]) && !$validReference(oGuid[prop])) return false;\n                }\n            }\n            return true;\n        }\n        function $validCollection(oGuid) { // 컬렉션 검사\n            if (Array.isArray(oGuid['_elem']) && Array.isArray(oGuid['_key'])) {\n                if (oGuid['_elem'].length !== oGuid['_key'].length) return false;\n            }\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (_isObject(oGuid[i]) && !$validCollection(oGuid[i])) return false;\n                }\n            } else {\n                for(var prop in p_oGuid) {\n                    if (_isObject(oGuid[prop]) && !$validCollection(oGuid[prop])) return false;\n                }\n            }\n            return true;\n        }\n        function $validUniqueGuid() {    // guid 유일한 값인지 검사\n            for (var i = 0; i < arrObj.length; i++) {\n                for (var j = 0; j < arrObj.length; j++) {\n                    if (arrObj[i]['_guid'] === arrObj[j]['_guid'] && i !== j) return false; // 중복\n                }\n            }\n            return true;\n        }\n    };\n\n    /**\n     * Verify that the target object is a GUID object.  \n     * @param {object} p_target Object to be checked\n     * @returns {boolean} Guid object(`true` or `false`)\n     */\n    MetaRegistry.isGuidObject = function(p_target) {\n        if (!_isObject(p_target)) return false;\n        if (_isString(p_target['_guid']) && _isString(p_target['_type'])) return true;\n        return false;\n    };\n\n    /**\n     * Verify that the source object contains a GUID object.  \n     * \n     * @param {string| object} p_oGuid GUID object or GUID string to check\n     * @param {object | array<object>} p_origin  GUID literal object of query\n     * @returns {boolean} whether to include ('true' or 'false')\n     */\n    MetaRegistry.hasGuidObject = function(p_oGuid, p_origin) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        var arrOrigin = [];\n\n        if (!_isString(guid)) throw new ExtendError(/EL03252/, null, [typeof guid]);\n\n        if (Array.isArray(p_origin)) arrOrigin = p_origin;\n        else arrOrigin.push(p_origin);\n\n        for (var i = 0; i < arrOrigin.length; i++) {\n            var origin = arrOrigin[i];\n            var arrObj = _getGuidList(origin);\n            if (!_isObject(origin)) throw new ExtendError(/EL03253/, null, [i, typeof guid]);\n            for (var j = 0; j < arrObj.length; j++) {\n                if (arrObj[j]._guid === guid) return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Verify that the GUID object contains a reference type element.  \n     * Reference types are '$ref' and '$ns'.  \n     * \n     * @param {object} p_oGuid GUID object to check\n     * @returns {boolean} whether to include ('true' or 'false')\n     */\n    MetaRegistry.hasRefer = function(p_oGuid) {\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03254/, null, [typeof p_oGuid]);\n        if (!this.isGuidObject(p_oGuid)) throw new ExtendError(/EL03255/, null, [p_oGuid['_type'], p_oGuid['_guid']]);\n\n        return $hasRefer(p_oGuid);\n\n        // inner function\n        function $hasRefer(oGuid) {  // 참조 포함 여부\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object' && $hasRefer(oGuid[i])) return true;\n                }\n            } else {\n                if (oGuid['$ref'] && _isString(oGuid['$ref'])) return true;\n                if (oGuid['$ns'] && _isString(oGuid['$ns'])) return true;\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop]) && $hasRefer(oGuid[prop])) return true;\n                }\n            }\n            return false;\n        }\n    };     \n\n    /**\n     * Retrieves the set GUID object from the repository.  \n     * \n     * @param {string | object} p_oGuid GUID object or GUID string to look up\n     * @param {object} p_origin GUID literal object with query target\n     * @returns {MetaObject} meta-objects viewed\n     */\n    MetaRegistry.findSetObject = function(p_oGuid, p_origin) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        var origin = p_origin;\n\n        if (!_isString(guid)) throw new ExtendError(/EL03256/, null, [guid]);\n        if (!_isObject(origin)) throw new ExtendError(/EL03257/, null, [typeof origin]);\n\n        return $findObject(origin);\n        \n        // inner finction\n        function $findObject(oGuid) { // 객체 조회\n            var result;\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object') {\n                        result = $findObject(oGuid[i]);\n                        if(result) return result;\n                    }\n                }\n            } else {\n                if (oGuid['_guid'] && oGuid['_guid'] === guid) {\n                    result = oGuid['$set'] ? MetaRegistry.find(oGuid['$set']) : undefined;\n                    return result;\n                }\n                for(var prop in oGuid) {\n                    if (typeof oGuid[prop] === 'object') {\n                        result = $findObject(oGuid[prop]);\n                        if(result) return result;\n                    } \n                }\n            }\n            return result;\n        }\n    };\n\n        \n\n    /**\n     * Converts the reference element value of a GUID object to a real object reference.  \n     * To be converted: '$ns' is converted to '[Object Object]'.  \n     * @param {object} p_oGuid GUID object to convert\n     * @returns {object} converted meta object\n     */\n    MetaRegistry.transformRefer = function(p_oGuid) {\n        var _this = this;\n        var arrObj;\n        var clone;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03244/, null, [typeof p_oGuid]);\n        \n        arrObj = _getGuidList(p_oGuid);\n        clone = Util.deepCopy(p_oGuid);\n        $linkReference(clone, arrObj);\n        return clone;\n\n        // inner function\n        function $linkReference(oGuid, arr, parentName) {    // 참조 연결\n            parentName = parentName || '';\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object') $linkReference(oGuid[i], arr);\n                }\n            } else {\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop])) {\n                        if (oGuid[prop]['$ns']) {\n                            var ns = _this.getClass(oGuid[prop]['$ns']);\n                            if (typeof ns !== 'function') throw new ExtendError(/EL03245/, null, [parentName, prop]);\n                            oGuid[prop] = ns; // function 타입 연결\n                        } else $linkReference(oGuid[prop], arr, parentName ? parentName +'.'+ prop : prop);\n                    }\n                }\n            }\n        }\n    };\n    \n    /**\n     * Register the creator or object in the specified namespace.  \n     * It registers after performing duplicate checks, and does not store built-in functions (Array, String, Number, etc.).  \n     * \n     * @param {function | object} p_target To be registered (class creator or object)\n     * @param {string} p_ns Namespace name (separated by a dot '.')\n     * @param {string} p_key Destination name (class name or function name), otherwise the last name of the namespace applies.\n     */\n    MetaRegistry.registerClass = function(p_target, p_ns, p_key) {\n        var fullName;\n        \n        if (!(_isObject(p_target) || typeof p_target === 'function')) throw new ExtendError(/EL03231/, null, [typeof p_target]);\n        if (p_ns && typeof p_ns !== 'string') throw new ExtendError(/EL03232/, null, [typeof p_ns]);\n        if (p_key && !_isString(p_key)) throw new ExtendError(/EL03233/, null, [typeof p_key]);\n\n        if (p_key) fullName = p_ns.length > 0 ? p_ns +'.'+ p_key : p_key;\n        else fullName = p_ns;\n        \n        if (_isBuiltFunction(p_target)) return;    // 내장함수 제외\n        if (typeof globalThis[fullName] === 'function') return;\n        \n        if (!this.namespace.find(fullName)) this.namespace.add(fullName, p_target);  // 중복 검사 후 등록\n    };\n    \n    /**\n     * Undoes the registered item in the Namespace.  \n     * \n     * @param {string} p_fullName full path to the namespace ('string')\n     * @returns {boolean} Successful deletion ('true' or 'false')\n     */\n    MetaRegistry.releaseClass = function(p_fullName) {\n        if (!_isString(p_fullName)) throw new ExtendError(/EL03234/, null, [typeof p_fullName]);\n        \n        if (typeof globalThis[p_fullName] === 'function') return true; // 내장함수 & 전역 함수\n        return this.namespace.del(p_fullName);\n    };\n    \n    /**\n     * Finds the specified constructor or object in the Namespace and returns the entire path.  \n     * \n     * @param {function} p_target Creator or object\n     * @returns {string?} Namespace Full path, 'undefined' if not found\n     */\n    MetaRegistry.findClass = function(p_target) {\n        var fullName;\n\n        if (typeof p_target !== 'function') throw new ExtendError(/EL03235/, null, [typeof p_target]);\n        \n        fullName = p_target.name;\n        if (typeof globalThis[fullName] === 'function') return fullName;   // 내장함수 & 전역 함수\n        return this.namespace.getPath(p_target);\n    };\n    \n    /**\n     * Returns a generator or object corresponding to the entire path specified in the Namespace.  \n     * \n     * @param {string} p_fullName Full path to the Namespace\n     * @returns {(object | function)?} corresponding object or creator, 'undefined' if not found\n     */\n    MetaRegistry.getClass = function(p_fullName) {\n        if (!_isString(p_fullName)) throw new ExtendError(/EL03236/, null, [typeof p_fullName]);\n        \n        if (typeof globalThis[p_fullName] === 'function') return globalThis[p_fullName];  // 내장함수 & 전역 함수\n        return this.namespace.find(p_fullName);\n    };\n\n    /**\n     * Pars the serialized JSON string to convert it to 'MetaObject'.  \n     * REVIEW: 필요성 재검토 필요  \n     * @param {string} p_str serialized JSON string\n     * @param {function?} p_parse JSON parser function (default is 'JSON.parse')\n     * @returns {MetaObject} converted meta object\n     */\n    MetaRegistry.loadMetaObject = function(p_str, p_parse) {\n        var obj = p_str;\n        var oGuid;\n        var meta;\n\n        if (typeof p_str !== 'string') throw new ExtendError(/EL03246/, null, [typeof str]);\n\n        obj = (typeof p_parse === 'function') ? p_parse(obj) : JSON.parse(obj, null);\n        if (this.has(obj)) return this.find(obj['_guid']);  // 객체가 존재할 경우\n        if (!this.isGuidObject(obj)) throw new ExtendError(/EL03247/, null, [obj['_type'], obj['_guid']]);\n\n        oGuid = this.transformRefer(obj);\n        meta = this.createMetaObject(oGuid);\n        meta.setObject(oGuid);\n        return meta;\n    };\n    return MetaRegistry;\n}());\n\nexport default MetaRegistry;\nexport { MetaRegistry };","/**** meta-object.js | MetaObject ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Type from './type.js';\nimport Util from './util.js';\nimport IObject from './i-object.js';\nimport IMarshal from './i-marshal.js';\nimport MetaRegistry from './meta-registry.js';\n   \nvar MetaObject  = (function () {\n    /**\n     * Creates an instance of the MetaObject class.  \n     * \n     * @constructs MetaObject\n     * @implements {IObject}\n     * @implements {IMarshal}\n     */\n    function MetaObject() {\n\n        var _guid;\n        var _ns;\n        \n        /**\n         * Internal property that stores the unique identifier of the object.  \n         * \n         * @readonly\n         * @member {string} MetaObject#_guid \n         * @example\n         * var obj = MetaObject();\n         * console.log(obj._guid);      // '5337877c-49d6-9add-f35a-7bd31d510d4f' unique key code\n         */\n        Object.defineProperty(this, '_guid', {\n            get: function() { \n                if (!_guid) _guid = Util.createGuid();\n                return _guid;\n            },\n            set: function(nVal) { _guid = nVal; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Internal property that refers to the generator function of the object.  \n         * \n         * @readonly\n         * @member {function} MetaObject#_type \n         * @example\n         * var obj = new MetaObject();\n         * obj._type === MetaObject;        // true\n         * console.log(typeof obj._type);   // 'function'\n         */\n        Object.defineProperty(this, '_type', {\n            get: function() { \n                var proto = this.__proto__ || Object.getPrototypeOf(this);\n                return proto.constructor;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Indicates the object name space.  \n         * If '_type.NS' is not statically defined, use the parent's namespace as the default.  \n         */\n        Object.defineProperty(this, '_ns', {\n            get: function() { \n                return _ns;\n            },\n            set: function(nVal) { \n                _ns = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n        \n        // 추상클래스 검사\n        if (Object.prototype.hasOwnProperty.call(this._type, '_KIND')) {\n        // if (this._type.hasOwnProperty('_KIND')) {\n            var kind = this._type['_KIND'].toLowerCase();\n            if (['abstract', 'interface', 'enum', 'function'].indexOf(kind) > -1) {\n                throw new ExtendError(/EL03111/, null, [this._type.name, kind]);\n            }\n        }\n\n        // _NS 선언이 없으면 부모의 것을 기본으로 사용!\n        if (this._type && this._type._NS) this._ns = this._type._NS;\n        MetaRegistry.register(this);\n\n        Util.implements(MetaObject, this);          // strip:\n    }\n    MetaObject._UNION = [IObject, IMarshal];\n    MetaObject._NS = 'Meta';\n    MetaObject._PARAMS = [];\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _compare(p_obj1, p_obj2) { // 객체 비교\n        if (p_obj1 === p_obj2) return true;\n        else if (p_obj1 instanceof MetaObject && p_obj2 instanceof MetaObject) {\n            var obj1 = p_obj1.getObject(2);    // _guid, $ref 제외 객체\n            var obj2 = p_obj2.getObject(2);\n            return Type.deepEqual(obj1, obj2);\n        } else if (_isObject(p_obj1) && _isObject(p_obj2)) {\n            return Type.deepEqual(p_obj1, p_obj2);\n        } else return false;\n    }\n\n    /**\n     * Compare the current object with the specified object.  \n     * However, the '_guid' property is excluded from the comparison.  \n     * \n     * @param {object} p_target To compare\n     * @returns {boolean} If two objects are the same, 'true', or 'false'\n     * @example\n     * var meta1 = new MetaObject();\n     * var meta2 = new MetaObject();\n     * meta1.equal(meta2);      // true\n     * meta2.equal(meat1);      // true\n     * meta1 === meta2;         // false\n     * \n     * var obj1 = {a: 1};\n     * var obj2 = {a: 1};\n     * this.equal(obj1, obj2);  // true\n     */\n    MetaObject.prototype.equal = function(p_target) {\n        return _compare(this, p_target);\n    };\n    Object.defineProperty(MetaObject.prototype, 'equal', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the creators of the current object and all the creators of the prototype chain to the array.  \n     * \n     * @returns {array<function>} Array of generator functions (includes first defined constructors sequentially)\n     * @example\n     * var obj = new MetaObject();\n     * var arr = obj.getTypes();\n     * arr[0] === MetaObject;   // true\n     * arr[1] === Object;       // true\n     * console.log(arr.length); // 2\n     * \n     * var elem = new MetaElement('e1');   // Inherited MetaObject \n     * var arr = elem.getTypes();\n     * arr[0] === MetaElement;  // true\n     * arr[1] === MetaObject;   // true\n     * arr[2] === Object;       // true\n     * console.log(arr.length); // 3\n     */\n    MetaObject.prototype.getTypes = function() {\n        return parentFunction(this);\n\n        // inner function\n        function parentFunction(obj) {\n            var list = [];\n            var proto = obj.__proto__ || Object.getPrototypeOf(obj);\n            if (proto) {\n                list.push(proto.constructor);\n                list = list.concat(parentFunction(proto));\n            }\n            return list;\n        }\n    };\n    Object.defineProperty(MetaObject.prototype, 'getTypes', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that the object is an instance of a particular class.  \n     * You can also examine the defined interface type (including '_UNION').  \n     * \n     * @param {Function | string} p_target Class constructor function or class name (string)\n     * @returns {boolean} Whether there is an instance of the specified class ('true' or 'false')\n     * @example\n     * var obj = new MetaObject();\n     * obj.instanceOf('MetaObject');    // true\n     * obj.instanceOf('Object');        // true\n     * obj.instanceOf(MetaObject);      // true\n     * obj.instanceOf(Object);          // true\n     * obj.instanceOf(String);          // false\n     * \n     * var elem = new MetaElement('e1');// Inherited MetaObject \n     * obj.instanceOf('MetaElement');   // true\n     * obj.instanceOf('MetaObject');    // true\n     * obj.instanceOf('Object');        // true\n     * obj.instanceOf(MetaElement);     // true\n     * obj.instanceOf(MetaObject);      // true\n     * obj.instanceOf(Object);          // true\n     * obj.instanceOf(String);          // false\n     */\n    MetaObject.prototype.instanceOf = function(p_target) {\n        var _this = this;\n        var unionTypes = this._interface || this._type._UNION;\n        // var unionTypes = this._type['_UNION'] || [];\n        // var unionTypes = this._interface || [];\n        // var thisTypes = this.getTypes();\n\n        if (typeof p_target === 'string') return $$findFunctionName(p_target);\n        if (typeof p_target === 'function') return $findFunction(p_target);\n        return false;\n\n        // inner function\n        function $findFunction(fun) {\n            var types = _this.getTypes();\n            for (var i = 0; i < types.length; i++) {\n                if (fun === types[i]) return true;\n            }\n            \n            for (var k = 0; k < unionTypes.length; k++) {\n                if (fun ===  unionTypes[k]) return true;\n            }\n            return false;\n        }\n        function $$findFunctionName(funName) {\n            var types = _this.getTypes();\n            for (var i = 0; i < types.length; i++) {\n                if (funName === types[i].name) return true;\n            }\n            for (var k = 0; k < unionTypes.length; k++) {\n                if (funName === unionTypes[k].name) return true;\n            }\n            return false;\n        }\n    };\n    Object.defineProperty(MetaObject.prototype, 'instanceOf', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object} Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    MetaObject.prototype.getObject = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var obj = {};\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1) obj['_guid'] = this._guid;\n        obj['_type'] = this._type._NS ? this._type._NS +'.'+ this._type.name : this._type.name;\n        return obj;                        \n    };\n    Object.defineProperty(MetaObject.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid object literal of type of GUID to set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    MetaObject.prototype.setObject  = function(p_oGuid, p_origin) {\n        var origin = p_origin ? p_origin : p_oGuid;\n        var fullName = this._type._NS ? this._type._NS +'.'+ this._type.name : this._type.name;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03112/, null, [typeof p_oGuid]);\n        if (p_oGuid['_type'] !== fullName) throw new ExtendError(/EL03113/, null, [p_oGuid['_type'], fullName]);\n        \n        if (MetaRegistry.isGuidObject(origin)) {\n            if (!origin['__TRANSFORM_REFER']) {\n                origin = MetaRegistry.transformRefer(origin);\n                origin['__TRANSFORM_REFER'] = true;\n            }\n        } else throw new ExtendError(/EL03114/, null, [p_origin._type, p_origin._guid]);\n        \n        MetaRegistry.setMetaObject(p_oGuid, this); // $set attach\n    };\n    Object.defineProperty(MetaObject.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    return MetaObject;\n\n}());\n\nexport default MetaObject;\nexport { MetaObject };","/**** meta-element.js | MetaElement ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport IElement from './i-element.js';\nimport MetaObject from './meta-object.js';\n   \nvar MetaElement  = (function (_super) {\n\n    /**\n     * Creates an instance of the MetaElement class.  \n     * \n     * @constructs MetaElement\n     * @extends MetaObject\n     * @implements {IElement}\n     * @param {string} p_name Name of the element\n     */\n    function MetaElement(p_name) {\n        _super.call(this);\n        \n        var _name;\n\n        /**\n         * Internal property that stores the name of the element.  \n         * \n         * @readonly\n         * @member {string} MetaElement#_name\n         */\n        Object.defineProperty(this, '_name', {\n            get: function() { return _name; },\n            set: function(nVal) {\n                if (typeof nVal !== 'string') throw new ExtendError(/EL03121/, null, [typeof val]);\n                if (nVal.length === 0) throw new ExtendError(/EL03122/, null, []);\n                _name = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        this._name = p_name;\n\n        Util.implements(MetaElement, this);     // strip:\n    }\n    Util.inherits(MetaElement, _super);\n    \n    MetaElement._UNION = [IElement];\n    MetaElement._NS = 'Meta';           // namespace\n    MetaElement._PARAMS = ['name'];     // creator parameter\n    \n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object  \n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    MetaElement.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['name'] = this._name;\n        return obj;\n    };\n    Object.defineProperty(MetaElement.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    MetaElement.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        // var origin = p_origin ? p_origin : p_oGuid;\n        this._name = p_oGuid['name'];\n        // this.__SET$_name(p_oGuid['name'], this);\n    };\n    Object.defineProperty(MetaElement.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Creates a replica of the current object.  \n     * \n     * @returns {MetaElement} Replicated Objects\n     */\n    MetaElement.prototype.clone  = function() {\n        var clone = new MetaElement(this._name);\n        return clone;\n    };\n    Object.defineProperty(MetaElement.prototype, 'clone', {\n        enumerable: false\n    });\n\n    return MetaElement;\n\n}(MetaObject));\n\n\nexport default MetaElement;\nexport { MetaElement };","/**** base-collection.js | BaseCollection ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError from './extend-error.js';\nimport Util from './util.js';\nimport Type from './type.js';\nimport EventEmitter from './event-emitter.js';\nimport ICollection from './i-collection.js';\nimport IList from './i-list.js';\nimport MetaRegistry from './meta-registry.js';\nimport MetaObject from './meta-object.js';\n\nvar BaseCollection  = (function (_super) {\n    /**\n    * The creator that creates the collection.  \n    * This is an abstract class, and you must create an instance through inheritance.  \n    * \n    * @abstract\n    * @extends MetaObject\n    * @constructs BaseCollection\n    * @implements {ICollection}\n    * @implements {IList}\n    * @param {object} [p_owner] Objects that own this collection\n    */\n    function BaseCollection(p_owner) { \n        _super.call(this);\n        \n        // private variable\n        var $KEYWORD = [];\n        var $event = new EventEmitter();\n        var $elements = [];\n        var $descriptors = [];\n        \n        // protected variable\n        var _owner ;\n        var _elemTypes  = [];\n\n        /** \n         * List of strings used as reserved words in the collection.  \n         * \n         * @private\n         * @member {array<string>}  BaseCollection#$KEYWORD\n         */\n        Object.defineProperty(this, '$KEYWORD', {\n            get: function() { return $KEYWORD; },\n            set: function(newVal) { $KEYWORD = $KEYWORD.concat(newVal); },  // REVIEW: 예약어 중복\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Object that handles events. Used to register and generate various events in the collection.\n         * \n         * @private\n         * @member {EventEmitter} BaseCollection#$event  \n         */\n        Object.defineProperty(this, '$event', {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * An arrangement that stores elements of a collection.\n         * \n         * @private\n         * @member {string} BaseCollection#$elements\n         */\n        Object.defineProperty(this, '$elements', {\n            get: function() { return $elements; },\n            set: function(nVal) { $elements = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * A descriptor array that defines the getter and setter methods for each collection element.  \n         * \n         * @private\n         * @member {string} BaseCollection#$descriptors\n         */\n        Object.defineProperty(this, '$descriptors', {\n            get: function() { return $descriptors; },\n            set: function(nVal) { $descriptors = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n\n\n        /** \n         * Owned object of the collection.  \n         * \n         * @protected \n         * @member {object} BaseCollection#_owner  \n         */\n        Object.defineProperty(this, '_owner', {   \n            get: function() { return _owner; },\n            set: function(val) { _owner = val; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Defines the type constraints for the collection element.  \n         * \n         * @protected \n         * @member {array<any>}  BaseCollection#_elemTypes  \n         */\n        Object.defineProperty(this, '_elemTypes', {\n            get: function() { return _elemTypes; },\n            set: function(val) {\n                var arrType = Array.isArray(val) ? val : Array.prototype.slice.call(arguments, 0);\n                var reg = /^_[a-zA-Z]+_/;\n                var arr1 = arrType.length > 0 && typeof arrType[0] === 'string' ? arrType[0] : '';\n                \n                // var result;\n                if (arrType.length > 0  && reg.exec(arr1) === null) {\n                    arrType = ['_req_'].concat(arrType);\n                }\n                   \n                // result = reg.exec(val);\n                // if (result !== null) return result[0].toUpperCase();\n                _elemTypes = arrType;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * An array that stores a list of elements in a collection.  \n         * \n         * @protected \n         * @readonly\n         * @member {Array}  BaseCollection#_list  \n         */\n        Object.defineProperty(this, '_list', {\n            get: function() {\n                var arr = [];\n                for (var i = 0; i < $elements.length; i++) arr.push(this.$elements[i]);\n                return arr;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * Returns the number of elements in the collection.  \n         * \n         * @readonly\n         * @member {number} BaseCollection#count \n         */\n        Object.defineProperty(this, 'count', {\n            get: function() { return this.$elements.length; },\n            enumerable: false,\n            configurable: false\n        });\n\n        /**\n         * Returns the number of elements in the collection.  \n         * @readonly\n         * @member {number} BaseCollection#length \n         */\n        Object.defineProperty(this, 'length', {\n            get: function() { return this.$elements.length; },\n            enumerable: false,\n            configurable: false\n        });\n\n\n        /**\n         * Event handler called before adding an element to a collection.  \n         * \n         * @event BaseCollection#onAdd\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Elements to add\n         * @param {number}      p_callback.p_idx Index of the element to be added\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onAdd', {\n            set: function(fun) { this.$event.on('add', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after an element is added.  \n         * \n         * @event BaseCollection#onAdded\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Added elements\n         * @param {number}      p_callback.p_idx Index of added element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onAdded', {\n            set: function(fun) { this.$event.on('added', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler called before removing an element.  \n         * \n         * @event BaseCollection#onRemove\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Elements to be removed\n         * @param {number}      p_callback.p_idx Index of the element to be removed\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onRemove', {\n            set: function(fun) { this.$event.on('remove', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after the element is removed.  \n         * \n         * @event BaseCollection#onRemoved\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Removed elements\n         * @param {number}      p_callback.p_idx Index of removed element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onRemoved', {\n            set: function(fun) { this.$event.on('removed', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n        * Event handler called before deleting all elements.  \n        * \n        * @event BaseCollection#onClear\n        * @param {function}    p_callback\n        * @param {this}        p_callback.p_this Current collection objects\n        */\n        Object.defineProperty(this, 'onClear', {\n            set: function(fun) { this.$event.on('clear', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after all elements are deleted.  \n         * \n         * @event BaseCollection#onCleared\n         * @param {function}    p_callback\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onCleared', {\n            set: function(fun) { this.$event.on('cleared', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler called before the element changes.  \n         * \n         * @event BaseCollection#onChanging \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_nextValue New value to be changed\n         * @param {any}         p_callback.prevValue Existing value\n         * @param {any}         p_callback.index Index of the element to be changed\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onChanging', {\n            set: function(fun) { this.$event.on('changing', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after an element changes.  \n         * \n         * @event BaseCollection#onChanged \n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_nextValue New value changed\n         * @param {any}         p_callback.p_prevValue Existing value\n         * @param {number}      p_callback.p_index Index of changed element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onChanged', {\n            set: function(fun) { this.$event.on('changed', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // object settging\n        this._owner = p_owner || null;\n\n        // 예약어 등록\n        this.$KEYWORD = ['$event', '_owner', '$elements', '$descriptors', '_elemTypes', '_list', 'count', 'length', '$KEYWORD'];\n        this.$KEYWORD = ['onAdd', 'onAdded', 'onRemove', 'onRemoved', 'onClear', 'onCleared', 'onChanging', 'onChanged'];\n        this.$KEYWORD = ['_onAdd', '_onAdded', '_onRemove', '_onRemoved', '_onClear', '_onCleared', '_onChanging', '_onChanged'];\n        this.$KEYWORD = ['_getPropDescriptor', 'getObject', 'setObject', '_guid', '_type'];\n        this.$KEYWORD = ['_remove', 'remove', 'removeAt', 'contains', 'indexOf', 'add', 'clear'];\n\n        Util.implements(BaseCollection, this);          // strip:\n    }\n    Util.inherits(BaseCollection, _super);\n    \n    BaseCollection._UNION = [ICollection, IList];\n    BaseCollection._NS = 'Collection';\n    BaseCollection._PARAMS = ['_owner'];\n    BaseCollection._KIND = 'abstract';\n    \n    /**\n     * Internal method that runs before adding an element.  \n     * \n     * @param {any} p_elem .Elements to be added\n     * @param {number} p_idx Where the element will be added\n     * @listens BaseCollection#onAdd\n     */\n    BaseCollection.prototype._onAdd = function(p_elem, p_idx) {\n        return this.$event.emit('add', p_elem, p_idx, this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onAdd', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs after an element is added.  \n     * @param {any} p_elem Added elements\n     * @param {number} p_idx Location where the element was added\n     * @listens BaseCollection#onAdded\n     */\n    BaseCollection.prototype._onAdded = function(p_elem, p_idx) {\n        return this.$event.emit('added', p_elem, p_idx, this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onAdded', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs before removing an element.  \n     * \n     * @param {any} p_elem Elements to be removed\n     * @param {number} p_idx Where the element will be removed\n     * @listens BaseCollection#onRemove\n     */\n    BaseCollection.prototype._onRemove = function(p_elem, p_idx) {\n        return this.$event.emit('remove', p_elem, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onRemove', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs after the element is removed.  \n     * \n     * @param {any} p_elem Removed elements\n     * @param {number} p_idx Where the element was removed\n     * @listens BaseCollection#onRemoved\n     */\n    BaseCollection.prototype._onRemoved = function(p_elem, p_idx) {\n        return this.$event.emit('removed', p_elem, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onRemoved', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs before deleting all elements.\n     * \n     * @listens BaseCollection#onClear\n     */\n    BaseCollection.prototype._onClear = function() {\n        return this.$event.emit('clear', this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onClear', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs after all elements are deleted.  \n     * \n     * @listens BaseCollection#onCleared\n     */\n    BaseCollection.prototype._onCleared = function() {\n        return this.$event.emit('cleared', this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onCleared', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs before the element changes.\n     * \n     * @param {any} p_nVal New value to be changed\n     * @param {any} p_oVal Existing value\n     * @param {number} p_idx Location of the element to be changed\n     * @listens BaseCollection#onChanging\n     */\n    BaseCollection.prototype._onChanging = function(p_nVal, p_oVal, p_idx) {\n        return this.$event.emit('changing', p_nVal, p_oVal, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onChanging', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs after the element changes.  \n     * \n     * @param {any} p_nVal New value changed\n     * @param {any} p_oVal Existing value\n     * @param {number} p_idx Location of changed element\n     * @listens BaseCollection#onChanged\n     */        \n    BaseCollection.prototype._onChanged = function(p_nVal, p_oVal, p_idx) {\n        return this.$event.emit('changed', p_nVal, p_oVal, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onChanged', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method to set the attribute descriptor for a particular index.  \n     * \n     * @protected\n     * @param {number} p_idx Where to specify properties\n     * @param {boolean} p_enum whether the property is enumerable\n     */\n    BaseCollection.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                var oVal = this.$elements[p_idx];\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                this._onChanging(nVal, oVal, p_idx);  // before event\n                this.$elements[p_idx] = nVal;\n                this._onChanged(nVal, oVal, p_idx);   // after event\n            },\n            configurable: true,\n            enumerable: p_enum,\n        };\n    };\n    Object.defineProperty(BaseCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method to remove elements from the collection.  \n     * \n     * @abstract \n     */\n    BaseCollection.prototype._remove  = function() {\n        throw new ExtendError(/EL04111/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure(_guid:Yes, $ref:Yes)  \n     * mode=1 : Redundant structure(_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure(_guid:No,  $ref:No)   \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    BaseCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        var _elems = [];\n        \n        if (!Type.deepEqual(this.$event['$storage'], {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (vOpt < 2 && vOpt > -1 && this._owner) {\n            obj['_owner'] = MetaRegistry.createReferObject(this._owner);\n        }\n        for (var i = 0; i < this._elemTypes.length; i++) {\n            var elem = this._elemTypes[i];\n            if (typeof elem === 'function') _elems.push(MetaRegistry.createNsReferObject(elem));\n            else _elems.push(elem);\n        }\n        obj['_elemTypes'] = _elems;\n        return obj;                        \n    };\n    Object.defineProperty(BaseCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.\n     * \n     * @param {object} p_oGuid Object literal of type of GUID to set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    BaseCollection.prototype.setObject = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var owner;\n        var origin = p_origin ? p_origin : p_oGuid;\n        \n        this.clear();\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        if (p_oGuid['_owner']) {\n            owner = MetaRegistry.findSetObject(p_oGuid['_owner']['$ref'], origin);\n            if (!owner) throw new ExtendError(/EL04112/, null, [p_oGuid['_owner']['$ref']]);    // Branch:\n            this._owner = owner;            \n        }\n        if (Array.isArray(p_oGuid['_elemTypes']) && p_oGuid['_elemTypes'].length > 0){\n            this._elemTypes = p_oGuid['_elemTypes'];\n        }\n    };\n    Object.defineProperty(BaseCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Remove the element from the collection.  \n     * \n     * @param {any} p_elem Elements to be removed\n     * @returns {number} Index of removed element. If element does not exist, return -1\n     */\n    BaseCollection.prototype.remove = function(p_elem) {\n        var idx = this.$elements.indexOf(p_elem);\n\n        if (idx >= 0 && this.removeAt(idx)) return idx;\n        return -1;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'remove', {\n        enumerable: false\n    });\n    \n    /**\n     * Remove the element in the specified location.\n     * \n     * @param {number} p_pos Where to remove\n     * @returns {boolean} Element Removal Successful\n     */\n    BaseCollection.prototype.removeAt = function(p_pos) {\n        var elem;\n        \n        if (typeof p_pos !== 'number') throw new ExtendError(/EL04113/, null, [typeof p_pos]);\n        if (p_pos < 0 ) return false;\n        \n        elem = this.$elements[p_pos];\n        if (this.$elements.length > p_pos) {\n            // this._onRemove(p_pos, elem);\n            if (this._onRemove(elem, p_pos) === false) return false;\n\n            if (!this._remove(p_pos)) return false;\n            this._onRemoved(elem, p_pos);\n            return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that a particular element exists in the collection.  \n     * \n     * @param {any} p_elem Factors to check\n     * @returns {boolean} Element Existence\n     */\n    BaseCollection.prototype.contains = function(p_elem) {\n        return this.$elements.indexOf(p_elem) > -1;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'contains', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of an element.  \n     * \n     * @param {any} p_elem Elements to search for\n     * @returns {number} Index of element, return -1 if element is missing\n     */\n    BaseCollection.prototype.indexOf = function(p_elem) {\n        return this.$elements.indexOf(p_elem);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'indexOf', {\n        enumerable: false\n    });\n\n    /** \n     * Adds an element to the collection.\n     * \n     * @abstract \n     */\n    BaseCollection.prototype.add  = function() {\n        throw new ExtendError(/EL04114/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'add', {\n        enumerable: false\n    });\n    \n    /**\n     * Initialize the collection.  \n     * \n     * @abstract \n     */\n    BaseCollection.prototype.clear  = function() {\n        throw new ExtendError(/EL04115/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    return BaseCollection;\n    \n}(MetaObject));\n\nexport default BaseCollection;\nexport { BaseCollection };","/**** collection-array.js | ArrayCollection ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport Type from './type.js';\nimport IArrayCollection from './i-collection-array.js';\nimport MetaRegistry from './meta-registry.js';\nimport MetaObject from './meta-object.js';\nimport { BaseCollection } from './base-collection.js';\n\nvar ArrayCollection  = (function (_super) {\n    /**\n     * Creates an instance of an ArrayCollection class.  \n     * \n     * @constructs ArrayCollection\n     * @implements {IArrayCollection}\n     * @extends BaseCollection\n     * @param {object} [p_owner] Objects that own this collection\n     */\n    function ArrayCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        this.$KEYWORD = ['insertAt'];\n\n        Util.implements(ArrayCollection, this);     // strip:\n    }\n    Util.inherits(ArrayCollection, _super);\n    \n    ArrayCollection._UNION = [IArrayCollection];\n    ArrayCollection._NS = 'Collection';     // namespace\n    ArrayCollection._PARAMS = ['_owner'];   // creator parameter\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    \n    /**\n     * Internal method to remove the specified element from the collection.  \n     * \n     * @protected\n     * @param {number} p_pos Index of the element to be removed\n     * @returns {boolean} Success or failure\n     */\n    ArrayCollection.prototype._remove = function(p_pos) {\n        var count = this.count - 1;   // [idx] 포인트 이동\n        \n        this.$elements.splice(p_pos, 1);\n        this.$descriptors.splice(p_pos, 1);\n        \n        if (p_pos < count) {\n            for (var i = p_pos; i < count; i++) {   // 참조 변경(이동)\n                var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                Object.defineProperty(this, [i], desc);\n            }\n            delete this[count];     // 마지막 idx 삭제\n        } else {\n            delete this[p_pos];     // idx 삭제 (끝일 경우)\n        }\n        return true;\n    };\n    Object.defineProperty(ArrayCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal \n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    ArrayCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.$descriptors.length > 0) {\n            obj['_desc'] = [];\n            for (var i = 0; i < this.$descriptors.length; i++) {\n                obj['_desc'].push(this.$descriptors[i]);\n            }\n        }\n        obj['_elem'] = [];\n        for (var j = 0; j < this.$elements.length; j++) {\n            var elem = this.$elements[j];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(ArrayCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.   \n     * \n     * @param {object} p_oGuid object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    ArrayCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        var origin = p_origin ? p_origin : p_oGuid;\n\n        if (Array.isArray(p_oGuid['_desc']) && p_oGuid['_desc'].length > 0) {\n            for (var i = 0; i < p_oGuid['_desc'].length; i++) {\n                this.$descriptors.push(p_oGuid['_desc'][i]);\n            }\n        }\n        for(var j = 0; j < p_oGuid['_elem'].length; j++) {\n            Object.defineProperty(this, [j], this._getPropDescriptor(j));\n        }\n\n        for(var k = 0; k < p_oGuid['_elem'].length; k++) {\n            var elem = p_oGuid['_elem'][k];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements.push(obj);\n                \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL04211/, null, [k, elem['$ref']]);\n                this.$elements.push(meta);  \n            \n            } else this.$elements.push(elem);\n        }\n    };        \n    Object.defineProperty(ArrayCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the collection.  \n     * \n     * @param {any} p_elem Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {number} Location of the added element\n     */\n    ArrayCollection.prototype.add = function(p_elem, p_desc) {\n        var pos = this.count;\n        this.insertAt(pos, p_elem, p_desc);\n        return pos;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * Initialize the collection.  \n     * Empty the $elements and $descriptors arrays upon initialization.  \n     * \n     * @returns {boolean} Additional success\n     */\n    ArrayCollection.prototype.clear = function() {\n        try {\n            if (this._onClear() === false) return false;\n\n            for (var i = 0; i < this.count; i++) delete this[i];\n            this.$elements = [];\n            this.$descriptors = [];\n            \n            this._onCleared();    // event\n            return true;\n\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the specified location.  \n     * \n     * @param {number} p_pos Where to add\n     * @param {any} p_elem Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {boolean} Additional success\n     */\n    ArrayCollection.prototype.insertAt = function(p_pos, p_elem, p_desc) {\n        try {\n            var index   = this.count;\n\n            if (typeof p_pos !== 'number') throw new ExtendError(/EL04212/, null, [typeof p_pos]);\n            if (index < p_pos) throw new ExtendError(/EL04213/, null, [p_pos, index]);\n            if (p_pos < 0) throw new ExtendError(/EL04214/, null, [p_pos]);\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);\n            if (_isObject(p_desc) && p_desc.configurable === false) {\n                console.warn(Message.get('WS011', ['configurable = false', 'element']));\n                // Message.warn('WS011', ['configurable = false', 'element']); \n            }\n            if (_isObject(p_desc) && p_desc.writable === false ) {\n                console.warn(Message.get('WS011', ['writable = false', 'element']));\n                // Message.warn('WS011', ['writable = false', 'element']);\n            }\n\n            if (this._onAdd(p_elem, p_pos) === false) return false;\n\n            // data process\n            this.$elements.splice(p_pos, 0, p_elem);            \n            this.$descriptors.splice(p_pos, 0, p_desc);\n            // property define\n            if (_isObject(p_desc)) {\n                Object.defineProperty(this, [p_pos], p_desc);\n            } else {\n                Object.defineProperty(this, [p_pos], this._getPropDescriptor(p_pos));\n            }\n            // reindexing\n            for (var i = p_pos + 1; i < this.count; i++) {\n                var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                Object.defineProperty(this, [i], desc);\n            }\n            this._onAdded(p_elem, p_pos);\n            \n            return true;\n\n        } catch (error) {\n            throw new ExtendError(/EL04215/, error, [p_pos, p_elem]);\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the result of executing the function provided to all elements to the new array.  \n     * \n     * @param {Function} callback callback function to convert, (elem: T, index: number, list: T[]) => U\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {Array} Array of converted elements\n     */\n    ArrayCollection.prototype.map  = function(callback, thisArg) {\n        var newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04116/, null, [typeof callback]);\n    \n        for (var i = 0; i < this.length; i++) {\n            newArr[i] = callback.call(thisArg || this, this[i], i, this._list);\n        }\n        return newArr;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'map', {\n        enumerable: false\n    });\n\n    /**\n     * Returns a new array containing only elements that satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback callback function to filter, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {Array} Array of filtered elements\n     */\n    ArrayCollection.prototype.filter = function (callback, thisArg) {\n        let newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04117/, null, [typeof callback]);\n\n        for (let i = 0; i < this.length; i++) {\n            if (callback.call(thisArg || this, this[i], i, this._list)) {\n                newArr.push(this[i]);\n            }\n        }\n        return newArr;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'filter', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the accumulated results by executing the reducer function provided to all elements.  \n     * \n     * @param {Function} callback callback function to be reduced, (acc: U, element: T, index: number, list: T[]) => U\n     * @param {any} initialValue Initial value\n     * @returns  {any} Accumulated final result value\n     */\n    ArrayCollection.prototype.reduce = function(callback, initialValue) {\n        var acc = initialValue;\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04118/, null, [typeof callback]);\n\n        for(let i=0; i < this.length; i++) {\n            acc = acc ? callback(acc, this[i], i, this._list) : this[i];\n        }\n        return acc;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'reduce', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be searched, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} The first element that satisfies the condition, 'undefined' if not found\n     */\n    ArrayCollection.prototype.find = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL04119/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            if ( callback.call(thisArg || this, this[i], i, this._list) ) {\n                return this[i];\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'find', {\n        enumerable: false\n    });\n\n    /**\n     * Run the function provided for all elements.  \n     * \n     * @param {Function} callback Callback function to run, (elem: T, index: number, list: T[]) => void\n     * @param {any} thisArg Object to use as this inside the callback function\n     */\n    ArrayCollection.prototype.forEach = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041110/, null, [typeof callback]);\n        \n        for (var i = 0; i <this.length; i++) {\n            callback.call(thisArg || this, this[i], i, this._list);\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'forEach', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that at least one element matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean} 'true' if more than one element satisfies the condition, or 'false' if not\n     */\n    ArrayCollection.prototype.some = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041111/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            if (callback.call(thisArg || this, this[i], i, this._list)) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'some', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that all elements satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean}  'true' if all elements meet the conditions, 'false' otherwise\n     */\n    ArrayCollection.prototype.every = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041112/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++) {\n            if (!callback.call(thisArg || this, this[i], i, this._list)) return false;\n        }\n        return true;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'every', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} Index of the first element that satisfies the condition, if not found '-1'\n     */\n    ArrayCollection.prototype.findIndex = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041113/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            if ( callback.call(thisArg || this, this[i], i, this._list) ) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'findIndex', {\n        enumerable: false\n    });\n\n\n    return ArrayCollection;\n\n}(BaseCollection));\n\nexport default ArrayCollection;\nexport { ArrayCollection };","/**** collection-property.js | PropertyCollection ****/\n//==============================================================\nimport Message from './message.js';\nimport ExtendError from './extend-error.js';\nimport Type from './type.js';\nimport Util from './util.js';\nimport IPropertyCollection from './i-collection-property.js';\nimport MetaRegistry from './meta-registry.js';\nimport MetaObject from './meta-object.js';\nimport BaseCollection from './base-collection.js';\n\nvar PropertyCollection  = (function (_super) {\n    /**\n     * Creates an instance of the class 'PropertyCollection'.  \n     * \n     * @constructs PropertyCollection\n     * @implements {IPropertyCollection}\n     * @extends BaseCollection\n     * @param {object} p_owner Objects that own this collection\n     */\n    function PropertyCollection(p_owner) {\n        _super.call(this, p_owner); \n\n        var $keys = [];\n\n        /**\n         * Returns all key values in the collection to an array.\n         * \n         * @member {string} PropertyCollection#$keys\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$keys', {\n            get: function() { return $keys; },\n            set: function(nVal) { $keys = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // /** \n        //  * 컬렉션 요소의 키값들\n        //  * @readonly\n        //  * @member {array<string>} PropertyCollection#_keys \n        //  */\n        // Object.defineProperty(this, '_keys',\n        // {\n        //     get: function() {\n        //         var arr = [];\n        //         for (var i = 0; i < _keys.length; i++) arr.push(_keys[i]);\n        //         return arr;\n        //     },\n        //     configurable: false,\n        //     enumerable: false\n        // });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['$keys', 'indexOf', 'exists', 'indexToKey'];\n\n        Util.implements(PropertyCollection, this);      // strip:\n    }\n    Util.inherits(PropertyCollection, _super);\n    \n    PropertyCollection._UNION = [IPropertyCollection];\n    PropertyCollection._NS = 'Collection';      // namespace\n    PropertyCollection._PARAMS = ['_owner'];    // creator parameter\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    /**\n     * Internal method to remove the specified element from the collection.  \n     * \n     * @protected\n     * @param {number} p_pos Location of the element to be removed\n     * @returns {boolean} Removal successful\n     */\n    PropertyCollection.prototype._remove = function(p_pos) {\n        var count = this.count - 1;\n        var propName = this.indexToKey(p_pos);   // number 검사함\n        \n        delete this[propName];      // 프로퍼티 삭제\n\n        this.$elements.splice(p_pos, 1);\n        this.$keys.splice(p_pos, 1);\n        this.$descriptors.splice(p_pos, 1);\n        \n        if (p_pos < count) {        // 참조 자료 변경\n            for (var i = p_pos; i < count; i++) {\n                // var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                propName = this.indexToKey(i);\n                Object.defineProperty(this, [i], this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i, false));\n                Object.defineProperty(this, propName, this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i));\n            }\n            delete this[count];     // 마지막 idx 삭제\n        } else {\n            delete this[p_pos];     // idx 삭제 (끝일 경우)\n        }\n        return true;\n    };\n    Object.defineProperty(PropertyCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode\n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    PropertyCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.$descriptors.length > 0) {\n            obj['_desc'] = [];\n            for (var i = 0; i < this.$descriptors.length; i++) {\n                obj['_desc'].push(this.$descriptors[i]);\n            }\n        }\n        obj['_elem'] = [];\n        for (var j = 0; j < this.count; j++) {\n            var elem = this.$elements[j];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        obj['_key'] = [];\n        for (var k = 0; k < this.$keys.length; k++) {\n            var key = this.$keys[k];\n            obj['_key'].push(key);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(PropertyCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid Object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    PropertyCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        var origin = p_origin ? p_origin : p_oGuid;\n\n        if (p_oGuid['_elem'].length !== p_oGuid['_key'].length) throw new ExtendError(/EL04221/, null, [p_oGuid['_elem'].length, p_oGuid['_key'].length]);\n        \n        if (Array.isArray(p_oGuid['_desc']) && p_oGuid['_desc'].length > 0) {\n            if (p_oGuid['_elem'].length !== p_oGuid['_desc'].length) throw new ExtendError(/EL04222/, null, [p_oGuid['_elem'].length, p_oGuid['_desc'].length]);\n            for (var i = 0; i < p_oGuid['_desc'].length; i++) {\n                this.$descriptors.push(p_oGuid['_desc'][i]);\n            }\n        }\n\n        this.$keys = [];\n        for(var j = 0; j < p_oGuid['_key'].length; j++) {\n            var key = p_oGuid['_key'][j];\n            this.$keys.push(key);\n            Object.defineProperty(this, [j], this._getPropDescriptor(j, false));\n            Object.defineProperty(this, key, this._getPropDescriptor(j));\n        }\n\n        for(var k = 0; k < p_oGuid['_elem'].length; k++) {\n            var elem = p_oGuid['_elem'][k];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements.push(obj);\n            \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL04223/, null, [k, elem['$ref']]);\n                this.$elements.push(meta);\n                \n            } else this.$elements.push(elem);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    // /**\n    //  * 프로퍼티 컬렉션의 인덱스 값을 조회합니다.\n    //  * @param {string | any} p_target 키 또는 요소\n    //  * @param {boolean} [p_isKey=false] 키로 조회 여부\n    //  * @returns {number} 없을시 -1\n    //  */\n    // PropertyCollection.prototype.indexOf = function(p_target, p_isKey) {\n    //     var isKey = p_isKey || false;\n        \n    //     if (!isKey) return this.$elements.indexOf(p_target);\n    //     else {\n    //         if (!_isString(p_target))  throw new ExtendError(/EL04224/, null, [typeof p_target]);\n    //         return this.$keys.indexOf(p_target);\n    //     }\n    // };\n    \n    /**\n     * Adds an element to the collection.  \n     * \n     * @param {string} p_key Key of the element\n     * @param {any} [p_elem] Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {number} Location of the added element\n     */\n    PropertyCollection.prototype.add = function(p_key, p_elem, p_desc) {\n        try {\n            var index   = this.count;\n            var regex = /^[a-zA-Z_][a-zA-Z0-9_]*/;\n            // var types = ['_req_'];\n\n            // types = [types.concat(this._elemTypes)];\n            \n            if (!_isString(p_key)) throw new ExtendError(/EL04225/, null, [p_key]);\n            if(!regex.test(p_key)) throw new ExtendError(/EL04226/, null, [p_key, regex.source]);\n            if (this.$KEYWORD.indexOf(p_key) > -1) throw new ExtendError(/EL04227/, null, [p_key]);\n            if (this.exists(p_key)) throw new ExtendError(/EL04228/, null, [p_key]);\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);\n            // if (this._elemTypes.length > 0) Util.matchType(types, p_elem);\n            if (_isObject(p_desc) && p_desc.configurable === false) {\n                console.warn(Message.get('WS011', ['configurable = true', 'element']));\n                // Message.warn('WS011', ['configurable = true', 'element']);\n            }\n            if (_isObject(p_desc) && p_desc.writable === false ) {\n                console.warn(Message.get('WS011', ['writable = true', 'element']));\n                // Message.warn('WS011', ['writable = true', 'element']);\n            }\n\n            // this._onAdd(index, p_elem);\n            if (this._onAdd(p_elem, index) === false) return -1;\n\n            // data process\n            this.$elements.push(p_elem);\n            this.$keys.push(p_key);\n            this.$descriptors.push(p_desc);\n            // property define\n            if (_isObject(p_desc)) {\n                Object.defineProperty(this, [index], p_desc);\n                Object.defineProperty(this, p_key, p_desc);\n            } else {\n                Object.defineProperty(this, [index], this._getPropDescriptor(index, false));\n                Object.defineProperty(this, p_key, this._getPropDescriptor(index));\n            }\n            this._onAdded(p_elem, index);\n\n            return index;\n\n        } catch (error) {\n            throw new ExtendError(/EL04229/, error, [p_key, p_elem]);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * Initialize the collection.  \n     * Empty $elements, $descripts, and $keys at initialization.  \n     * \n     * @returns {boolean} Additional success\n     */\n    PropertyCollection.prototype.clear = function() {\n        try {\n            \n            if (this._onClear() === false) return false;\n            \n            for (var i = 0; i < this.count; i++) {\n                var propName = this.indexToKey(i);\n                delete this[i];\n                delete this[propName];\n            }\n            this.$elements = [];\n            this.$descriptors = [];\n            this.$keys = [];\n            \n            this._onCleared();\n            return true;\n\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * Query the index based on the key.  \n     * \n     * @param {string} p_key Key to view\n     * @returns {number} Index corresponding to key, return '-1' if not present\n     */\n    PropertyCollection.prototype.keyToIndex = function(p_key) {\n        if (!_isString(p_key))  throw new ExtendError(/EL04224/, null, [typeof p_key]);\n        return this.$keys.indexOf(p_key);\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'keyToIndex', {\n        enumerable: false\n    });\n\n    /**\n     * Query the key based on the index value.  \n     * \n     * @param {number} p_idx Index to view\n     * @returns {string} Key values for that index\n     */\n    PropertyCollection.prototype.indexToKey = function(p_idx) {\n        if (typeof p_idx !== 'number') throw new ExtendError(/EL0422A/, null, [typeof p_idx]);\n        return this.$keys[p_idx];\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'indexToKey', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that the specified key exists in the collection.  \n     * \n     * @param {string} p_key Key value to check\n     * @returns {boolean} If the key exists, it is 'true', otherwise it is 'false'\n     */\n    PropertyCollection.prototype.exists = function(p_key) {\n        if (!_isString(p_key)) throw new ExtendError(/EL0422B/, null, [typeof p_key]);\n        return Object.prototype.hasOwnProperty.call(this, p_key);\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'exists', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the result of executing the function provided to all elements to the new array.  \n     * \n     * @param {Function} callback Callback function to convert, (elem: T, index: number, key: string, list: T[]) => U\n     * @param {any} thisArg Objects to use as this inside the callback function\n     * @returns  {Array} New arrangement of transformed elements\n     */\n    PropertyCollection.prototype.map  = function(callback, thisArg) {\n        var newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04116/, null, [typeof callback]);\n    \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            newArr[i] = callback.call(thisArg || this, this[i], i, key, this._list);\n        }\n        return newArr;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'map', {\n        enumerable: false\n    });\n\n    /**\n     * Returns a new array containing only elements that satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to filter, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Objects to use as this inside the callback function\n     * @returns  {Array} Array of filtered elements\n     */\n    PropertyCollection.prototype.filter = function (callback, thisArg) {\n        let newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04117/, null, [typeof callback]);\n\n        for (let i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if (callback.call(thisArg || this, this[i], i, key, this._list)) {\n                newArr.push(this[i]);\n            }\n        }\n        return newArr;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'filter', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the accumulated results by executing the reducer function provided to all elements.  \n     * \n     * @param {Function} callback callback function to be reduced, (acc: U, element: T, index: number, key: string, list: T[]) => U\n     * @param {any} initialValue Initial value\n     * @returns  {any} Array of filtered elements\n     */\n    PropertyCollection.prototype.reduce = function(callback, initialValue) {\n        var acc = initialValue;\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04118/, null, [typeof callback]);\n\n        for(let i=0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            acc = acc ? callback(acc, this[i], i, key, this._list) : this[i];\n        }\n        return acc;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'reduce', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the first element that matches the conditions of the provided function.\n     * \n     * @param {Function} callback Callback function to be searched, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} The first element that satisfies the condition, 'undefined' if not found\n     */\n    PropertyCollection.prototype.find = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL04119/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if ( callback.call(thisArg || this, this[i], i, key, this._list) ) {\n                return this[i];\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'find', {\n        enumerable: false\n    });\n\n    /**\n     * Run the function provided for all elements.  \n     * \n     * @param {Function} callback callback function to be executed, (elem: T, index: number, key: string, list: T[]) => void\n     * @param {any} thisArg Object to use as this inside the callback function\n     */\n    PropertyCollection.prototype.forEach = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041110/, null, [typeof callback]);\n        \n        for (var i = 0; i <this.length; i++) {\n            var key = this.indexToKey(i);\n            callback.call(thisArg || this, this[i], i, key, this._list);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'forEach', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that at least one element matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean}  'true' if more than one element satisfies the condition, or 'false' if not\n     */\n    PropertyCollection.prototype.some = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041111/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            var key = this.indexToKey(i);\n            if (callback.call(thisArg || this, this[i], i, key, this._list)) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'some', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that all elements satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean} 'true' if all elements meet the conditions, 'false' otherwise\n     */\n    PropertyCollection.prototype.every = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041112/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            var key = this.indexToKey(i);\n            if (!callback.call(thisArg || this, this[i], i, key, this._list)) return false;\n        }\n        return true;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'every', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} Index of the first element that satisfies the condition, if not found '-1'\n     */\n    PropertyCollection.prototype.findIndex = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041113/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if ( callback.call(thisArg || this, this[i], i, key, this._list) ) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'findIndex', {\n        enumerable: false\n    });        \n\n    return PropertyCollection;\n\n}(BaseCollection));\n\nexport default PropertyCollection;\nexport { PropertyCollection };","/**** message.js | _L.Common.Message ****/\n//==============================================================\nimport  defaultCode  from './locales/default.json';\nimport  { Message }  from 'logic-core';\n\nconst localesPath = './locales';    // 상대 경로\n\nMessage.importMessage(defaultCode, localesPath);\n\nexport default Message;\nexport { Message };","/**** i-control-export.js | _L.Interface.IExportControl ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\n\nvar IExportControl  = (function () {\n    /**\n     * 내보내기 제어 인터페이스 입니다.\n     * @constructs _L.Interface.IExportControl\n     * @interface\n     */\n    function IExportControl() {\n    }\n\n    IExportControl._NS = 'Interface';    // namespace\n    IExportControl._KIND = 'interface';\n\n    /**\n     * 대상을 내보냅니다. (쓰기)\n     * @returns {any}\n     * @abstract\n     */\n    IExportControl.prototype.write  = function() {\n        throw new ExtendError(/EL02211/, null, ['IExportControl']);\n    };\n\n    return IExportControl;\n    \n}());\n\nexport default IExportControl;\nexport { IExportControl };","/**** i-control-group.js | _L.Interface.IGroupControl ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\n\nvar IGroupControl  = (function () {\n    /**\n     * 그룹 제어 인터페이스 입니다.\n     * @constructs _L.Interface.IGroupControl\n     * @interface\n     */\n    function IGroupControl() {\n    }\n\n    IGroupControl._NS = 'Interface';    // namespace\n    IGroupControl._KIND = 'interface';\n\n    /**\n     * 병합합니다.\n     * @abstract\n     */\n    IGroupControl.prototype.merge  = function() {\n        throw new ExtendError(/EL02231/, null, ['IGroupControl']);\n    };\n\n    /**\n     * 복사합니다.\n     * @returns {any}\n     * @abstract\n     */\n    IGroupControl.prototype.copy  = function() {\n        throw new ExtendError(/EL02232/, null, ['IGroupControl']);\n    };\n\n    return IGroupControl;\n    \n}());\n\nexport default IGroupControl;\nexport { IGroupControl };","/**** i-control-import.js | _L.Interface.IImportControl ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\n\nvar IImportControl  = (function () {\n    /**\n     * 가져오기 제어 인터페이스 입니다.\n     * @constructs _L.Interface.IImportControl\n     * @interface\n     */\n    function IImportControl() {\n    }\n\n    IImportControl._NS = 'Interface';    // namespace\n    IImportControl._KIND = 'interface';\n\n    /**\n     * 대상을 가져옵니다. (읽기)\n     * @abstract\n     */\n    IImportControl.prototype.read  = function() {\n        throw new ExtendError(/EL02221/, null, ['IImportControl']);\n    };\n\n    return IImportControl;\n    \n}());\n\nexport default IImportControl;\nexport { IImportControl };","/**** i-control-schema.js | _L.Interface.ISchemaControl ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\n\nvar ISchemaControl  = (function () {\n    /**\n     * 스키마 제어 인터페이스 입니다.\n     * @constructs _L.Interface.ISchemaControl\n     * @interface\n     */\n    function ISchemaControl() {\n    }\n\n    ISchemaControl._NS = 'Interface';    // namespace\n    ISchemaControl._KIND = 'interface';\n\n    /**\n     * 스키마를 가져옵니다.\n     * @abstract\n     */\n    ISchemaControl.prototype.readSchema  = function() {\n        throw new ExtendError(/EL02241/, null, ['ISchemaControl']);\n    };\n\n    /**\n     * 스키마를 내보냅니다. \n     * @returns {any}\n     * @abstract\n     */\n    ISchemaControl.prototype.writeSchema  = function() {\n        throw new ExtendError(/EL02242/, null, ['ISchemaControl']);\n    };\n\n    return ISchemaControl;\n    \n}());\n\nexport default ISchemaControl;\nexport { ISchemaControl };","/**** i-transaction.js | _L.Interface.ITransaction ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\n\nvar ITransaction  = (function () {\n    /**\n     * 트렌젝션 인터페이스 입니다.\n     * @constructs _L.Interface.ITransaction\n     * @interface\n     */\n    function ITransaction() {\n    }\n\n    ITransaction._NS = 'Interface';    // namespace\n    ITransaction._KIND = 'interface';\n\n    /**\n     * 변경을 수락합니다. (commit)\n     * @abstract\n     */\n    ITransaction.prototype.acceptChanges  = function() {\n        throw new ExtendError(/EL02251/, null, ['ITransaction']);\n    };\n\n    /**\n     * 변경을 거부합니다. (rollback)\n     * @abstract\n     */\n    ITransaction.prototype.rejectChanges  = function() {\n        throw new ExtendError(/EL02252/, null, ['ITransaction']);\n    };\n\n    return ITransaction;\n    \n}());\n\nexport default ITransaction;\nexport { ITransaction };","/**** trans-queue.js | _L.Collection.TransactionQueue ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { MetaObject } from 'logic-core';\nimport { ArrayCollection } from 'logic-core';\n\nvar TransactionQueue  = (function () {\n    /**\n     * 트랜젝션 큐\n     * @constructs _L.Collection.TransactionQueue\n     * @param {ArrayCollection} p_collection 배열컬렉션\n     */\n    function TransactionQueue(p_collection) {\n        \n        var queue = [];\n        var collection;\n\n        /**\n         * 큐 목록\n         * @readonly\n         * @member {array<object>} _L.Collection.TransactionQueue#queue\n         */\n        Object.defineProperty(this, 'queue', \n        {\n            get: function() { return queue; },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 대상 컬랙션\n         * @member {Number} _L.Collection.TransactionQueue#count \n         */\n        Object.defineProperty(this, 'collection', \n        {\n            get: function() { return collection; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaObject)) {\n                    throw new ExtendError(/EL04321/, null, []);\n                }\n                if (!(nVal.instanceOf(ArrayCollection))) {\n                    throw new ExtendError(/EL04322/, null, []);\n                }\n                collection = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        this.collection = p_collection;\n    }\n\n    TransactionQueue._NS = 'Collection';    // namespace\n    TransactionQueue._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 초기화\n     */\n    TransactionQueue.prototype.init  = function() {\n        this.queue.length = 0;\n    };\n\n    /**\n     * 커밋\n     */\n    TransactionQueue.prototype.commit  = function() {\n        this.init();\n    };\n\n    /**\n     * 롤백\n     */\n    TransactionQueue.prototype.rollback  = function() {\n        var pos, obj;\n        \n        for (var i = this.queue.length - 1; i >= 0; i--) {\n            obj = this.queue[i];\n            if(obj.cmd === 'I') {\n                // pos = this.collection.indexOf(obj.ref);\n                pos = obj.pos;\n                this.collection.removeAt(pos);\n            } else if(obj.cmd === 'D') {\n                pos = obj.pos;\n                this.collection.insertAt(pos, obj.clone);\n            } else if(obj.cmd === 'U') {\n                // pos = this.collection.indexOf(obj.ref);\n                pos = obj.pos;\n                this.collection.removeAt(pos);\n                this.collection.insertAt(pos, obj.clone);\n            } else throw new ExtendError(/EL04323/, null, [obj.cmd]);\n        }\n        this.init();\n    };\n\n    /**\n     * 추가\n     * @param {number} p_pos 위치\n     * @param {object} p_target 대상\n     * @param {string} p_etc 기타\n     */\n    TransactionQueue.prototype.insert  = function(p_pos, p_target, p_etc) {\n        this.queue.push({\n            cmd: 'I',\n            pos: p_pos,\n            ref: p_target,\n            clone: null,\n            etc: p_etc || ''\n        });\n    };\n    \n    /**\n     * 삭제\n     * @param {number} p_pos 위치\n     * @param {object} p_clone 복제한 객체\n     * @param {string} p_etc 기타\n     */\n    TransactionQueue.prototype.delete  = function(p_pos, p_clone, p_etc) {\n        this.queue.push({\n            cmd: 'D',\n            pos: p_pos,\n            ref: null,\n            clone: p_clone,\n            etc: p_etc || ''\n        });\n    };\n\n    /**\n     * 수정\n     * @param {number} p_pos 위치\n     * @param {object} p_target 대상\n     * @param {object} p_clone 복제한 객체\n     * @param {string} p_etc 기타\n     */\n    TransactionQueue.prototype.update  = function(p_pos, p_target, p_clone, p_etc) {\n        this.queue.push({\n            cmd: 'U',\n            pos: p_pos,\n            ref: p_target,\n            clone: p_clone,\n            etc: p_etc || ''\n        });\n    };\n    \n    /**\n     * 변경 내역 조회\n     * @returns {array<object>}\n     */\n    TransactionQueue.prototype.select  = function() {\n        return this.queue;\n    };\n\n    return TransactionQueue;\n\n}());\n\nexport default TransactionQueue;\nexport { TransactionQueue };","/**** collection-transaction.js | _L.Collection.TransactionCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { ArrayCollection } from 'logic-core';\nimport { TransactionQueue } from './trans-queue.js';\n\nvar TransactionCollection  = (function (_super) {\n    /**\n     * 트랜젝션 컬렉션 클래스\n     * @constructs _L.Collection.TransactionCollection\n     * @extends _L.Collection.ArrayCollection\n     * @param {object} p_owner 소유객체\n     */\n    function TransactionCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        var _transQueue = new TransactionQueue(this);\n        var autoChanges = false;\n\n        /**\n         * 트렌젝션 큐\n         * @readonly\n         * @member {TransactionQueue} _L.Collection.TransactionCollection#_transQueue\n         */\n        Object.defineProperty(this, '_transQueue',\n        {\n            get: function() { return _transQueue; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 자동 변경 유무 (기본값: 사용 false)\n         * @member {boolean} _L.Collection.TransactionCollection#autoChanges\n         */\n        Object.defineProperty(this, 'autoChanges', \n        {\n            get: function() { return autoChanges; },\n            set: function(nVal) { \n                if (typeof nVal !== 'boolean') {\n                    throw new ExtendError(/EL04311/, null, [this.constructor.name ,typeof nVal]);\n                }\n                autoChanges = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 변경 유무\n         * @readonly\n         * @member {TransactionCollection} _L.Collection.TransactionCollection#hasChanges\n         */\n        Object.defineProperty(this, 'hasChanges',\n        {\n            get: function() { return _transQueue.queue.length > 0; },\n            configurable: false,\n            enumerable: false\n        });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_transQueue', 'autoChanges', 'hasChanges'];\n        this.$KEYWORD = ['commit', 'rollback'];\n\n    }\n    Util.inherits(TransactionCollection, _super);\n\n    TransactionCollection._NS = 'Collection';      // namespace\n    TransactionCollection._PARAMS = ['_owner'];    // creator parameter\n\n    /**\n     * 트랜젝션 컬렉션 프로퍼티 기술자 \n     * @protected\n     * @param {number} p_idx 인덱스\n     */\n    TransactionCollection.prototype._getPropDescriptor = function(p_idx) {\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                this._transQueue.update(p_idx, nVal, this.$elements[p_idx]); \n                this.$elements[p_idx] = nVal;\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    };\n    Object.defineProperty(TransactionCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    TransactionCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        // var origin = p_origin ? p_origin : obj;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.autoChanges !== false) obj['autoChanges'] = this.autoChanges;\n        return obj;                        \n    };\n    Object.defineProperty(TransactionCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    TransactionCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        this._transQueue.init();\n        if (p_oGuid['autoChanges']) this.autoChanges = p_oGuid['autoChanges'];\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * 지정 위치에 요소 삭제\n     * @param {number} p_pos 인덱스 위치\n     * @returns {boolean}\n     */\n    TransactionCollection.prototype.removeAt = function(p_pos) {\n        if (!this.autoChanges) this._transQueue.delete(p_pos, this[p_pos]);\n        return _super.prototype.removeAt.call(this, p_pos);\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * 전체 초기화\n     */\n    TransactionCollection.prototype.clear = function() {\n        _super.prototype.clear.call(this);\n        this._transQueue.init();\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * 지정 위치에 요소 추가\n     * @param {number} p_pos 인덱스 위치\n     * @param {any} p_elem 요소\n     * @param {object} [p_desc] 프로퍼티 기술자 객체\n     * @returns {boolean}\n     */\n    TransactionCollection.prototype.insertAt = function(p_pos, p_elem, p_desc) {\n        if (!this.autoChanges) this._transQueue.insert(p_pos, p_elem);\n        return _super.prototype.insertAt.call(this, p_pos, p_elem, p_desc);\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    /**\n     * 변경사항 반영\n     */\n    TransactionCollection.prototype.commit = function() {\n        this._transQueue.commit();\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'commit', {\n        enumerable: false\n    });\n\n    /**\n     * 변경사항 이전으로 복귀\n     */\n    TransactionCollection.prototype.rollback = function() {\n        this._transQueue.rollback();\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'rollback', {\n        enumerable: false\n    });\n\n    return TransactionCollection;\n\n}(ArrayCollection));\n\nexport default TransactionCollection;\nexport { TransactionCollection };","/**** meta-row.js | MetaRow ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { EventEmitter } from 'logic-core';\nimport { MetaObject } from 'logic-core';\nimport { IList } from 'logic-core';\nimport { MetaRegistry } from 'logic-core';\n\nvar MetaRow  = (function (_super) {\n    /**\n     * 메타 로우\n     * @constructs _L.Meta.Entity.MetaRow\n     * @extends _L.Meta.MetaObject\n     * @param {BaseEntity} p_entity 소유하는 엔티티\n     */\n    function MetaRow(p_entity) {\n        _super.call(this);\n        \n        // private\n        var $event  = new EventEmitter(this);\n        var $elements = [];\n        var $keys = [];\n\n        // protected\n        var _this   = this;\n        var _entity  = null;\n\n        /**\n         * 내부 변수 접근\n         * @member {Array<string>} _L.Meta.Entity.MetaRow#$elements\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$elements',\n        {\n            get: function() { return $elements; },\n            set: function(nVal) { $elements = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n\n        /** \n         * 이벤트 객체\n         * @private \n         * @member {EventEmitter} _L.Meta.Entity.MetaRow#$event  \n         */\n        Object.defineProperty(this, '$event', \n        {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // /** \n        //  * 로우 요소값 \n        //  * @readonly\n        //  * @member {Array<any>} _L.Meta.Entity.MetaRow#$elements  \n        //  */\n        // Object.defineProperty(this, '$elements', \n        // {\n        //     get: function() {\n        //         var arr = [];\n        //         for (var i = 0; i < $elements.length; i++) arr.push($elements[i]);\n        //         return arr;\n        //     },\n        //     configurable: false,\n        //     enumerable: false,\n        // });\n\n        /** \n         * 요소 키\n         * @readonly\n         * @member {Array<string>} _L.Meta.Entity.MetaRow#$keys  \n         */\n        Object.defineProperty(this, '$keys',\n        {\n            get: function() {\n                // var arr = [];\n                // for (var i = 0; i < $keys.length; i++) arr.push($keys[i]);\n                // return arr;\n                return $keys;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 로우의 소유 엔티티\n         * @readonly\n         * @member {BaseEntity} _L.Meta.Entity.MetaRow#_entity\n         */\n        Object.defineProperty(this, '_entity', \n        {\n            get: function() { return _entity; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 컬렉션 목록 \n         * @readonly\n         * @member {Array<any>}  _L.Meta.Entity.MetaRow#_list  \n         */\n        Object.defineProperty(this, '_list', \n        {\n            get: function() {\n                var arr = [];\n                for (var i = 0; i < $elements.length; i++) arr.push($elements[i]);\n                return arr;\n            },\n            configurable: false,\n            enumerable: false,\n        });            \n        \n        /**\n         * 컬랙션 갯수 \n         * @readonly\n         * @member {Number} _L.Meta.Entity.MetaRow#count \n         */\n        Object.defineProperty(this, 'count', \n        {\n            get: function() { return $elements.length; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 변경전 이벤트 \n         * @event _L.Meta.Entity.MetaRow#onChanged \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_idx  index\n         * @param {any}         p_callback.p_nValue 신규 값\n         * @param {any}         p_callback.p_oValue 기존 값\n         * @param {this}        p_callback.p_this 로우 객체\n         */\n        Object.defineProperty(this, 'onChanging', \n        {\n            set: function(fun) { this.$event.on('onChanging', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n        \n        /**\n         * 변경후 이벤트 \n         * @event _L.Meta.Entity.MetaRow#onChanged \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_idx  index\n         * @param {any}         p_callback.p_nValue 신규 값\n         * @param {any}         p_callback.p_oValue 기존 값\n         * @param {this}        p_callback.p_this 로우 객체\n         */\n        Object.defineProperty(this, 'onChanged', {\n            set: function(fun) { this.$event.on('onChanged', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // inner variable access\n        // this.__GET$elements = function(call) {\n        //     if (call instanceof MetaRow) return $elements;\n        // }\n        // this.__GET$_keys = function(call) {\n        //     if (call instanceof MetaRow) return _keys;\n        // };\n        // this.__SET$elements = function(val, call) {\n        //     if (call instanceof MetaRow) $elements = val;\n        // }\n        // this.__SET$_keys = function(val, call) {\n        //     if (call instanceof MetaRow) _keys = val;\n        // };\n        // this.__SET$_entity = function(val, call) {\n        //     if (call instanceof MetaRow) _entity = val;\n        // };\n        \n        // BaseEntity 등록 & order(순서) 값 계산\n        if (!(p_entity instanceof MetaObject && p_entity.instanceOf('BaseEntity'))) {\n            throw new ExtendError(/EL05211/, null, []);\n        }\n        \n        // 설정\n        _entity = p_entity;\n\n        for (var i = 0; i < _entity.columns.count; i++) {\n            var idx = $elements.length;\n            var alias = _entity.columns[i].alias;\n            $elements.push(_entity.columns[i].default);  // 기본값 등록\n            $keys.push(alias);\n            Object.defineProperty(this, [i], this._getPropDescriptor(idx, false));\n            Object.defineProperty(this, alias, this._getPropDescriptor(idx));\n        }\n\n        \n\n        Util.implements(MetaRow, this);         // strip:\n    }\n    Util.inherits(MetaRow, _super);\n    \n    MetaRow._UNION = [IList];\n    MetaRow._NS = 'Meta.Entity';\n    MetaRow._PARAMS = ['_entity'];\n\n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    \n    /**\n     * TODO:\n     * @param {*} p_idx \n     * @param {*} p_enum \n     * @returns \n     */\n    MetaRow.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                var oldValue = this.$elements[p_idx];\n                var column;\n                // 엔티티 항상 존재함\n                column = this._entity.columns[p_idx];\n                if (column && column._valueTypes.length > 0) Type.matchType([column._valueTypes], nVal);\n                // 트렌젹션 처리 => 함수로 추출 검토\n                if (this._entity && !this._entity.rows.autoChanges) {\n                    var etc = 'idx:'+ p_idx +', new:' + nVal + ', old:'+ oldValue;\n                    var pos = this._entity.rows.indexOf(this);\n                    if (pos > -1) {     // 컬력션에 포힘때 : 변경시점에 큐에 추가\n                        this._entity.rows._transQueue.update(pos, this, this.clone(), etc);\n                    }\n                }\n                // 이벤트 및 처리\n                this._onChanging(p_idx, nVal, oldValue);\n                this.$elements[p_idx] = nVal;\n                this._onChanged(p_idx, nVal, oldValue);\n\n            },\n            configurable: true,\n            enumerable: p_enum\n        };\n    };\n    Object.defineProperty(MetaRow.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * 속성명 변경\n     * @param {string} [p_entity] 대상의 엔티티 기준으로 생성\n     * @returns {MetaRow}\n     */\n    MetaRow.prototype._changeKey  = function(p_oldKey, p_newKey) {\n        var idx;\n\n        // 타입 검사\n        if (!_isString(p_oldKey)) throw new ExtendError(/EL05214/, null, ['oldKey']);\n        if (!_isString(p_newKey)) throw new ExtendError(/EL05214/, null, ['newKey']);\n\n        \n        // 새로운 키 중복 검사\n        if (this.$keys.indexOf(p_oldKey) < 0) throw new ExtendError(/EL05215/, null, [p_oldKey]);  // 기존에 키가 존재하지 않습니다. TODO:\n        if (this.$keys.indexOf(p_newKey) > -1) throw new ExtendError(/EL05216/, null, [p_newKey]); // 교체할 키가 기존 키와 중복됩니다. TODO:\n\n        // 기존 idx 조회\n        idx = this.$keys.indexOf(p_oldKey);\n\n        // 기존 제거 및 설정\n        delete this[p_oldKey];\n        Object.defineProperty(this, p_newKey, this._getPropDescriptor(idx));\n\n        // $keys 값 교체\n        this.$keys.splice(idx, 1, p_newKey); \n    };\n    Object.defineProperty(MetaRow.prototype, '_changeKey', {\n        enumerable: false\n    });\n\n\n    // function $getPropDescriptor(p_idx, p_enum) {\n    //     if (typeof p_enum !== 'boolean') p_enum = true;\n    //     return {\n    //         get: function() { return this.$elements[p_idx]; },\n    //         set: function(nVal) {\n    //             var oldValue = this.$elements[p_idx];\n    //             var column;\n    //             // 엔티티 항상 존재함\n    //             column = this._entity.columns[p_idx];\n    //             if (column && column._valueTypes.length > 0) Type.matchType([column._valueTypes], nVal);\n    //             // 트렌젹션 처리 => 함수로 추출 검토\n    //             if (this._entity && !this._entity.rows.autoChanges) {\n    //                 var etc = 'idx:'+ p_idx +', new:' + nVal + ', old:'+ oldValue;\n    //                 var pos = this._entity.rows.indexOf(this);\n    //                 if (pos > -1) {     // 컬력션에 포힘때 : 변경시점에 큐에 추가\n    //                     this._entity.rows._transQueue.update(pos, this, this.clone(), etc);\n    //                 }\n    //             }\n    //             // 이벤트 및 처리\n    //             this._onChanging(p_idx, nVal, oldValue);\n    //             this.$elements[p_idx] = nVal;\n    //             this._onChanged(p_idx, nVal, oldValue);\n\n    //         },\n    //         configurable: false,\n    //         enumerable: p_enum\n    //     };\n    // }\n    \n    /**\n     * 로우 요소 변경전 이벤트\n     * @param {*} p_idx 인덱스\n     * @param {*} p_nValue 변경 값\n     * @param {*} p_oValue 기존 값\n     * @listens _L.Meta.Entity.MetaColumn#_onChanged\n     */\n    MetaRow.prototype._onChanging = function(p_idx, p_nValue, p_oValue) {\n        this.$event.emit('onChanging', p_idx, p_nValue, p_oValue, this);\n    };\n    Object.defineProperty(MetaRow.prototype, '_onChanging', {\n        enumerable: false\n    });\n\n    /**\n     * 로우 요소 변경후 이벤트\n     * @param {*} p_idx 인덱스\n     * @param {*} p_nValue 변경 값\n     * @param {*} p_oValue 기존 값\n     * @listens _L.Meta.Entity.MetaColumn#_onChanged\n     */\n    MetaRow.prototype._onChanged = function(p_idx, p_nValue, p_oValue) {\n        this.$event.emit('onChanged', p_idx, p_nValue, p_oValue, this);\n    };\n    Object.defineProperty(MetaRow.prototype, '_onChanged', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaRow.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (!Type.deepEqual(this.$event.$storage, {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (vOpt < 2 && vOpt > -1 && this._entity) {\n            obj['_entity'] = MetaRegistry.createReferObject(this._entity);\n        }\n        obj['_elem'] = [];\n        for (var i = 0; i < this._list.length; i++) {\n            var elem = this._list[i];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        obj['_key'] = [];\n        for (var i = 0; i < this.$keys.length; i++) {\n            var key = this.$keys[i];\n            obj['_key'].push(key);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(MetaRow.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaRow.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var entity;\n        \n        if (p_oGuid['_elem'].length !== p_oGuid['_key'].length) throw new ExtendError(/EL05212/, null, [p_oGuid['_elem'].length, p_oGuid['_key'].length]);\n\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        for(var i = 0; i < p_oGuid['_elem'].length; i++) {\n            var elem = p_oGuid['_elem'][i];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements[i] = obj;\n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL05213/, null, [i, elem['$ref']]);\n                this.$elements[i] = meta;   \n            } else this.$elements[i] = elem;   \n        }\n    };\n    Object.defineProperty(MetaRow.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * 객체 복제\n     * @param {BaseEntity} [p_entity] 대상의 엔티티 기준으로 생성\n     * @returns {MetaRow}\n     */\n    MetaRow.prototype.clone  = function(p_entity) {\n        var entity = p_entity || this._entity;\n        var clone = new MetaRow(entity);\n        var obj = this.getObject();\n\n        if (obj.$storage) {\n            clone.$event.$storage = obj.$storage;\n        }\n        clone.$elements = Util.deepCopy(obj._elem);\n        return clone;\n    };\n    Object.defineProperty(MetaRow.prototype, 'clone', {\n        enumerable: false\n    });\n\n    \n\n\n    \n    return MetaRow;\n\n}(MetaObject));\n\nexport default MetaRow;\nexport { MetaRow };","/**** collection-meta-row.js | MetaTableCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { TransactionCollection } from './collection-transaction.js';\nimport { MetaRow } from './meta-row.js';\n\nvar MetaRowCollection  = (function (_super) {\n    /**\n     * 로우 컬렉션\n     * @constructs _L.Meta.Entity.MetaRowCollection\n     * @extends _L.Collection.TransactionCollection\n     * @param {object} [p_owner] 소유자 \n     */\n    function MetaRowCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        this._elemTypes = MetaRow;   // 컬렉션타입 설정\n        this.autoChanges = true;    // 트랜젝션 기본 해제 해제입니다.\n    }\n    Util.inherits(MetaRowCollection, _super);\n\n    MetaRowCollection._NS = 'Meta.Entity';    // namespace\n    MetaRowCollection._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 프로퍼티 기술자 설정\n     * @protected\n     * @param {number} p_idx 인덱스\n     */\n    MetaRowCollection.prototype._getPropDescriptor = function(p_idx) {\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                if (nVal._entity !== this._owner) throw new ExtendError(/EL05221/, null, [this.constructor.name]);\n                this._transQueue.update(p_idx, nVal, this.$elements[p_idx]); \n                this.$elements[p_idx] = nVal;\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    };\n    Object.defineProperty(MetaRowCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * MetaRow 추가 idx 를 기준으로 검사한다.\n     * @param {MetaRow} p_row 추가할 MetaRow\n     * @param {boolean} [p_isCheck] 유효성 검사 여부 (기본값 = false)\n     * @returns {number}\n     */\n    MetaRowCollection.prototype.add  = function(p_row, p_isCheck) {\n        var pos = this.$elements.length;\n        this.insertAt(pos, p_row, p_isCheck);  // TODO: try 문으로 묶음 필요\n        return pos;\n    };\n    Object.defineProperty(MetaRowCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * pos 위치에 추가\n     * @param {number} p_pos 추가할 위치 인덱스\n     * @param {MetaRow} p_row 추가할 MetaRow\n     * @param {boolean} [p_isCheck] 유효성 검사 여부 (기본값 = false)\n     * @returns {boolean}\n     */\n    MetaRowCollection.prototype.insertAt  = function(p_pos, p_row, p_isCheck) {\n        var isCheck = p_isCheck || false;\n        var result;\n        var entity = p_row._entity;\n\n        if (!(p_row instanceof MetaRow )) throw new ExtendError(/EL05222/, null, []);\n        if (entity._guid !== this._owner._guid) throw new ExtendError(/EL05223/, null, [this.constructor.name]);\n        \n        // valid 검사\n        if (isCheck === true) {\n            for (let i = 0; i < p_row.count; i++) {\n                result = entity.columns[i].valid(p_row[i]);     // TODO: try 조건으로 변경 하면 하위 메세지 호출함\n                if(result) {\n                    throw new ExtendError(/EL05224/, null, [i, result.msg]);\n                }\n            }\n        }\n        return _super.prototype.insertAt.call(this, p_pos, p_row);\n    };\n    Object.defineProperty(MetaRowCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    return MetaRowCollection;\n    \n}(TransactionCollection));\n\nexport default MetaRowCollection;\nexport { MetaRowCollection };","/**** base-column.js | _L.Meta.Entity.BaseColumn ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { MetaElement } from 'logic-core';\nimport { MetaRegistry } from 'logic-core';\n\nvar BaseColumn  = (function (_super) {\n    /**\n     * 컬럼 (최상위)\n     * @abstract\n     * @constructs _L.Meta.Entity.BaseColumn\n     * @extends _L.Meta.MetaElement\n     * @param {string} p_name 아이템명\n     * @param {BaseEntity} [p_entity] 소유 BaseEntity\n     */\n    function BaseColumn(p_name, p_entity) {\n        _super.call(this, p_name);\n\n        var $key            = p_name;\n        var $value          = null;\n        var $alias          = null;\n        var _entity         = null;\n        var _valueTypes     = this._type._VALUE_TYPE || [];\n        var _default        = '';\n        var caption         = '';\n        /**\n         * 컬럼 컬렉션의 키\n         * @member {string} _L.Meta.Entity.BaseColumn#$key\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$key',\n        {\n            get: function() { return $key; },\n            set: function(nVal) { \n                if (_isString(nVal)) $key = nVal;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 별칭 내부값\n         * @member {string | number | boolean} _L.Meta.Entity.BaseColumn#$value\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$value',\n        {\n            get: function() { return $value; },\n            set: function(nVal) { $value = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 별칭 내부값\n         * @member {string} _L.Meta.Entity.BaseColumn#$alias\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$alias',\n        {\n            get: function() { return $alias; },\n            set: function(nVal) { \n                if (_isString(nVal)) $alias = nVal;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 컬럼 소유 엔티티\n         * @member {BaseEntity} _L.Meta.Entity.BaseColumn#_entity\n         * @protected\n         */\n        Object.defineProperty(this, '_entity', \n        {\n            get: function() { return _entity; },\n            set: function(nVal) { \n                if (typeof nVal !== 'undefined' && !(nVal instanceof MetaElement && nVal.instanceOf('BaseEntity'))) {\n                    throw new ExtendError(/EL05111/, null, [this.constructor.name]);\n                }\n                _entity = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * value 타입 설정\n         * @member {any} _L.Meta.Entity.BaseColumn#_valueTypes\n         * @protected\n         */\n        Object.defineProperty(this, '_valueTypes', \n        {\n            get: function() { return _valueTypes; },\n            set: function(nVal) { \n                var arr = [];\n                if (!Array.isArray(nVal)) arr.push(nVal);\n                else arr = nVal;\n                _valueTypes = arr;  \n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼명, _name 과 동일\n         * @member {string} _L.Meta.Entity.BaseColumn#columnName\n         */\n        Object.defineProperty(this, 'columnName', \n        {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (nVal === this.columnName) return;\n                if (typeof nVal !== 'string') throw new ExtendError(/EL05112/, null, [this.constructor.name, typeof nVal]); \n                if (_entity && _entity.columns.existColumnName(nVal)) throw new ExtendError(/EL05113/, null, [this.constructor.name, nVal]);\n                if (_entity && _entity.columns.existAlias(nVal)) throw new ExtendError(/EL05114/, null, [this.constructor.name, nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 아이템 별칭 (bind전송시, 데이터 수신후 설정시 활용함)  \n         * 사용처 (기본값 = columnName )\n         * - Bind-command-ajax._execBind() : 데이터 전송시  \n         * - BaseBind.setValue(row) : 로우값 을 엔티티에 설정시  \n         * - getValue() : row 에 활용함  \n         * @member {string} _L.Meta.Entity.BaseColumn#alias\n         */\n        Object.defineProperty(this, 'alias', \n        {\n            get: function() { return typeof $alias === 'string' ? $alias : this.columnName; },\n            set: function(nVal) { \n                var entity = this._entity;\n                var oldKey = this.$alias || this.columnName;\n\n                if(typeof nVal !== 'string') throw new ExtendError(/EL05115/, null, [this.constructor.name, typeof nVal]); \n                if (entity && entity.columns.existAlias(nVal)) throw new ExtendError(/EL05116/, null, [this.constructor.name, nVal]);\n                \n                // 기존에 rows 에 기존 명칭이 존재하면 MetaRow 변경\n                if (this._entity) {\n                    for (var i = 0; i < this._entity.rows.count; i++) {\n                        var row = this._entity.rows[i];\n                        row._changeKey(oldKey, nVal);\n                    }\n                }\n                $alias = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        }); \n\n        /**\n         * 컬럼 value 의 기본값 (내부속성)\n         * @member {string | number | boolean} _L.Meta.Entity.BaseColumn#default\n         */\n        Object.defineProperty(this, 'default', \n        {\n            get: function() { return _default; },\n            set: function(nVal) { \n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], nVal);\n                _default = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼 설명\n         * @member {string} _L.Meta.Entity.BaseColumn#caption\n         */\n        Object.defineProperty(this, 'caption', \n        {\n            get: function() { return caption; },\n            set: function(nVal) { \n                if(typeof nVal !== 'string') throw new ExtendError(/EL05117/, null, [this.constructor.name, typeof nVal]); \n                caption = nVal; \n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼 값\n         * @member {any} _L.Meta.Entity.BaseColumn#value\n         */\n        Object.defineProperty(this, 'value', \n        {\n            get: function() { \n                return $value === null ? this.default : $value; \n            },\n            set: function(nVal) {\n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], nVal);\n                $value = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * value 별칭\n         * this.value\n         * @member {object} _L.Meta.Entity.BaseColumn#val \n         */\n        Object.defineProperty(this, 'val', \n        {\n                get: function() { return this.value; },\n                set: function(nVal) { this.value = nVal;},\n                configurable: true,\n                enumerable: false\n        });\n\n        if (p_entity) _entity = p_entity;\n    }\n    Util.inherits(BaseColumn, _super);\n\n    BaseColumn._NS = 'Meta.Entity';     // namespace\n    BaseColumn._PARAMS = ['columnName', '_entity'];    // creator parameter\n    BaseColumn._KIND = 'abstract';\n    BaseColumn._VALUE_TYPE = [];\n\n    // local funciton\n    // function _isObject(obj) {    // 객체 여부\n    //     if (typeof obj === 'object' && obj !== null) return true;\n    //     return false;\n    // }\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1 && this._entity) {\n            obj['_entity'] = MetaRegistry.createReferObject(this._entity);\n        }\n        obj['columnName'] = this.columnName;\n        if (this.default !== '') obj['default'] = this.default;\n        if (this.caption !== '') obj['caption'] = this.caption;            \n        if (this.$alias !== null) obj['$alias'] = this.$alias;\n        // if (this.__GET$alias(this) !== null) obj['alias'] = this.__GET$alias(this);\n        if (this.$value !== null) obj['$value'] = this.$value;\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BaseColumn.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var entity;\n\n        if (p_oGuid['_entity']) {\n            entity = MetaRegistry.findSetObject(p_oGuid['_entity']['$ref'], origin);\n            if (!entity) throw new ExtendError(/EL05118/, null, [p_oGuid['name'], p_oGuid['_entity']['$ref']]);\n            this._entity = entity;\n        } \n        this.columnName = p_oGuid['columnName'];\n        if (p_oGuid['default']) this.default = p_oGuid['default'];\n        if (p_oGuid['caption']) this.caption = p_oGuid['caption'];\n        if (p_oGuid['$alias']) this.$alias = p_oGuid['$alias'];\n        if (p_oGuid['$value']) this.$value = p_oGuid['$value'];\n    };\n\n    /** \n     * 컬럼 복제\n     * @abstract \n     */\n    BaseColumn.prototype.clone = function() {\n        throw new ExtendError(/EL05119/, null, []);\n    };\n\n    return BaseColumn;\n\n}(MetaElement));\n\nexport default BaseColumn;\nexport { BaseColumn };","/**** meta-column.js | _L.Meta.Entity.MetaColumn ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { EventEmitter } from 'logic-core';\nimport { BaseColumn } from './base-column.js';\nimport { Message } from './message-wrap.js';\n\nvar MetaColumn  = (function (_super) {\n    /**\n     * 메타 컬럼\n     * @constructs _L.Meta.Entity.MetaColumn\n     * @extends _L.Meta.Entity.BaseColumn\n     * @param {string} p_name 컬럼명\n     * @param {BaseEntity} [p_entity] 소유 BaseEntity\n     * @param {object} [p_property] \n     * @param {object} p_property.default 기본값\n     * @param {boolean} p_property.required 필수 유무\n     * @param {array<object.function>} p_property.constraints 제약조건\n     * @param {string | number | boolean} p_property.value value 값\n     * @param {function} p_property.getter 겟터\n     * @param {function} p_property.setter 셋터\n     * @param {string} p_property.alias 별칭\n     * @param {function} p_property.onChanged value 변경 후 이벤트\n     */\n    function MetaColumn(p_name, p_entity, p_property) {\n        _super.call(this, p_name, p_entity);\n\n        var $event          = new EventEmitter(this);\n        var required       = false;\n        // var optional      = false;\n        var constraints     = [];\n        var getter          = null;\n        var setter          = null;\n\n        /** \n         * 이벤트 객체\n         * @private\n         * @member {EventEmitter} _L.Meta.Entity.MetaColumn#$event  \n         */\n        Object.defineProperty(this, '$event', \n        {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });        \n\n        /**\n         * 컬럼 value의 필수 여부\n         * @member {boolean} _L.Meta.Entity.MetaColumn#required\n         */\n        Object.defineProperty(this, 'required', \n        {\n            get: function() { return required },\n            set: function(nVal) { \n                if(typeof nVal !== 'boolean') throw new ExtendError(/EL05131/, null, [this.constructor.name, typeof nVal]);\n                required = nVal; \n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 컬럼 제약 조건 \n         * @member {array<object | function>} _L.Meta.Entity.MetaColumn#constraints\n         * @example\n         * var c = {\n         *  regex: /aa/,\n         *  msg: '매칭메세지',  // return이 true면 성공시 메세지, false 실패시 메세지\n         *  condition: ture     // 매칭시 성공\n         * };\n         */\n        Object.defineProperty(this, 'constraints', \n        {\n            get: function() { return constraints; },\n            set: function(nVal) { \n                var list = [];\n                constraints = [];\n                if (Array.isArray(nVal))  list = nVal;\n                else list.push(nVal);\n                for(var i = 0; list.length > i; i++) {\n                    if (!(typeof list[i] === 'function' || (typeof list[i].regex === 'object' && typeof list[i].msg === 'string'))) {\n                        throw new ExtendError(/EL05133/, null, [this.constructor.name, i, typeof nVal.regex, typeof nVal.msg]);\n                        }\n                }\n                constraints = list;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 컬럼 value  \n         * get 우선순위 : 1. getter 있는 경우, 2. 내부값 $value  \n         * set 우선순위 : 1. setter 있는 경우, 2. setter 리턴값이 없는 경우  \n         * REVIEW: 정리표 보고 수정 필요!!\n         * @member {string | number | boolean} _L.Meta.Entity.MetaColumn#value\n         */\n        Object.defineProperty(this, 'value', \n        {\n            get: function() { \n                var __val;\n                // 우선순위 : 1\n                if (typeof getter === 'function' ) {\n                    __val = getter.call(this);\n                    if (this.$value !== null && this.$value !== __val) {\n                        this._onChanged(__val, this.$value);    // 검사 및 이벤트 발생\n                        this.$value = __val;   // 내부에 저장\n                    }\n                // 우선순위 : 2\n                } else __val = this.$value;\n                /**\n                 * 분기 처리값 '__val' 없는경우 (null, undefined)\n                 *  - this.$value 초기화 되지 않은 경우\n                 *  - getter 리턴이 없는 경우\n                 */\n                // if (typeof __val === 'undefined' || __val === null) __val = this.$value || this.default;  REVIEW: 제거 대상\n                // if (typeof __val === 'undefined' || __val === null) __val = this.$value;  \n                if (typeof __val === 'undefined' || __val === null) __val = this.default;\n\n                return __val; \n            },\n            set:  function(val) { \n                var __val, _val;\n                var _oldVal = this.$value;\n                if (typeof setter === 'function' ) _val = setter.call(this, val);\n                // settter 의 리턴이 여부\n                __val = typeof _val !== 'undefined' ? _val : val;\n                __val = __val === null ? '' : __val;  // null 등록 오류 처리\n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], __val);\n                this.$value = __val;\n                if (_oldVal !== __val && __val) this._onChanged(__val, _oldVal);    // 검사 및 이벤트 발생\n            },\n            configurable: true, // 재정의 허용\n            enumerable: true\n        });\n\n        /**\n         * 컬럼의 value 의 getter\n         * @member {Function} _L.Meta.Entity.MetaColumn#getter\n         */\n        Object.defineProperty(this, 'getter', \n        {\n            get: function() { return getter; },\n            set: function(val) { \n                if(typeof val !== 'function') throw new ExtendError(/EL05134/, null, [this.constructor.name, typeof val]);\n                getter = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼의 value 의 setter\n         * @member {Function} _L.Meta.Entity.MetaColumn#setter\n         */\n        Object.defineProperty(this, 'setter', \n        {\n            get: function() { return setter; },\n            set: function(val) { \n                if(typeof val !== 'function') throw new ExtendError(/EL05135/, null, [this.constructor.name, typeof val]);\n                setter = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 변경 이벤트 \n         * @event _L.Meta.Entity.MetaColumn#onChanged \n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_nValue 신규 value 값\n         * @param {any}         p_callback.p_oValue 기존 value 값\n         * @param {MetaColumn}  p_callback.p_this this(컬럼객체)\n         */\n        Object.defineProperty(this, 'onChanged', \n        {\n            set: function(fun) {\n                this.$event.on('onChanged', fun);\n            },\n            configurable: false,\n            enumerable: false,\n        });\n        \n        if (p_property) this._load(p_property);\n    }\n    Util.inherits(MetaColumn, _super);\n\n    MetaColumn._NS = 'Meta.Entity';                                 // namespace\n    MetaColumn._PARAMS = ['columnName', '_entity'];    // creator parameter    // \n    MetaColumn._VALUE_TYPE = [String, Number, Boolean];\n\n    /**\n     * onChanged 이벤트를 발생합니다.\n     * @param {*} p_nValue 변경 값\n     * @param {*} p_oValue 기존 값\n     * @listens _L.Meta.Entity.MetaColumn#_onChanged\n     */\n    MetaColumn.prototype._onChanged = function(p_nValue, p_oValue) {\n        p_oValue = p_oValue || this.$value;\n        this.$event.emit('onChanged', p_nValue, p_oValue, this);\n    };\n\n    /**\n     * 프로퍼티 객체로 속성 로드\n     * @param {object} p_property \n     */\n    MetaColumn.prototype._load = function(p_property) {\n        if (typeof p_property === 'object' ) {\n            for(var prop in p_property) {\n                // if (p_property.hasOwnProperty(prop) &&\n                if (Object.prototype.hasOwnProperty.call(p_property, prop) &&\n                    ['_valueTypes', 'alias', 'default', 'caption', 'value', \n                    'required', 'constraints', 'getter', 'setter'].indexOf(prop) > -1) {\n                    this[prop] = p_property[prop];\n                }\n            }\n        }\n        if (['number', 'string', 'boolean'].indexOf(typeof p_property) > -1) {  \n            this['value'] = p_property; \n        }\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (!Type.deepEqual(this.$event.$storage, {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (this.required !== false) obj['required'] = this.required;\n        // if (this.optional !== false) obj['optional'] = this.optional;\n        if (this.constraints.length > 0) obj['constraints'] = Util.deepCopy(this.constraints);\n        if (this.getter !== null) obj['getter'] = this.getter;\n        if (this.setter !== null) obj['setter'] = this.setter;\n        // if (this.value !== null) obj['value'] = this.value;    // 오버라이딩\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaColumn.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var entity;\n\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        if (p_oGuid['required']) this.required = p_oGuid['required'];\n        // if (p_oGuid['optional']) this.optional = p_oGuid['optional'];\n        if (p_oGuid['constraints']) this.constraints = p_oGuid['constraints'];\n        if (p_oGuid['getter']) this.getter = p_oGuid['getter'];\n        if (p_oGuid['setter']) this.setter = p_oGuid['setter'];\n        // if (p_oGuid['value']) this.value = p_oGuid['value'];\n    };\n\n    /**\n     * 컬럼 복제\n     * @param {BaseEntity} [p_entity] 지정한 엔티티로 복제\n     * @returns {MetaColumn}\n     */\n    MetaColumn.prototype.clone = function(p_entity) {\n        var clone;\n        // var rObj = this.getObject();\n        var entity = p_entity ? p_entity : this._entity;\n        \n        clone = new MetaColumn(this.columnName, entity);\n        \n        // BaseColumn\n        if (this['default'] !== '') clone.default = this['default'];\n        if (this['caption'] !== '') clone.caption = this['caption'];\n        if (this['$alias'] !== null) clone.$alias = this['$alias'];\n        if (this['$value'] !== null) clone.$value = this['$value'];\n        \n        // MetaColumn\n        if (this['required']) clone.required = this['required'];\n        // REVIEW: 배열 깊은 복제 해야 하는지 확인 필요\n        if (this['constraints']) clone.constraints = this['constraints'];\n        // REVIEW: 함수 깊은 복사 확인 필요\n        if (this['getter']) clone.getter = this['getter'];\n        if (this['setter']) clone.setter = this['setter'];\n        \n        return clone;\n    };\n\n    /**\n     * 제약조건을 추가  \n     * \n     * REVIEW: 정규식으로 반대 조건을 모두 나열 할수 있으므로, 항상 실패조건을 하는게 맞을지? 검토\n     * @param {Regexp} p_regex 정규표현식\n     * @param {string} p_msg  regexp 입력시\n     * @param {string} [p_code] regexp 입력시\n     * @param {boolean} [p_condition] <기본값 false> 성공/실패 조건\n     * @param {boolean} p_condition.false 실패조건이며<기본값>, 정규식이 매칭이 안되야 한다.\n     * @param {boolean} p_condition.true 성공조건이며 정규식이 매칭이되어야 성공(통화)  \n     */\n    MetaColumn.prototype.addConstraint = function(p_regex, p_msg, p_code, p_condition) {\n        p_condition = typeof p_condition === 'boolean' ? p_condition : true;\n\n        var constraint = {};\n        if (typeof p_regex === 'function') {\n            this.constraints.push(p_regex);\n            return;\n        }\n        if (!(p_regex instanceof RegExp)) throw new ExtendError(/EL05136/, null, []);\n        if (!(typeof p_msg === 'string')) throw new ExtendError(/EL05137/, null, [typeof p_msg]);    \n\n        constraint.regex = p_regex;\n        constraint.msg = p_msg;\n        constraint.code = p_code;\n        constraint.condition = p_condition;\n        \n        this.constraints.push(constraint);\n    };\n    \n    /**\n     * 속성의 value에 유효성을 검사한다. (isNotnull, optional, constraints 기준)\n     * TODO: number, boolean 형이 입력될경우, 기본 제약 조건 valueTypes 검사여부 검토?, 예외가 아니고 메세지로 표현?\n     * @param {string | number | boolean} p_value 검사할 값\n     * @param {object} result 메세지는 참조(객체)형 으로 전달\n     * @param {number} p_option 1. required 참조 | 2: null검사 진행   |  3: null검사 무시\n     * @returns {object | undefined} 리턴값이 없으면 검사 성공\n     */\n    MetaColumn.prototype.valid = function(p_value) {\n        var result = {};\n        var match;\n        var value = null;\n        \n        result.value = p_value;\n        result.msg = '';\n        result.code = '';\n        p_value = p_value || '';\n\n        value = typeof p_value === 'number' ? String(p_value) : p_value;  // number 형 변환\n\n        // 1. 기본값 얻기 문자열로 변경\n        value = value.trim();\n\n        // 2. 통과조건 검사\n        if (this.required === false /* && this.optional === true */ && value.length === 0) return;\n        if (this.required === false && this.constraints.length === 0 ) return;\n        if (this.required === true && this.constraints.length === 0 && value.length > 0) return;\n        \n        // 3. 실패조건 검사\n        if (this.required === true && this.constraints.length === 0 && value.length === 0) {\n            result.msg   = Message.get('EL05138', [this.name]);\n            result.code  = 0;\n            return result;\n        }\n\n        // 4. 제약조건 검사\n        for(var i = 0; this.constraints.length > i; i++) {\n            if (typeof this.constraints[i] === 'function') {\n                // return this.constraints[i].call(this, this, value);     // 함수형 제약조건 REVIEW: 제거대상 \n\n                // 함수는 false 또는 object 타입의 경우 실패로 처리\n                var funReturn = this.constraints[i].call(this, value, this);     // 함수형 제약조건\n                if (funReturn === true || typeof funReturn === 'undefined') continue;\n                \n                if (typeof funReturn === 'object' && typeof funReturn.msg === 'string') {\n                    result.msg   = funReturn.msg;\n                    result.code  = funReturn.code;\n                } else {\n                    result.msg = Message.get('EL05139', [this.name]);\n                }\n                return result;\n\n            } else {\n                match = value.match(this.constraints[i].regex);\n                if ((this.constraints[i].condition === false && match !== null) ||    // 실패 조건\n                    (this.constraints[i].condition === true && match === null)) {     // 성공 조건\n                    result.msg   = Message.get('EL0513A', [this.name, this.constraints[i].msg]);\n                    result.code  = this.constraints[i].code;\n                    return result;\n                }\n            }\n        }            \n        return;\n    };\n\n    return MetaColumn;\n\n}(BaseColumn));\n\nexport default MetaColumn;\nexport { MetaColumn };","/**** object-column.js | _L.Meta.Entity.ObjectColumn ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { MetaRegistry } from 'logic-core';\nimport { MetaObject } from 'logic-core';\nimport { MetaElement } from 'logic-core';\nimport { PropertyCollection } from 'logic-core';\nimport { BaseColumn } from './base-column.js';\n\nvar ObjectColumn  = (function (_super) {\n    /**\n     * 객체 컬럼\n     * @constructs _L.Meta.Entity.ObjectColumn\n     * @extends _L.Meta.Entity.BaseColumn\n     * @param {string} p_name 객체컬럼명\n     * @param {BaseEntity} [p_entity] 소유 BaseEntity\n     * @param {object} [p_property] \n     * @param {object} p_property.default 기본값\n     * @param {string} p_property.caption 설명\n     * @param {object} p_property.value value 값\n     * @param {string} p_property.alias 별칭\n     */\n    function ObjectColumn(p_name, p_entity, p_property) {\n        _super.call(this, p_name, p_entity);\n\n        if (p_property) this._load(p_property);\n    }\n    Util.inherits(ObjectColumn, _super);\n\n    ObjectColumn._NS = 'Meta.Entity';     // namespace\n    ObjectColumn._PARAMS = ['columnName', '_entity', '_property'];    // creator parameter\n    ObjectColumn._VALUE_TYPE = [{}];    // union type\n\n\n    /**\n     *  프로퍼티 객체로 속성 로드\n     * @param {object} p_prop 속성\n     */\n    ObjectColumn.prototype._load = function(p_prop) {\n        if (typeof p_prop === 'object' ) {\n            for(var prop in p_prop) {\n                // if (p_property.hasOwnProperty(prop) &&\n                if (Object.prototype.hasOwnProperty.call(p_prop, prop) &&\n                    ['default', 'caption', 'value', 'alias'].indexOf(prop) > -1) {\n                    this[prop] = p_prop[prop];\n                }\n            }\n        } else throw new ExtendError(/EL05121/, null, ['p_prop', 'object']);\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    ObjectColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        var defValue = this.default;\n        var $value = this.$value;\n\n        if (defValue instanceof MetaObject) {\n            if (MetaRegistry.hasGuidObject(defValue, owned)) {\n                obj['default'] = MetaRegistry.createReferObject(defValue);\n            } else obj['default'] = defValue.getObject(vOpt, owned);\n        }\n\n        // $value 재정의\n        if ($value instanceof MetaObject) {\n            if (MetaRegistry.hasGuidObject($value, owned)) {\n                obj['$value'] = MetaRegistry.createReferObject($value);\n            } else obj['$value'] = $value.getObject(vOpt, owned);\n        }\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 guid 객체로 설정한다.\n     * override\n     * @param {object} p_oGuid 레벨 옵션\n     * @param {object} p_origin 설정 원본 객체\n     */\n    ObjectColumn.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var elem;\n\n        // 주의! defuault 설정후 value 설정 :getObject() 와 동일\n        elem = p_oGuid['default'];\n        if (typeof elem === 'object' && elem !== null) {\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this['default'] = obj;\n            \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL05122/, null, [elem['$ref']]);\n                this['default'] = meta;\n            }\n        }\n\n        elem = p_oGuid['$value'];\n        if (typeof elem === 'object' && elem !== null) {\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$value = obj;\n            \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL05123/, null, [elem['$ref']]);\n                this.$value = meta;\n            }\n        }\n    };\n\n    /**\n     * 객체 복제\n     * override\n     * @param {BaseEntity} [p_entity] 지정한 엔티티로 복제\n     * @returns {ObjectColumn}\n     */\n    ObjectColumn.prototype.clone = function(p_entity) {\n        var clone;\n        var entity = p_entity ? p_entity : this._entity;\n        \n        clone = new ObjectColumn(this.columnName, entity);\n\n        if (this['$value']) clone.$value = this.$value;\n        if (this['$alias']) clone.$alias = this['$alias'];\n        if (this['default']) clone.default = this['default'];\n        if (this['caption']) clone.caption = this['caption'];\n\n        return clone;\n    };\n\n    return ObjectColumn;\n\n}(BaseColumn));\n\nexport default ObjectColumn;\nexport { ObjectColumn };","/**** base-column-collection.js | BaseColumnCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { MetaElement } from 'logic-core';\nimport { BaseColumn } from './base-column.js';\nimport { PropertyCollection } from 'logic-core';\n\nvar BaseColumnCollection  = (function (_super) {\n    /**\n     * 컬럼 컬렉션 (최상위)\n     * @abstract\n     * @constructs _L.Meta.Entity.BaseColumnCollection\n     * @extends _L.Collection.PropertyCollection\n     * @param {object} p_owner 소유자 \n     * @param {BaseColumn} [p_baseType] 기본 컬럼 타입\n     */\n    function BaseColumnCollection(p_owner, p_baseType) {\n        _super.call(this, p_owner);\n        \n        var _baseType;\n\n        /**\n         * 기본 컬럼 타입\n         * @member {BaseColumn} _L.Meta.Entity.BaseColumnCollection#_baseType\n         */\n        Object.defineProperty(this, '_baseType', \n        {\n            get: function() { return _baseType; },\n            set: function(nVal) { \n                if (!(typeof nVal === 'function')) throw new ExtendError(/EL05141/, null, [this.constructor.name, typeof nVal]);\n                // if (!(new nVal('temp') instanceof BaseColumn)) throw new ExtendError('ES032', ['_baseType', 'BaseColumn']);\n                if (!(Type.isProtoChain(nVal, BaseColumn))) throw new ExtendError(/EL05142/, null, [this.constructor.name]);\n                _baseType = nVal;\n            },\n            enumerable: false,\n            configurable: false,\n        });\n\n        // this._baseType = p_baseType || MetaColumn;\n        this._baseType = p_baseType;\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_baseType', '_ownerIsEntity', 'initValue', 'existAlias'];\n        this.$KEYWORD = ['existColumnName', 'alias', 'addValue'];\n    }\n    Util.inherits(BaseColumnCollection, _super);\n    \n    BaseColumnCollection._NS = 'Meta.Entity';                   // namespace\n    BaseColumnCollection._PARAMS = ['_owner', '_baseType'];     // creator parameter\n    BaseColumnCollection._KIND = 'abstract';\n\n\n    /**\n     * this._onwer 이 엔티티 여부를 확인합니다.\n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype._ownerIsEntity = function() {\n        return this._owner instanceof MetaElement && this._owner.instanceOf('BaseEntity');\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, '_ownerIsEntity', {\n        enumerable: false\n    });\n\n\n    /**\n     * 컬렉션에 요소를 추가할 때 설정되는 기본 기술자입니다.\n     * @protected\n     * @param {number} p_idx 인덱스 번호\n     */\n    BaseColumnCollection.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                throw new ExtendError(/EL05148/, null, []);\n                // var oVal = this.$elements[p_idx];\n                // if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                // this._onChanging(p_idx, nVal, oVal);  // before event\n                // this.$elements[p_idx] = nVal;\n                // this._onChanged(p_idx, nVal, oVal);   // after event\n            },\n            configurable: true,\n            enumerable: p_enum,\n        };\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * 컬럼을 컬렉션에 추가\n     * @param {string} p_name 컬럼명\n     * @param {any} p_value 컬럼객체\n     * @returns {number} 추가한 index \n     */\n    BaseColumnCollection.prototype.add = function(p_name, p_value) {\n        \n        if (this._ownerIsEntity() && this._owner.rows.count > 0) throw new ExtendError(/EL05143/, null, [this._owner.rows.count]);\n        if (this.existColumnName(p_name)) throw new ExtendError(/EL05144/, null, [this.constructor.name, p_name]);\n        if (this.existAlias(p_name)) throw new ExtendError(/EL05145/, null, [this.constructor.name, p_name]); \n        \n        return _super.prototype.add.call(this, p_name, p_value);\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * 컬럼을 컬렉션에서 삭제\n     * @param {number} p_idx \n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype.removeAt = function(p_idx) {\n        if (this._owner.rows.count > 0) throw new ExtendError(/EL05146/, null, [this._owner.rows.count]);\n        return _super.prototype.removeAt.call(this, p_idx); \n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * 컬렉에 모든 value 값을 default 값으로 초기화\n     */\n    BaseColumnCollection.prototype.initValue  = function() {\n        for (var i = 0; this.count > i; i++) {\n            this[i].value = this[i].default;\n        }\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'initValue', {\n        enumerable: false\n    });\n\n    /**\n     * 컬렉션에 별칭 이름(키)가 존재하는지 검사\n     * @param {string} p_key 이름\n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype.existAlias  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].alias === p_key) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'existAlias', {\n        enumerable: false\n    });\n\n    /**\n     * 컬렉션에 컬럼 이름(키)이 존재하는지 검사\n     * @param {string} p_key 이름\n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype.existColumnName  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].columnName === p_key) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'existColumnName', {\n        enumerable: false\n    });\n\n    /**\n     * 별칭에 대한 컬럼 객체 얻기\n     * @param {string} p_key 키\n     * @returns {BaseColumn | undefined}\n     */\n    BaseColumnCollection.prototype.alias  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].alias === p_key) return this[i];\n        }\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'alias', {\n        enumerable: false\n    });\n\n    /** @abstract */\n    BaseColumnCollection.prototype.addValue = function() {\n        throw new ExtendError(/EL05147/, null, []);\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'addValue', {\n        enumerable: false\n    });\n\n    return BaseColumnCollection;\n\n}(PropertyCollection));\n\nexport default BaseColumnCollection;\nexport { BaseColumnCollection };","/**** collection-meta-view-column.js | MetaViewColumnCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { MetaElement } from 'logic-core';\nimport { BaseColumn } from './base-column.js';\nimport { MetaRegistry } from 'logic-core';\nimport { MetaColumn } from './meta-column.js';\nimport { BaseColumnCollection } from './base-column-collection.js';\n\nvar MetaViewColumnCollection  = (function (_super) {\n    /**\n     * 메타 뷰 컬럼 컬렉션\n     * @constructs _L.Meta.Entity.MetaViewColumnCollection\n     * @extends _L.Meta.Entity.BaseColumnCollection\n     * @param {object} p_owner 소유자\n     */\n    function MetaViewColumnCollection(p_owner) {\n        _super.call(this, p_owner, MetaColumn);\n\n        /** \n         * 참조하는 엔티티 목록\n         * @readonly\n         * @member {array<BaseEntity>} _L.Meta.Entity.MetaViewColumnCollection#_refEntities\n         */\n        Object.defineProperty(this, '_refEntities', \n        {\n            get: function() { \n                var arr = [];\n                for (var i = 0; i < this.count; i++) {\n                    var column = this[i];\n                    if (this._owner !== column._entity && arr.indexOf(column._entity) < 0) {\n                        arr.push(column._entity);\n                    }\n                }\n                return arr; \n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_refEntities', 'addValue', 'addEntity'];\n    }\n    Util.inherits(MetaViewColumnCollection, _super);\n\n    MetaViewColumnCollection._NS = 'Meta.Entity';                       // namespace\n    MetaViewColumnCollection._PARAMS = ['_owner', '_baseCollection'];   // creator parameter\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaViewColumnCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        \n        if (vOpt === 0) {   // 참조로 바꿈\n            for (var i = 0; i < obj['_elem'].length; i++) {\n                var elem = obj['_elem'][i];\n                if (vOpt < 2 && vOpt > -1 && elem['_entity'] && elem['_entity']['$ref'] !== this._owner._guid) {\n                    var rObj = MetaRegistry.createReferObject(elem); // 소유자가 아니면 참조 리턴\n                    obj['_elem'][i] = rObj;\n                }\n            }\n        }\n        return obj;                  \n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * 뷰컬렉션에 컬럼을 추가(등록/설정)한다.  \n     * - entity가 있는 컬럼을 추가할 경우 : 참조가 추가되는 것이다.  \n     *      + collection 존재할 경우 최상위 컬렉션에도 참조가 등록된다.  \n     * - entity가 없는 컬럼을 추가할 경우 : 자신을 소유자로 등록한다.  \n     * - collection에 컬럼이 존재할 경우 : columns 객체는 무시되고, 리턴한 객체의 참조를 등록한다.  \n     * - collection에 컬럼이 없을 경우 : 컬렉션에 entity를 설정한다.(참조 재귀호출시 최상위만 등록됨)  \n     *      + collection 존재할 경우 entity 항상 존재한다.  \n     * - entity가 있는 컬럼을 추가할 경우 : 참조가 추가되는 것이다.\n     * - entity가 없는 컬럼을 추가할 경우 : 자신을 소유자로 등록한다.\n     * - collection에 컬럼이 존재할 경우 : columns 객체는 무시되고, 리턴한 객체의 참조를 등록한다.\n     * - collection에 컬럼이 없을 경우 : 컬렉션에 entity를 설정한다.(참조 재귀호출시 최상위만 등록됨)\n     * @param {string | MetaColumn} p_column 컬럼\n     * @param {BaseColumnCollection} [p_refCollection] 참조컬렉션\n     */\n    MetaViewColumnCollection.prototype.add  = function(p_column, p_refCollection) {\n        var collection;\n        var key;\n        var column;\n\n        if (p_refCollection && !(p_refCollection instanceof BaseColumnCollection)) {\n            throw new ExtendError(/EL05161/, null, []);\n        }\n\n        if (p_column instanceof BaseColumn) {\n            key = p_column.columnName;\n            column = p_column;\n        } else if (typeof p_column === 'string') {\n            key = p_column;\n            column = new this._baseType(key, this._owner);\n        } else throw new ExtendError(/EL05162/, null, [typeof p_column]);\n\n        // baseCollection & refCollection 존재하는 경우\n        if (p_refCollection instanceof BaseColumnCollection) {                                  \n            collection = p_refCollection;\n        } else if (this._owner && this._owner._baseEntity && this._owner._baseEntity.columns) { \n            collection = this._owner._baseEntity.columns;\n        }\n        \n        // 컬렉션이 있는 경우 : _entity 항상 존재\n        if (collection) {\n            if (collection.contains(collection[key])) {\n                column = collection[key];   // 기존에 존재하면 참조 가져옴\n            } else {                                                \n                collection.add(p_column);      // 없으면 컬렉션에 추가(owner 설정됨)\n                column = collection[key];\n            }\n        }\n        if (!column._entity && this._ownerIsEntity()) column._entity = this._owner;\n        // if (!column._entity) column._entity = this._owner;\n\n        return _super.prototype.add.call(this, key, column);\n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     *  이름과 값으로 컬럼 생성하여 컬렉션에 추가\n     * @param {string} p_name 컬럼명\n     * @param {string | number | boolean} p_value 값\n     * @param {BaseColumnCollection} [p_refCollection]\n     * @returns {MetaColumn}\n     */\n    MetaViewColumnCollection.prototype.addValue  = function(p_name, p_value, p_refCollection) {\n        var item;\n        var property = {};\n        var _valueTypes = this._baseType._VALUE_TYPE;\n\n        if (typeof p_name !== 'string') throw new ExtendError(/EL05163/, null, [typeof p_name]);\n        if (_valueTypes.length > 0) Type.matchType([_valueTypes], p_value);\n        \n        property = { value: p_value };\n        item = new this._baseType(p_name, null, property);\n\n        return this[this.add(item, p_refCollection)];\n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'addValue', {\n        enumerable: false\n    });\n\n    /**\n     * 엔티티의 모든 컬럼을 추가\n     * @param {BaseEntity} p_entity \n     */\n    MetaViewColumnCollection.prototype.addEntity  = function(p_entity) {\n        if (typeof p_entity !== 'undefined' && !(p_entity instanceof MetaElement && p_entity.instanceOf('BaseEntity'))) {\n            throw new ExtendError(/EL05164/, null, []);\n        }\n\n        for (var i = 0; p_entity.columns.count > i; i++) {\n            this.add(p_entity.columns[i]);\n        }\n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'addEntity', {\n        enumerable: false\n    });\n    \n    return MetaViewColumnCollection;\n\n}(BaseColumnCollection));\n\nexport default MetaViewColumnCollection;\nexport { MetaViewColumnCollection };","/**** collection-meta-table-column.js | MetaTableColumnCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { BaseColumn } from './base-column.js';\nimport { MetaColumn } from './meta-column.js';\nimport { BaseColumnCollection } from './base-column-collection.js';\n\nvar MetaTableColumnCollection  = (function (_super) {\n    /**\n     * 테이블 컬럼 컬렉션  \n     * 참조 컬럼은 독립적으로 가진다 (참조 금지)\n     * @constructs _L.Meta.Entity.MetaTableColumnCollection\n     * @extends _L.Meta.Entity.BaseColumnCollection\n     * @param {object} p_owner 소유자\n     */\n    function MetaTableColumnCollection(p_owner) {\n        _super.call(this, p_owner, MetaColumn);\n\n        // 예약어 등록 \n        this.$KEYWORD = ['addValue'];\n    }\n    Util.inherits(MetaTableColumnCollection, _super);\n\n    MetaTableColumnCollection._NS = 'Meta.Entity';          // namespace\n    MetaTableColumnCollection._PARAMS = ['_owner'];         // creator parameter\n\n    /**\n     * 테이블 컬렉션에 컬럼 추가\n     * @param {string | BaseColumn} p_column 컬럼명, 매타컬럼\n     * @returns {number} 등록한 index\n     */\n    MetaTableColumnCollection.prototype.add  = function(p_column) {\n        var column;\n        var key;\n\n        if (typeof p_column === 'string') {      \n            key  = p_column;\n            if (this._ownerIsEntity()) column = new this._baseType(key, this._owner);\n            else column = new this._baseType(key);\n            \n        } else if (p_column instanceof BaseColumn) {\n            key  = p_column.columnName;\n            if (this._ownerIsEntity() && p_column._owner !== this._owner) {\n                column = p_column.clone(this._owner);\n            } else column = p_column;\n            // if (this._ownerIsEntity()) column = p_column.clone(this._owner);\n            // else column = p_column.clone();\n            \n        } else {\n            throw new ExtendError(/EL05151/, null, [typeof p_column]); \n        }\n\n        return _super.prototype.add.call(this, key, column);\n    };\n    Object.defineProperty(MetaTableColumnCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * 이름과 값으로 컬렉션에 추가 (내부에서 생성)\n     * @param {string} p_name 컬럼명\n     * @param {string | number | boolean} p_value 값\n     * @returns {BaseColumn} 추가한 컬럼 객체\n     */\n    MetaTableColumnCollection.prototype.addValue  = function(p_name, p_value) {\n        var item;\n        var property = {};\n        var _valueTypes = this._baseType._VALUE_TYPE;\n\n        if (typeof p_name !== 'string') throw new ExtendError(/EL05152/, null, [typeof p_name]);\n        if (_valueTypes.length > 0) Type.matchType([_valueTypes], p_value);\n        \n        property = { value: p_value };\n        item = new this._baseType(p_name, this._owner, property);\n\n        return this[this.add(item)];\n    };\n    Object.defineProperty(MetaTableColumnCollection.prototype, 'addValue', {\n        enumerable: false\n    });\n\n    return MetaTableColumnCollection;\n\n}(BaseColumnCollection));\n\n\nexport default MetaTableColumnCollection;\nexport { MetaTableColumnCollection };","/**** base-entity.js | _L.Meta.Entity.BaseEntity ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { ISerialize } from 'logic-core';\nimport { IGroupControl } from './i-control-group.js';\nimport { ISchemaControl } from './i-control-schema.js';\nimport { IImportControl } from './i-control-import.js';\nimport { IExportControl } from './i-control-export.js';\nimport { MetaElement } from 'logic-core';\nimport { MetaRowCollection } from './collection-meta-row.js';\nimport { MetaRow } from './meta-row.js';\nimport { MetaColumn } from './meta-column.js';\nimport { MetaRegistry } from 'logic-core';\n\nvar BaseEntity  = (function (_super) {\n    /**\n     * 기본 엔티티 (최상위)\n     * @abstract\n     * @constructs _L.Meta.Entity.BaseEntity\n     * @extends _L.Meta.MetaElement\n     * @implements {_L.Interface.IGroupControl}\n     * @implements {_L.Interface.ISchemaControl}\n     * @implements {_L.Interface.IImportControl}\n     * @implements {_L.Interface.IExportControl}\n     * @implements {_L.Interface.ISerialize}\n     * @param {string} p_name \n     */\n    function BaseEntity(p_name) {\n        _super.call(this, p_name);\n\n        var _metaSet    = null;\n        var rows        = new MetaRowCollection(this);\n\n        /**\n         * 엔티티의 아이템(속성) 컬렉션\n         * @member {MetaSet} _L.Meta.Entity.BaseEntity#_metaSet\n         */\n        Object.defineProperty(this, '_metaSet', \n        {\n            get: function() { return _metaSet; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaElement && nVal.instanceOf('MetaSet'))) {\n                    throw new ExtendError(/EL05311/, null, [this.constructor.name]);\n                }\n                _metaSet = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 엔티티의 아이템(속성) 컬렉션\n         * @readonly\n         * @member {BaseColumnCollection} _L.Meta.Entity.BaseEntity#columns\n         */\n        Object.defineProperty(this, 'columns', \n        {\n            get: function() { \n                throw new ExtendError(/EL05312/, null, [this.constructor.name]);\n            },\n            configurable: true, // 하위에서 재정의 해야함\n            enumerable: true\n        });\n        \n        /**\n         * columns 별칭\n         * @member {object} _L.Meta.Entity.BaseEntity#cols \n         */\n        Object.defineProperty(this, 'cols', \n        {\n            get: function() { return this.columns; },\n            set: function(nVal) { this.columns = nVal;},\n            configurable: true,\n            enumerable: false\n        });\n\n        /**\n         * 엔티티의 데이터(로우) 컬렉션\n         * @readonly\n         * @member {MetaRowCollection} _L.Meta.Entity.BaseEntity#rows\n         */\n        Object.defineProperty(this, 'rows', {\n            get: function() { return rows; },\n            configurable: false,\n            enumerable: true\n        });\n\n        Util.implements(BaseEntity, this);      // strip:\n    }\n    Util.inherits(BaseEntity, _super);\n    \n    BaseEntity._UNION = [IGroupControl, ISchemaControl, IImportControl, IExportControl, ISerialize];\n    BaseEntity._NS = 'Meta.Entity';         // namespace\n    BaseEntity._PARAMS = ['name'];          // creator parameter\n    BaseEntity._KIND = 'abstract';\n\n    \n    // local funciton\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    function _isSchema(obj) {    // 객체 여부\n        if (!_isObject(obj)) return false;\n        if (_isObject(obj['columns']) || _isObject(obj['rows'])) return true;\n        return false;\n    }\n\n    \n    /**\n     * 엔티티 스카마 객체로 변환\n     * @param {object} p_oGuid getObject()로 얻은 객체\n     * @static\n     * @returns {object}\n     */\n    BaseEntity.transformSchema  = function(p_oGuid) {\n        var obj = {};\n        var oGuid = p_oGuid;\n\n        try {\n            if (!_isSchema(p_oGuid)) { \n                throw new ExtendError(/EL05331/, null, [p_oGuid.columns, p_oGuid.rows]);\n            }\n\n            if (oGuid['_guid']) obj['_guid'] = oGuid['_guid'];\n            if (oGuid['_baseEntity']) obj['_baseEntity'] = oGuid['_baseEntity'];\n            obj['columns'] = $transformColumn(oGuid['columns'], oGuid);\n            obj['rows'] = $transformRow(oGuid['rows'], oGuid);\n            \n        } catch (error) {\n            throw new ExtendError(/EL05332/, error, []);\n        }\n        \n        return obj;\n\n        // inner funciton\n        function $transformColumn(oGuid, origin) {\n            var obj = {};\n            for (var i = 0; i < oGuid['_elem'].length; i++) {\n                var column = oGuid['_elem'][i];\n                var key = oGuid['_key'][i];\n                obj[key] = {};\n                if (column['$ref']) obj[key] = column;\n                else {\n                    if (column['_entity'] && column['_entity']['$ref'] !== origin['_guid']) {\n                        obj[key]._entity = {};\n                        obj[key]._entity['$ref'] = column['_entity']['$ref'];\n                    } \n                    if (typeof column._guid !== 'undefined') obj[key]._guid = column['_guid'];\n                    if (typeof column.default !== 'undefined') obj[key].default = column['default'];\n                    if (typeof column.caption !== 'undefined') obj[key].caption = column['caption'];            \n                    if (typeof column.required !== 'undefined') obj[key].required = column['required'];\n                    // if (column.optional) obj[key].optional = column['optional'];\n                    if (Array.isArray(column.constraints)) {\n                        obj[key]['constraints'] = Util.deepCopy(column['constraints']);\n                    }\n                    if (typeof column.getter !== 'undefined') obj[key].getter = column['getter'];\n                    if (typeof column.setter !== 'undefined') obj[key].setter = column['setter'];\n                    if (typeof column.$alias !== 'undefined') obj[key].alias = column['$alias'];\n                    if (typeof column.$value !== 'undefined') obj[key].value = column['$value'];\n                }\n            }\n            obj['$key'] = oGuid['_key'];\n            return obj;\n        }\n        function $transformRow(oGuid) {\n            var arr = [];\n            for (var i = 0; i < oGuid['_elem'].length; i++) {\n                var rows = oGuid['_elem'][i];\n                var obj = {};\n                for (var ii = 0; ii < rows['_elem'].length; ii++) {\n                    var row = rows['_elem'][ii];\n                    var key = rows['_key'][ii];\n                    obj[key] = row;\n                }\n                arr.push(obj);\n            }\n            return arr;\n        }\n    };\n    \n    /**\n     * 엔티티 대상에 로우 만들기\n     * @protected\n     * @param {BaseEntity} p_entity 빌드 대상 엔티티\n     * @param {function} p_callback 로우 대상 조회 콜백\n     * @param {array<string>} p_items 선택할 로우명 , [] 또는 undefined 시 전체 선택    TODO: 필수 선택 여부 확인 필요\n     * @returns {BaseEntity}\n     */\n    BaseEntity.prototype._buildEntity = function(p_entity, p_callback, p_items) {\n        var orignal = this.clone();\n        var columnName;\n        var column;\n\n        try {\n            // columns 구성\n            if (p_items.length === 0) {\n                for (var i = 0; i < this.columns.count; i++) {\n                    p_entity.columns.add(this.columns[i]);  // 참조로 등록\n                }\n\n            } else {\n                for (var i = 0; i < p_items.length; i++) {\n                    columnName = p_items[i];\n                    if (!_isString(columnName)) throw new ExtendError(/EL05321/, null, [i, typeof columnName]);\n                    if (!this.columns.exists(columnName)) throw new ExtendError(/EL05322/, null, [columnName]);\n                    \n                    column = this.columns.alias(columnName)\n                    p_entity.columns.add(column);\n                }\n            }\n\n            // rows 등록\n            for (var i = 0; i < orignal.rows.count; i++) {  \n                if (!p_callback || (typeof p_callback === 'function' \n                    && p_callback.call(this, orignal.rows[i], i, p_entity))) {\n                    p_entity.rows.add($createRow(orignal.rows[i]));\n                } \n            }\n            return p_entity;\n            \n        } catch (error) {\n            throw new ExtendError(/EL05323/, error, []);\n        }\n\n        // inner function\n        function $createRow(row) {\n            var alias, newRow;\n            newRow = p_entity.newRow();\n            for (var ii = 0; ii < p_entity.columns.count; ii++) {\n                alias = p_entity.columns[ii].alias;\n                newRow[alias] = row[alias];\n            }\n            return newRow;\n        }\n    };\n\n    /**\n     * BaseEntity 읽기(로드)\n     * @protected\n     * @param {BaseEntity} p_object 대상 엔티티\n     * @param {number} p_option 옵션\n     */\n    BaseEntity.prototype._readEntity = function(p_entity, p_option) {\n        var opt = p_option || 3;\n        var _this = this;\n\n        try {\n            if (!(p_entity instanceof BaseEntity)) throw new ExtendError(/EL05324/, null, []);\n            if (typeof opt !== 'number') throw new ExtendError(/EL05325/, null, [typeof opt]);\n        \n            if (opt % 2 === 1) $loadColumn(); // opt: 1, 3\n            if (Math.floor(opt / 2) >= 1) $loadRow(); // opt: 2, 3\n            return;\n            \n        } catch (error) {\n            throw new ExtendError(/EL05326/, error, [opt]);\n        }\n\n        // inner function\n        function $loadColumn() {\n            if (_this.rows.count > 0 ) throw new ExtendError(/EL05327/, null, [opt]);\n            for (let i = 0; i < p_entity.columns.count; i++) {\n                var column = p_entity.columns[i].clone();\n                var key = p_entity.columns.indexToKey(i);\n                if (_this.columns.exists(key)) throw new ExtendError(/EL05328/, null, [key]);\n                _this.columns.add(column);\n            }\n        }\n        function $loadRow() {    // 컬럼 기준으로 로우를 가져온다.\n            for (let i = 0; i < p_entity.rows.count; i++) {\n                var row = _this.newRow(this);\n                for (let ii = 0; ii < _this.columns.count; ii++) {\n                    var key = _this.columns.indexToKey(ii);\n                    row[key] = p_entity.rows[i][key];\n                }\n                _this.rows.add(row);\n            }\n        }\n    };\n\n\n    /**\n     * 스키마 읽기\n     * @param {object} p_obj 대상 객체\n     * @param {boolean} [p_createRow=false] 기본값 = false, 컬럼이 없을경우 로우이름의 컬럼 생성 여부\n     * @param {object} [p_origin] 원본 객체\n     */\n    BaseEntity.prototype._readSchema  = function(p_obj, p_isCreateRow, p_origin) {\n        var _this = this;\n        var obj = p_obj;\n        var columns;\n        var rows = [];\n        var Column = this.columns._baseType;\n        var origin = p_origin ? p_origin : p_obj;\n        \n        try {\n\n            if (obj['_guid']) MetaRegistry.setMetaObject(obj, this); \n\n            if (obj._baseEntity && obj._baseEntity['$ref']) {\n                obj['_baseEntity'] = MetaRegistry.findSetObject(obj._baseEntity['$ref'], origin);\n                if (!obj['_baseEntity']) throw new ExtendError(/EL05329/, null, [obj._baseEntity['$ref']]);\n            }\n            columns = obj['columns'];\n            if (columns) {\n                    // 1. $key 인덱스 기준으로 컬럼명 추출\n                    if (columns['$key'] && Array.isArray(columns['$key'])) {\n                        for (var i = 0; i < columns['$key'].length; i++) {\n                            \n                                $addColumn(columns['$key'][i], columns);\n                            }\n                    // 2. 무작위로 컬럼명 추출\n                    } else for (var key in columns) $addColumn(key, columns);\n                    \n\n            }\n            // opt\n            if (p_isCreateRow === true && obj['rows']) {\n                // rows = obj['rows'];\n                if (Array.isArray(obj['rows'])) rows = obj['rows'];\n                else rows.push(obj['rows']);\n\n                if (Array.isArray(rows) && rows.length > 0 && typeof rows[0] === 'object') {\n                    for (var key in rows[0]) {    // rows[0] 기준\n                        if (Object.prototype.hasOwnProperty.call(rows[0], key) && !this.columns.existAlias(key)) {\n                            var prop = rows[0][key];\n                            if (!this.columns.exists(key)) {\n                                var column = new Column(key, this);\n                                this.columns.add(column);\n                            }\n                        }\n                    }\n                }\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL0532A/, error, []);\n        }\n\n        // innner function\n        function $addColumn(key, columns) {\n            var column;\n            \n            if (!_isObject(columns[key])) columns[key] = { value: columns[key] }; \n            // REVIEW: 조건문 필요성 검토\n            if (_isObject(columns[key])) {\n                if (_this.rows.count > 0 ) throw new ExtendError(/EL0532B/, null, []);\n                var prop = columns[key];\n                var obj = {};\n                if (_isObject(prop) && prop['$ref']) {\n                    column = MetaRegistry.findSetObject(prop['$ref'], origin);\n                    if (!column) throw new ExtendError(/EL0532C/, null, [key, prop['$ref']]);\n                } else {\n                    if (_isObject(prop['_entity']) && prop['_entity']['$ref']) {\n                        prop['_entity'] = MetaRegistry.findSetObject(prop['_entity']['$ref'], origin);\n                        if (!prop['_entity']) throw new ExtendError(/EL0532D/, null, [key, '_entity']);\n                    }\n                    for (var p in prop) obj[p] = prop[p];\n\n                    column = new Column(key, null, obj);\n                }\n                if(prop['_guid']) MetaRegistry.setMetaObject(prop, column); \n                if (_this.columns.exists(key)) throw new ExtendError(/EL0532E/, null, [key]);\n                _this.columns.add(column);\n            }\n        }\n    \n    };\n    \n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseEntity.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj;\n        var vOpt = p_vOpt || 0;\n        var owned;\n\n        obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1 && this._metaSet) {\n            obj['_metaSet'] = MetaRegistry.createReferObject(this._metaSet);\n        }\n        obj['columns'] = this.columns.getObject(vOpt, owned);\n        obj['rows'] = this.rows.getObject(vOpt, owned);\n        return obj;                        \n    };\n\n    /** \n     * rows(데이터) 초기화 한다\n     */\n    BaseEntity.prototype.clear = function() {\n        this.rows.clear();\n    };\n\n    /** \n     * columns, rows(데이터)를 초기화 한다\n     */\n    BaseEntity.prototype.reset = function() {\n        \n        this.rows.clear();\n        this.columns.clear();\n    };\n\n    /**\n     * 새로운 MetaRow 를 추가한다.\n     * @returns {MetaRow} columns 구조의 row를 생성\n     */\n    BaseEntity.prototype.newRow  = function() {\n        return new MetaRow(this);\n    };\n\n    /**\n     * 컬럼의 value 값을 MetaRow 타입 객체로 얻기\n     * @returns {MetaRow}\n     */\n    BaseEntity.prototype.getValue  = function() {\n        var row = this.newRow();\n\n        for(var i = 0; this.columns.count > i; i++) {\n            var value = this.columns[i].value;    \n            row[i] = value === null ? this.columns[i].default : value;\n        }\n        return row;\n    };\n\n    /**\n     * MetaRow 의 값을 컬럼의 value에 설정한다.\n     * @param {MetaRow} p_row 로우\n     */\n    BaseEntity.prototype.setValue  = function(p_row) {\n        var alias = '';\n\n        try {\n            if (!(p_row instanceof MetaRow)) throw new ExtendError(/EL05333/, null, []);\n            for(var i = 0; this.columns.count > i; i++) {\n                alias = this.columns[i].alias;        // 별칭이 없을시 name 설정됨\n                this.columns[i].value = p_row[alias];\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL05334/, error, []);\n        }\n    };\n\n    /**\n     * 엔티티(테이블/뷰)와 병합\n     * @param {BaseEntity} p_target 병할할 대상\n     * @param {object} p_option 옵션\n     * @param {object} p_option.0 로우(idx) 기준 병합, 초과 컬럼은 무시됨 <**>   \n     * @param {object} p_option.1 컬럼(key) 기준 병합, 초과 로우는 무시됨\n     * @param {object} p_option.2 로우(idx) 기준 병합, 초과 컬럼은 채워짐\n     * @param {object} p_option.3 컬럼(key) 기준 병합, 초과 로우는 채워짐 \n     * @param {boolean} [p_matchType] 로우 유효성 검사 유무 (기본:false)\n     */\n    BaseEntity.prototype.merge  = function(p_target, p_option, p_matchType) {\n        var _this = this;\n        var opt = p_option || 0;\n        var key, alias, newRow, tarRow, oriRows, tarRows, tarColumns;\n        var tempRows = [], clone;\n        var target;\n\n        \n        try {\n            // 1. 유효성 검사\n            if (!(p_target instanceof BaseEntity)) throw new ExtendError(/EL05341/, null, []);\n            if (typeof p_option !== 'number') throw new ExtendError(/EL05342/, null, [typeof p_option]);\n\n            // 2. 타겟 복제본 만들기\n            target = p_target.clone();\n\n            // opt = 0\n            if (opt === 0) $mergeByRow();\n            // opt = 1\n            if (opt === 1) $mergeByColumn();\n            // opt = 2\n            if (opt === 2) $mergeByRowFill();\n            // opt = 3\n            if (opt === 3) $mergeByColumnFill();\n\n        } catch (error) {\n            throw new ExtendError(/EL05347/, error, [opt]);\n        }\n\n        // innner function\n        function $mergeByRow() {    // opt = 0\n            // 3-1. 로우 임시 저장 및 초기화 \n            for (var i = 0; i < _this.rows.count; i++) {\n                tempRows.push(_this.rows[i].clone());\n            }\n            _this.rows.clear();\n            // 3-2. 원본 row 추가\n            for (var i = 0; i < tempRows.length; i++) {\n                newRow = _this.newRow();\n                for (var ii = 0; ii < _this.columns.count; ii++) {\n                    alias = _this.columns[ii].alias;\n                    if (tempRows[i][alias]) newRow[alias] = tempRows[i][alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n            // 3-3. 타겟 row 추가\n            tarRows = target.rows;\n            for (var i = 0; i < tarRows.count; i++) {\n                newRow = _this.newRow();\n                tarRow = tarRows[i];\n                for (var ii = 0; ii < _this.columns.count; ii++) {\n                    alias = _this.columns[ii].alias;\n                    if (tarRow[alias]) newRow[alias] = tarRow[alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n        }\n        function $mergeByColumn() {     // opt = 1\n            tarColumns = target.columns;\n            tarRows = target.rows;\n            // 3-1. 컬럼 중복 검사\n            for (var i = 0; i < tarColumns.count; i++) {\n                alias = tarColumns[i].alias;\n                if (_this.columns.exists(alias)) throw new ExtendError(/EL05343/, null, [i, alias]);\n                if (_this.columns.existAlias(alias)) throw new ExtendError(/EL05344/, null, [i, alias]);\n            }\n            // 3-2. 로우 임시 저장 및 초기화 \n            for (var i = 0; i < _this.rows.count; i++) {\n                tempRows.push(_this.rows[i].clone());\n            }\n            _this.rows.clear();\n            // 3-3. 컬럼 추가\n            for (var i = 0; i < tarColumns.count; i++) {\n                clone = tarColumns[i].clone(_this);\n                var key = tarColumns[i].alias;\n                clone.columnName = key;\n                clone.$key = key;\n                // clone.__SET$$key(key, clone);\n                _this.columns.add(clone);\n            }\n            // 3-4. 로우 추가 (기준:idx)\n            for (var i = 0; i < tempRows.length; i++) {\n                newRow = _this.newRow();\n                for (var ii = 0; ii < _this.columns.count; ii++) {\n                    alias = _this.columns[ii].alias;\n                    if (tempRows[i][alias]) {                         // 원본 로우\n                        newRow[alias] = tempRows[i][alias];\n                        continue;\n                    } else if (tarRows[i] && tarRows[i][alias]) newRow[alias] = tarRows[i][alias]; // 타겟 로우\n                }\n                _this.rows.add(newRow, p_matchType);\n            }    \n        }\n        function $mergeByRowFill() {    // opt = 2\n            tarColumns = target.columns;\n            tarRows = target.rows;\n            // 3-1. 로우 임시 저장 및 초기화 \n            for (var i = 0; i < _this.rows.count; i++) {\n                tempRows.push(_this.rows[i].clone());\n            }\n            _this.rows.clear();\n            // 3-2. 컬럼 추가\n            for (var i = 0; i < tarColumns.count; i++) {\n                alias = tarColumns[i].alias;\n                if (!_this.columns.exists(alias)) {\n                    clone = tarColumns[i].clone(_this);\n                    clone.name = alias;\n                    _this.columns.add(clone);\n                }\n            }\n            // 3-3. 로우 추가 : 원본\n            for (var i = 0; i < tempRows.length; i++) {\n                newRow = _this.newRow();\n                for (var ii = 0; ii < _this.columns.count; ii++) {\n                    alias = _this.columns[ii].alias;\n                    if (tempRows[i][alias]) newRow[alias] = tempRows[i][alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n            // 3-4. 로우 추가 : 타겟\n            for (var i = 0; i < tarRows.count; i++) {\n                newRow = _this.newRow();\n                for (var ii = 0; ii < _this.columns.count; ii++) {\n                    alias = _this.columns[ii].alias;\n                    if (tarRows[i][alias]) newRow[alias] = tarRows[i][alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n        }\n        function $mergeByColumnFill() { // opt = 3\n            tarColumns = target.columns;\n            tarRows = target.rows;\n            // 3-1. 컬럼 중복 검사\n            for (var i = 0; i < tarColumns.count; i++) {\n                alias = tarColumns[i].alias;\n                if (_this.columns.exists(alias)) throw new ExtendError(/EL05345/, null, [i, alias]);\n                if (_this.columns.existAlias(alias)) throw new ExtendError(/EL05346/, null, [i, alias]);\n            }\n            // 3-2. 로우 임시 저장 및 초기화 \n            for (var i = 0; i < _this.rows.count; i++) {\n                tempRows.push(_this.rows[i].clone());\n            }\n            _this.rows.clear();\n            // 3-3. 컬럼 추가\n            for (var i = 0; i < tarColumns.count; i++) {\n                clone = tarColumns[i].clone(_this);\n                clone.columnName = tarColumns[i].alias;\n                _this.columns.add(clone);\n            }\n            // 3-4. 로우 추가 (idx)\n            for (var i = 0; i < tempRows.length; i++) {\n                newRow = _this.newRow();\n                for (var ii = 0; ii < _this.columns.count; ii++) {\n                    alias = _this.columns[ii].alias;\n                    if (tempRows[i][alias]) {                         // 원본 로우\n                        newRow[alias] = tempRows[i][alias];\n                        continue;\n                    }else newRow[alias] = tarRows[i][alias]; // 타겟 로우\n                }\n                _this.rows.add(newRow, p_matchType);\n            }     \n            // 3-5. 타겟 로우가 클 경우 로우 추가\n            if (tempRows.length < tarRows.count) {\n                for (var i = tempRows.length; i < tarRows.count; i++) {\n                    newRow = _this.newRow();\n                    for (var ii = 0; ii < _this.columns.count; ii++) {\n                        alias = _this.columns[ii].alias;\n                        if (tarRows[i][alias]) newRow[alias] = tarRows[i][alias];\n                    }\n                    _this.rows.add(newRow, p_matchType);\n                }\n            }\n        }\n    };\n\n    /**\n     * 엔티티의 지정한 컬럼과 조건의 row 를 조회\n     * @param {function | array<string>| arguments<string>} p_filter 필터\n     * @param {array<string> | arguments<string>} [p_args] filter 설정시 컬럼명\n     * @returns {MetaRow[]}\n     */\n    BaseEntity.prototype.select  = function(p_filter, p_args) {\n        var args = Array.prototype.slice.call(arguments);\n        var MetaView;\n        var columnNames = [];\n        var callback;\n        var view;\n        var selectList = [];\n\n        try {\n            args = Array.prototype.slice.call(arguments);\n            MetaView = MetaRegistry.namespace.find('Meta.Entity.MetaView');\n            \n            if (!MetaView) throw new ExtendError(/EL05335/, null, ['Meta.Entity.MetaView']);\n            \n            view = new MetaView('select');\n\n            // 매개변수 구성\n            if (typeof p_filter === 'function') {\n                callback = p_filter;\n                if (Array.isArray(p_args)) columnNames = p_args;\n                else if (args.length > 1) columnNames = args.splice(1);\n            } else if (Array.isArray(p_filter)) {\n                columnNames = p_filter;\n            } else {\n                columnNames = args.splice(0);\n            }\n            // 엔티티 빌드\n            // return this._buildEntity(view, callback, columnNames);\n\n            this._buildEntity(view, callback, columnNames);\n            \n            for (var i = 0; i < view.rows.count; i++) {\n                selectList.push(view.rows[i]);\n            }\n            return selectList;\n\n        } catch (error) {\n            throw new ExtendError(/EL05336/, error, []);\n        }\n\n    };\n    \n    /**\n     * 객체(직렬화) 로드\n     * 불러오기/가져오기 (!! 병합용도가 아님)\n     * 기존을 초기화 하고 불러오는 역활\n     * @param {object | string} p_obj 불러오기 대상\n     * @param {function} [p_parse] 파서\n     */\n    BaseEntity.prototype.load = function(p_obj, p_parse) {\n        var obj = p_obj;\n        \n        \n        try {\n            if (p_obj instanceof BaseEntity) throw new ExtendError(/EL05351/, null, []);\n            if (typeof obj === 'string') {\n                if (typeof p_parse === 'function') obj = p_parse(obj);\n                else obj = JSON.parse(obj, null);\n            }    \n            if (!_isObject(obj)) throw new ExtendError(/EL05352/, null, [typeof obj]);\n            this.setObject(obj);\n            \n        } catch (error) {\n            throw new ExtendError(/EL05353/, error, []);\n        }\n    };\n\n    // BaseEntity.prototype.load._TYPE = { params: String };\n\n    /**\n     * 객체 출력(직렬화)\n     * @param {number} [p_vOpt] 옵션 (0, 1, 2)\n     * @param {function} [p_stringify] 파서출력 사용자 함수\n     * @param {string} [p_space] 공백\n     * @returns {string}\n     */\n    BaseEntity.prototype.output = function(p_vOpt, p_stringify, p_space) {\n        var rObj;\n        var str;\n\n        rObj = this.getObject(p_vOpt);\n        if (typeof p_stringify === 'function') str = p_stringify(rObj, {space: p_space} );\n        else str = JSON.stringify(rObj, null, p_space);\n        return str;\n    };\n\n    /**\n     * object 로 읽기   \n     * JSON 스키마 규칙   \n     * { table: { columns: {}, rows: {} }}   \n     * { columns: {...}, rows: {} }\n     * @param {object} p_obj mObject 또는 rObject 또는 entity\n     * @param {number} [p_option] 기본값  = 3\n     * @param {number} p_option.1 컬럼(구조)만 가져온다. \n     * @param {number} p_option.2 로우(데이터)만 가져온다 (컬럼 참조)  \n     * @param {number} p_option.3 컬럼/로우를 가져온다. 로우만 존재하면 로우 이름의 빈 컬럼을 생성한다. \n     */\n    BaseEntity.prototype.read  = function(p_obj, p_option) {\n        var entity = null;\n        var opt = typeof p_option === 'undefined' ? 3 : p_option;\n\n        try {\n            if (!_isObject(p_obj)) throw new ExtendError(/EL05354/, null, [typeof p_obj]);\n            if (typeof opt !== 'number') throw new ExtendError(/EL05355/, null, [typeof opt]);\n            if (opt <= 0 || opt > 3) throw new ExtendError(/EL05356/, null, [opt]);\n\n            if (p_obj instanceof BaseEntity) {\n                this._readEntity(p_obj, p_option);\n            } else {    \n                // REVIEW: entity, table 필요성 검토\n                if (p_obj['entity']) entity = p_obj['entity'];\n                else if (p_obj['table']) entity = p_obj['table'];\n                else entity = p_obj;\n\n                // 스키마 및 데이터 읽기\n                if (opt % 2 === 1) this.readSchema(entity, opt === 3 ? true : false); // opt: 1, 3\n                if (Math.floor(opt / 2) >= 1) this.readData(entity); // opt: 2, 3\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL05357/, error, []);\n        }\n    };\n    \n    /**\n     * 없으면 빈 컬럼을 생성해야 하는지?  \n     * 이경우에 대해서 명료하게 처리햐야함 !!  \n     * @param {object} p_obj object<Schema> | object<Guid>\n     * @param {boolean} [p_createRow] true 이면, row[0] 기준으로 컬럼을 추가함\n     */\n    BaseEntity.prototype.readSchema  = function(p_obj, p_createRow) {\n        var obj = p_obj;\n        \n        try {\n            if (!_isObject(p_obj)) throw new ExtendError(/EL05358/, null, [typeof p_obj]);\n            if (MetaRegistry.isGuidObject(p_obj)) {\n                if (MetaRegistry.hasRefer(p_obj)) obj = MetaRegistry.transformRefer(p_obj);\n                obj = BaseEntity.transformSchema(obj); // gObj >> sObj<요약>\n            }\n            if (!_isSchema(obj)) throw new ExtendError(/EL05359/, null, [obj.columns, obj.rows]);\n\n            if (obj.viewName) this.viewName = obj.viewName;\n            if (obj.tableName) this.tableName = obj.tableName;\n\n            this._readSchema(obj, p_createRow);\n            \n        } catch (error) {\n            throw new ExtendError(/EL0535A/, error, []);\n        }\n    };        \n\n    /**\n     * 존재하는 로우만 읽기\n     * @param {object} p_obj 읽을 객체\n     */\n    BaseEntity.prototype.readData  = function(p_obj) {\n        var obj = p_obj;\n        var rows = [];\n\n        try {\n            if (!_isObject(p_obj)) throw new ExtendError(/EL0535B/, null, [typeof p_obj]);\n\n            if (MetaRegistry.isGuidObject(p_obj)) {\n                if (MetaRegistry.hasRefer(p_obj)) obj = MetaRegistry.transformRefer(p_obj);\n                obj = BaseEntity.transformSchema(p_obj);\n            }\n            if (!_isSchema(obj)) throw new ExtendError(/EL0535C/, null, [obj.columns, obj.rows]);\n            \n            if (Array.isArray(obj['rows'])) rows = obj['rows'];\n            else rows.push(obj['rows']);\n            \n            for (var i = 0; i < rows.length && this.columns.count > 0; i++) {\n                var row = this.newRow(this);\n                for (var key in rows[i]) {\n                    if (Object.prototype.hasOwnProperty.call(row, key)) row[key] = rows[i][key];\n                }\n                this.rows.add(row);\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL0535D/, error, []);\n        }\n    };\n\n    /**\n     * 엔티티를 컬럼과 로우를 스키마 타입의 객체로 쓰기(내보내기)\n     * @param {number} p_vOpt 기본 = 0\n     * @returns {object} 스키마 타입\n     */\n    BaseEntity.prototype.write  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var oGuid;\n        \n        oGuid = this.getObject(vOpt);\n        return BaseEntity.transformSchema(oGuid);\n    };\n\n    /**\n     * 엔티티 스키마(컬럼)을 스키마 타입의 객체로 쓰기\n     * @param {number} [p_vOpt] 기본 = 0\n     * @returns {object} 스키마 타입\n     */\n    BaseEntity.prototype.writeSchema  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema;\n\n        schema = this.write(vOpt);\n        delete schema.rows;\n        return schema;                \n    };\n\n    /**\n     * 엔티티 데이터(로우)를 스키마 타입의 객체로 쓰기\n     * @param {number} p_vOpt 기본 = 0\n     * @returns {object} 스키마 타입\n     */\n    BaseEntity.prototype.writeData  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema;\n        \n        schema = this.write(vOpt);\n        delete schema.columns;\n\n        return schema;\n    };\n\n    /** \n     * columns 컬렉션에 포함된 MetaColumn의 유효성을 검사합니다. \n     * column.valid() 메서드는 required 속성과 constraints를 기준으로 value 값의 유효성을 확인합니다.\n     *  \n     * @returns {boolean} 모든 컬럼이 유효성 검사를 통과한 경우 true \n     */\n    BaseEntity.prototype.validate = function() {\n        // 컬럼 타입 검사\n        var typeCheck = this.columns.every(function(elem) {\n            if (elem instanceof MetaColumn) return true;\n        });\n\n        if (!typeCheck) throw new ExtendError(/EL05338/, null, []);\n        \n        if (this.columns.every(function(elem) {\n            if (typeof elem.valid(elem.value) === 'undefined') return true;\n        })) return true;\n        else return false;\n    };\n\n    /** \n     * 엔티티 복제\n     * @abstract \n     * @returns {BaseEntity} 복제한 객체\n     */\n    BaseEntity.prototype.clone = function() {\n        throw new ExtendError(/EL05337/, null, []);\n    };\n\n    /** \n     * 엔티티 복사\n     * @abstract \n     * @returns {BaseEntity} 복사한 뷰 객체\n     */\n    BaseEntity.prototype.copy = function() {\n        throw new ExtendError(/EL05348/, null, []);\n    };\n\n    return BaseEntity;\n\n}(MetaElement));\n\nexport default BaseEntity;\nexport { BaseEntity };","/**** collection-meta-table.js | MetaTableCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { MetaObject } from 'logic-core';\nimport { PropertyCollection } from 'logic-core';\nimport { MetaTable } from './meta-table.js';\n\nvar MetaTableCollection  = (function (_super) {\n    /**\n     * 메타 테이블 컬렉션\n     * @constructs _L.Meta.Entity.MetaTableCollection\n     * @extends _L.Collection.PropertyCollection\n     * @param {object} p_owner 소유자 \n     */\n    function MetaTableCollection(p_owner) {   // COVER:\n        _super.call(this, p_owner);\n\n        var _baseType = MetaTable;\n        /**\n         * 기본 생성 타입\n         * @member {BaseColumnCollection} _L.Meta.Entity.MetaTableCollection#_baseType\n         */\n        Object.defineProperty(this, '_baseType', \n        {\n            get: function() { return _baseType; },\n            set: function(nVal) { \n                if (!(typeof nVal === 'function')) throw new ExtendError(/EL05421/, null, [this.constructor.name, typeof nVal]);\n                // if (!(new nVal('temp') instanceof MetaTable)) throw new ExtendError('ES032', ['_baseType', 'MetaTable']);\n                if (!(Type.isProtoChain(nVal, MetaTable))) throw new ExtendError(/EL05422/, null, [this.constructor.name]);\n                _baseType = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        this._elemTypes = MetaTable;   // 컬렉션 타입 설정\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_baseType', 'existTableName'];\n    }\n    Util.inherits(MetaTableCollection, _super);\n\n    MetaTableCollection._NS = 'Meta.Entity';    // namespace\n    MetaTableCollection._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 테이블 컬렉션에 엔티티 추가\n     * @param {string | MetaTable} p_table 추가할 메타테이블\n     * @returns {MetaTable} 등록한 아이템\n     */\n    MetaTableCollection.prototype.add  = function(p_table) { // COVER:\n        var table;\n        var key;\n\n        if (typeof p_table === 'string' && p_table.length > 0) {      \n            key  = p_table;\n            table = new this._baseType(key);\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) table._metaSet = this._owner;\n            // table._metaSet = this._owner;\n\n        } else if (p_table instanceof MetaTable) {\n            key  = p_table.tableName;\n            table = p_table;\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) p_table._metaSet = this._owner;\n            // p_table._metaSet = this._owner;\n        } else throw new ExtendError(/EL05423/, null, [typeof any]);\n\n        if (this.existTableName(key)) throw new ExtendError(/EL05424/, null, [key]);\n\n        return _super.prototype.add.call(this, key, table);\n    };\n\n    /**\n     * 테이블명 존재 유무\n     * @param {string} p_key 테이블명\n     * @returns {boolean}\n     */\n    MetaTableCollection.prototype.existTableName  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].tableName === p_key) return true;\n        }\n        return false;\n    };\n    \n    return MetaTableCollection;\n\n}(PropertyCollection));\n\nexport default MetaTableCollection;\nexport { MetaTableCollection };","/**** meta-table.js | _L.Meta.Entity.MetaTable, _L.Meta.Entity.MetaTableCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { MetaRegistry } from 'logic-core';\nimport { MetaObject } from 'logic-core';\nimport { PropertyCollection } from 'logic-core';\nimport { ITransaction } from './i-transaction.js';\nimport { BaseEntity } from './base-entity.js';\nimport { MetaTableColumnCollection } from './collection-meta-table-column.js';\n\nimport { MetaTableCollection } from './collection-meta-table.js';\n\nvar MetaTable  = (function (_super) {\n    /**\n     * 테이블 엔티티\n     * @constructs _L.Meta.Entity.MetaTable\n     * @extends _L.Meta.Entity.BaseEntity\n     * @param {string} p_name 테이블명\n     */\n    function MetaTable(p_name) {\n        _super.call(this, p_name);\n\n        var columns  = new MetaTableColumnCollection(this);\n\n        /**\n         * 테이블 이름\n         * @member {string} _L.Meta.Entity.MetaTable#tableName\n         */\n        Object.defineProperty(this, 'tableName', \n        {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (nVal === this.tableName) return;\n                if (typeof nVal !== 'string') throw new ExtendError(/EL05411/, null, [typeof nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 엔티티의 아이템(속성) 컬렉션\n         * @member {MetaTableColumnCollection} _L.Meta.Entity.MetaTable#columns\n         */\n        Object.defineProperty(this, 'columns', \n        {\n            get: function() { return columns; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaTableColumnCollection)) throw new ExtendError(/EL05412/, null, []);\n                if (this.rows.count > 0) throw new ExtendError(/EL05413/, null, [this.constructor.name, this.rows.count]);\n                columns = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        Util.implements(MetaTable, this);       // strip:\n    }\n    Util.inherits(MetaTable, _super);\n    \n    MetaTable._UNION = [ITransaction];\n    MetaTable._NS = 'Meta.Entity';      // namespace\n    MetaTable._PARAMS = ['name'];       // creator parameter\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaTable.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['tableName'] = this.tableName;\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaTable.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var metaSet;\n\n        if(p_oGuid['_metaSet']) {\n            metaSet = MetaRegistry.findSetObject(p_oGuid['_metaSet']['$ref'], origin);\n            if (!metaSet) throw new ExtendError(/EL05414/, null, [p_oGuid['_metaSet']['$ref']]);\n            this._metaSet = metaSet;\n        }\n        this.columns.setObject(p_oGuid['columns'], origin);\n        this.rows.setObject(p_oGuid['rows'], origin);\n        this.tableName = p_oGuid['tableName'];\n    };\n\n    /**\n     * 객체 복제\n     * @returns {MetaTable}\n     */\n    MetaTable.prototype.clone  = function() {\n        var clone = new MetaTable(this.tableName);\n        \n        // columns 복제본 추가\n        for(var i = 0; i < this.columns.count; i++) {\n            clone.columns.add(this.columns[i].clone(clone));\n        }\n        \n        // rows 복제본 추가\n        for(var i = 0; i < this.rows.count; i++) {\n            clone.rows.add(this.rows[i].clone(clone));\n        }\n        return clone;\n    };\n\n\n    /**\n     * 엔티티를 복사한다. (조회 후 복제)\n     * @param {overload}            type1\n     * @param {function}            type1.p_filter 로우 필터 함수\n     * @param {arguments<string>}   type1.p_args 컬럼명\n     * @param {overload}            type2\n     * @param {string}              type2.p_columns 컬럼명\n     */\n    MetaTable.prototype.copy  = function(p_filter, p_args) {\n        var args = Array.prototype.slice.call(arguments);\n        var columnNames = [];\n        var callback = null;\n        var entity = new MetaTable(this.tableName, this);\n\n        // 매개변수 구성\n        if (typeof p_filter === 'function') {\n            callback = p_filter;\n            if (Array.isArray(p_args)) columnNames = p_args;\n            else if (args.length > 1) columnNames = args.splice(1);\n        } else if (Array.isArray(p_filter)) {\n            columnNames = p_filter;\n        } else {\n            columnNames = args.splice(0);\n        }\n\n        return this._buildEntity(entity, callback, columnNames);\n    };\n\n    /**\n     * 변경사항 허락 : commit\n     */\n    MetaTable.prototype.acceptChanges  = function() {\n        this.rows.commit();\n    };\n\n    /**\n     * 변경사항 취소 : rollback\n     */\n    MetaTable.prototype.rejectChanges  = function() {\n        this.rows.rollback();\n    };\n\n    /**\n     * 변경목록 얻기\n     * @returns {array<object>}\n     */\n    MetaTable.prototype.getChanges  = function() {\n        return this.rows._transQueue.select();\n    };\n\n    return MetaTable;\n\n}(BaseEntity));\n\nexport default MetaTable;\nexport { MetaTable };","/**** meta-view.js | _L.Meta.Entity.MetaView, _L.Meta.Entity.MetaViewCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\n// import { Type } from 'logic-core';\n// import { PropertyCollection } from 'logic-core';\n// import { MetaObject } from 'logic-core';\nimport { MetaRegistry } from 'logic-core';\nimport { BaseEntity } from './base-entity.js';\nimport { MetaViewColumnCollection } from './collection-meta-view-column.js';\n\nvar MetaView  = (function (_super) {\n    /**\n     * 메타 뷰\n     * @constructs _L.Meta.Entity.MetaView\n     * @extends _L.Meta.Entity.BaseEntity\n     * @param {string} p_name 뷰이름\n     * @param {BaseEntity} [p_baseEntity] 기본 엔티티, 컬럼 추가시 기본엔티티에 추가 된다.\n     */\n    function MetaView(p_name, p_baseEntity) {\n        _super.call(this, p_name);\n\n        var _baseEntity;\n        var columns = new MetaViewColumnCollection(this);\n        /**\n         * 메타 뷰 이름\n         * @member {string} _L.Meta.Entity.MetaView#viewName\n         */\n        Object.defineProperty(this, 'viewName', \n        {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (nVal === this.viewName) return;\n                if (typeof nVal !== 'string') throw new ExtendError(/EL05431/, null, [typeof nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 뷰의 컬럼 컬렉션\n         * @member {MetaViewColumnCollection} _L.Meta.Entity.MetaView#columns\n         */\n        Object.defineProperty(this, 'columns', \n        {\n            get: function() { return columns; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaViewColumnCollection)) throw new ExtendError(/EL05432/, null, [this.constructor.name]);\n                if (this.rows.count > 0) throw new ExtendError(/EL05433/, null, [this.constructor.name, this.rows.count ]);\n                columns = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 기본 엔티티\n         * null 으로 undefined \n         * @member {MetaViewColumnCollection} _L.Meta.Entity.MetaView#_baseEntity\n         */\n        Object.defineProperty(this, '_baseEntity', \n        {\n            get: function() { return _baseEntity; },\n            set: function(nVal) { \n                if (nVal === null || typeof nVal === 'undefined') {\n                    _baseEntity = undefined;    // init\n                    return;\n                }\n                if (!(nVal instanceof BaseEntity)) throw new ExtendError(/EL05434/, null, [this.constructor.name]);\n                _baseEntity = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        if (p_baseEntity) this._baseEntity = p_baseEntity;\n        \n    }\n    Util.inherits(MetaView, _super);\n\n    MetaView._NS = 'Meta.Entity';                   // namespace\n    MetaView._PARAMS = ['name', '_baseEntity'];     // creator parameter\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaView.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        // var origin = p_origin ? p_origin : obj;\n\n        obj['viewName'] = this.viewName;\n        if (vOpt < 2 && vOpt > -1 && this._baseEntity) {\n            obj['_baseEntity'] = MetaRegistry.createReferObject(this._baseEntity);\n        }\n        return obj;                  \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaView.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var metaSet;\n        var baseEntity;\n\n        if(p_oGuid['_metaSet']) {\n            metaSet = MetaRegistry.findSetObject(p_oGuid['_metaSet']['$ref'], origin);\n            if (!metaSet) throw new ExtendError(/EL05435/, null, [p_oGuid['_metaSet']['$ref']]);\n            this._metaSet = metaSet;\n        }\n        // this.metaSet = mObj.metaSet;\n        if (p_oGuid['_baseEntity']) {\n            baseEntity = MetaRegistry.findSetObject(p_oGuid['_baseEntity']['$ref'], origin);\n            if (!baseEntity) throw new ExtendError(/EL05436/, null, [p_oGuid['_baseEntity']['$ref']]);\n            // this.__SET$_baseEntity(baseEntity, this);\n            this._baseEntity = baseEntity;\n        } \n        this.columns.setObject(p_oGuid['columns'], origin);\n        this.rows.setObject(p_oGuid['rows'], origin);\n        this.viewName = p_oGuid['viewName'];\n    };\n    /**\n     * 객체 복제\n     * override\n     * @returns {MetaView}\n     */\n    MetaView.prototype.clone  = function() {\n        var clone = new MetaView(this.viewName, this._baseEntity);  // 뷰를 복제하면 참조타입 >> 엔티티타입으로 변경\n\n        for(var i = 0; i < this.columns.count; i++) {\n            if (this.columns[i]._entity === this) clone.columns.add(this.columns[i].clone(clone));\n            else clone.columns.add(this.columns[i].clone());\n        }\n\n        for(var i = 0; i < this.rows.count; i++) {\n            clone.rows.add(this.rows[i].clone(clone));\n        }\n        return clone;\n    };\n    \n    /**\n     * 엔티티를 복사한다. (조회 후 복제)\n     * @param {overload}            type1\n     * @param {function}            type1.p_filter 로우 필터 함수\n     * @param {arguments<string>}   type1.p_args 컬럼명\n     * @param {overload}            type2\n     * @param {string}              type2.p_columns 컬럼명\n     */\n    MetaView.prototype.copy  = function(p_filter, p_args) {\n        var args = Array.prototype.slice.call(arguments);\n        var _this = this;\n        var items = [];\n        var callback = null;\n        var entity = new MetaView(this.viewName, this);\n        var orignal = this.clone();\n\n        // 매개변수 구성\n        if (typeof p_filter === 'function') {\n            callback = p_filter;\n            if (Array.isArray(p_args)) items = p_args;\n            else if (args.length > 1) items = args.splice(1);\n        } else if (Array.isArray(p_filter)) {\n            items = p_filter;\n        } else {\n            items = args.splice(0);\n        }\n\n        return this._buildEntity(entity, callback, items);\n    };\n\n    \n    return MetaView;\n\n}(BaseEntity));\n\nexport default MetaView;\nexport { MetaView };","/**** collection-meta-view.js | MetaViewCollection ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { Type } from 'logic-core';\nimport { PropertyCollection } from 'logic-core';\nimport { MetaObject } from 'logic-core';\nimport { BaseEntity } from './base-entity.js';\nimport { MetaView } from './meta-view.js';\n\nvar MetaViewCollection  = (function (_super) {\n    /**\n     * 뷰 엔티티 컬렉션\n     * @constructs _L.Meta.Entity.MetaViewCollection\n     * @extends _L.Meta.Entity.PropertyCollection\n     * @param {object} p_owner 소유자 \n     */\n    function MetaViewCollection(p_owner) {    // COVER:\n        _super.call(this, p_owner);\n\n        var _baseType = MetaView;\n\n        /**\n         * 기본 생성 타입\n         * @member {MetaView} _L.Meta.Entity.MetaViewCollection#_baseType\n         */\n        Object.defineProperty(this, '_baseType', \n        {\n            get: function() { return _baseType; },\n            set: function(nVal) { \n                if (!(typeof nVal === 'function')) throw new ExtendError(/EL05441/, null, [typeof nVal]);\n                // if (!(new nVal('temp') instanceof MetaView)) throw new ExtendError('ES032', ['_baseType', 'MetaView']);\n                if (!(Type.isProtoChain(nVal, MetaView))) throw new ExtendError(/EL05442/, null, [this.constructor.name]);\n                _baseType = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        this._elemTypes = MetaView;   // 컬렉션타입 설정\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_baseType', 'existViewName'];\n    }\n    Util.inherits(MetaViewCollection, _super);\n\n    MetaViewCollection._NS = 'Meta.Entity';    // namespace\n    MetaViewCollection._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 뷰 컬렉션에 뷰 엔티티를 추가한다.\n     * @param {string | MetaView} p_view 추가할 뷰\n     * @param {BaseColumnCollection} [p_baseEntity] 기본 컬럼 컬렉션\n     * @returns {MetaView} 등록한 아이템\n     * @example\n     *  - string                    : 생성후   string      이름으로 등록 \n     *  - string, colltion          : 생성후   string      이름으로  등록 (collection보냄)\n     *  - entityView                :         entityView  이름으로 등록\n     *  - entityView, collection    :         entityView  이름으로 등록 (collection보냄) => 오류발생\n     */\n    MetaViewCollection.prototype.add  = function(p_view, p_baseEntity) {    // COVER:\n        var view;\n        var key;\n\n        if (p_view instanceof MetaView && p_baseEntity) {\n            throw new ExtendError(/EL05443/, null, []);\n        }\n        if (p_baseEntity && !(p_baseEntity instanceof BaseEntity)) {\n            throw new ExtendError(/EL05444/, null, []);\n        }\n\n        if (typeof p_view === 'string') {      \n            key  = p_view;\n            view = new this._baseType(key, p_baseEntity);\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) view._metaSet = this._owner;\n            // view._metaSet = this._owner;\n        } else if (p_view instanceof MetaView) {\n            key  = p_view.viewName;\n            view = p_view;\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) p_view._metaSet = this._owner;\n            // p_view._metaSet = this._owner;\n        } else throw new ExtendError(/EL05445/, null, [typeof p_view]);\n\n        if (this.existViewName(key)) throw new ExtendError(/EL05446/, null, [key]);\n\n        return _super.prototype.add.call(this, key, view);\n    };\n\n    /**\n     * 메타뷰가 존재하는지 확인합니다.\n     * @param {string} p_key 뷰이름\n     * @returns \n     */\n    MetaViewCollection.prototype.existViewName  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].viewName === p_key) return true;\n        }\n        return false;\n    };\n\n    return MetaViewCollection;\n\n}(PropertyCollection));\n\nexport default MetaViewCollection;\nexport { MetaViewCollection };","/**** meta-set.js | _L.Meta.Entity.MetaSet ****/\n//==============================================================\nimport { ExtendError } from 'logic-core';\nimport { Util } from 'logic-core';\nimport { ISerialize } from 'logic-core';\nimport { MetaElement } from 'logic-core';\nimport { MetaRegistry } from 'logic-core';\nimport { BaseEntity } from './base-entity.js';\nimport { ISchemaControl } from './i-control-schema.js';\nimport { IImportControl } from './i-control-import.js';\nimport { IExportControl } from './i-control-export.js';\nimport { ITransaction } from './i-transaction.js';\nimport { MetaTableCollection } from './collection-meta-table.js';\nimport { MetaViewCollection } from './collection-meta-view.js';\n\nvar MetaSet  = (function (_super) {\n    /**\n     * 메타셋\n     * @constructs _L.Meta.Entity.MetaSet\n     * @extends _L.Meta.MetaElement\n     * @implements {_L.Interface.ISchemaControl}\n     * @implements {_L.Interface.IImportControl}\n     * @implements {_L.Interface.IExportControl}\n     * @implements {_L.Interface.ITransaction}\n     * @implements {_L.Interface.ISerialize}\n     * @param {string} p_name 메타셋 이름\n     */\n    function MetaSet(p_name) {\n        _super.call(this, p_name);\n\n        var tables = new MetaTableCollection(this);\n        var views  = new MetaViewCollection(this);\n\n        /**\n         * 테이블 이름\n         * @member {string} _L.Meta.Entity.MetaSet#setName\n         */\n        Object.defineProperty(this, 'setName', \n        {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (typeof nVal !== 'string') throw new ExtendError(/EL05451/, null, [this.constructor.name, typeof nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 메타 테이블 컬렉션\n         * @readonly\n         * @member {MetaTableCollection} _L.Meta.Entity.MetaSet#tables\n         */\n        Object.defineProperty(this, 'tables', \n        {\n            get: function() { return tables; },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 메타 뷰 컬렉션\n         * @readonly\n         * @member {MetaViewCollection} _L.Meta.Entity.MetaSet#views\n         */\n        Object.defineProperty(this, 'views', \n        {\n            get: function() { return views; },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 트랜젝션 사용 유무 (기본값: 사용 false)\n         * @member {boolean}  _L.Meta.Entity.MetaSet#autoChanges\n         */\n        Object.defineProperty(this, 'autoChanges', {\n            set: function(nVal) { \n                if (typeof nVal !== 'boolean') {\n                    throw new ExtendError(/EL05452/, null, [this.constructor.name, typeof nVal]);\n                }\n                for (var i = 0; i < this.tables.count; i++) {\n                    this.tables[i].rows.autoChanges = nVal;\n                }\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        Util.implements(MetaSet, this);     // strip:\n    }\n    Util.inherits(MetaSet, _super);\n    \n    MetaSet._UNION = [ISchemaControl, IImportControl, IExportControl, ITransaction, ISerialize];\n    MetaSet._NS = 'Meta.Entity';    // namespace\n    MetaSet._PARAMS = ['name'];     // creator parameter\n\n    // local funciton\n    function _isObject(obj) {\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    function _isSchema(obj) {    // 객체 여부\n        if (!_isObject(obj)) return false;\n        if (_isObject(obj['tables']) || _isObject(obj['views'])) return true;\n        return false;\n    }\n    \n    /**\n     * 메타셋 스카마 객체로 변환\n     * @param {object} p_oGuid getObject()로 얻은 객체\n     * @returns {object}\n     */\n    MetaSet.transformSchema  = function(p_oGuid) {\n        var obj = {};\n\n        if (!_isSchema(p_oGuid)) { \n            throw new ExtendError(/EL05453/, null, []);\n        }\n\n        obj['name'] = p_oGuid['name']; \n        obj['tables'] = $transformTable(p_oGuid['tables']);\n        obj['views'] = $transformView(p_oGuid['views']);   \n        \n        return obj;\n\n        // inner function\n        function $transformTable(p_oGuid) {\n            var obj = {};\n            for (var i = 0; i < p_oGuid['_elem'].length; i++) {\n                var table = p_oGuid['_elem'][i];\n                var key = p_oGuid['_key'][i]; \n                obj[key] = BaseEntity.transformSchema(table);\n            }\n            obj['$key'] = p_oGuid['_key'];\n            return obj;\n        }\n        function $transformView(p_oGuid) {\n            var obj = {};\n            for (var i = 0; i < p_oGuid['_elem'].length; i++) {\n                var view = p_oGuid['_elem'][i];\n                var key = p_oGuid['_key'][i]; \n                obj[key] = BaseEntity.transformSchema(view);\n            }\n            obj['$key'] = p_oGuid['_key'];\n            return obj;\n        }\n    };\n    \n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaSet.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['setName'] = this.setName;\n        obj['tables'] = this.tables.getObject(vOpt, owned);\n        obj['views'] = this.views.getObject(vOpt, owned);\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaSet.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n\n        var origin = p_origin ? p_origin : p_oGuid;\n        \n        this.setName = p_oGuid['setName'];\n        this.tables.setObject(p_oGuid['tables'], origin);\n        this.views.setObject(p_oGuid['views'], origin);\n    };\n\n    /**\n     * 메타셋 복제\n     * @returns {MetaSet}\n     */\n    MetaSet.prototype.clone  = function() {\n        var clone = new MetaSet(this.setName);\n\n        for(var i = 0; i < this.tables.count; i++) {\n            clone.tables.add(this.tables[i].clone());\n        }\n\n        for(var i = 0; i < this.views.count; i++) {\n            clone.views.add(this.views[i].clone());\n        }\n        return clone;\n    };\n    \n    /**\n     * 모든 view 와 모든 table 의 row 를 초기화\n     */\n    MetaSet.prototype.clear  = function() {\n        for(var i = 0; i < this.tables.count; i++) this.tables[i].clear();\n        for(var i = 0; i < this.views.count; i++) this.views[i].clear();\n    };\n    \n    /**\n     * 전체 초기화\n     */\n    MetaSet.prototype.reset  = function() {\n        this.tables.clear();\n        this.views.clear();\n    };\n\n    /**\n     * 불러오기/가져오기 (!! 병합용도가 아님)\n     * 기존을 초기화 하고 불러오는 역활\n     * @param {object | string} p_obj 불러오기 대상\n     * @param {function} [p_parse] 파서\n     */\n    MetaSet.prototype.load = function(p_obj, p_parse) {\n        var obj = p_obj;\n        var mObj;\n\n        if (p_obj instanceof MetaSet) throw new ExtendError(/ES022/, null, []);\n\n        if (typeof obj === 'string') {\n            if (typeof p_parse === 'function') obj = p_parse(obj);\n            else obj = JSON.parse(obj, null);\n        }\n        \n        if (!_isObject(obj)) throw new ExtendError(/EL05455/, null, [typeof obj]);\n        \n        this.setObject(obj);\n    };\n\n    // MetaSet.prototype.load._TYPE = { params: String };\n\n    /**\n     * 메타셋 객체 출력(직렬화)\n     * @param {number} [p_vOpt] 옵션 (0, 1, 2)\n     * @param {function} [p_stringify] 파서출력 함수\n     * @param {string} [p_space] 공백\n     * @returns {string}\n     */\n    MetaSet.prototype.output = function(p_vOpt, p_stringify, p_space) {\n        var rObj = this.getObject(p_vOpt);\n        var str;\n        \n        if (typeof p_stringify === 'function') str = p_stringify(rObj, {space: p_space} );\n        else str = JSON.stringify(rObj, null, p_space);\n        return str;\n    };\n\n    /**\n     * object 로 로딩하기   \n     * JSON 스키마 규칙   \n     * { table: { columns: {}, rows: {} }}   \n     * { columns: {...}, rows: {} }\n     * @param {object} p_obj mObject 또는 rObject 또는 entity\n     * @param {Number} [p_option=3] 기본값  = 3\n     * @param {Number} p_option.1 컬럼(구조)만 가져온다. \n     * @param {Number} p_option.2 로우(데이터)만 가져온다 (컬럼 참조)  \n     * @param {Number} p_option.3 컬럼/로우를 가져온다. 로우만 존재하면 로우 이름의 빈 컬럼을 생성한다. \n     */\n    MetaSet.prototype.read  = function(p_obj, p_opt) {\n        var opt = typeof p_opt === 'undefined' ? 3 : p_opt;\n        var entity;\n\n        if (typeof p_obj !== 'object' || p_obj === null) throw new ExtendError(/EL05456/, null, [typeof p_obj]);\n        if (typeof opt !== 'number') throw new ExtendError(/EL05457/, null, [typeof opt]);\n\n        if (p_obj instanceof MetaSet) {\n            this.setName = p_obj.setName;\n\n            for (var i = 0; i < p_obj.tables.count; i++) {\n                var key = p_obj.tables.indexToKey(i);\n                if (this.tables.keyToIndex(key) < 0) this.tables.add(key);\n                entity = this.tables[key];\n                entity._readEntity(p_obj.tables[key], p_opt);\n            }\n            for (var i = 0; i < p_obj.views.count; i++) {\n                var key = p_obj.views.indexToKey(i);\n                if (this.views.keyToIndex(key) < 0) this.views.add(key);\n                entity = this.views[key];\n                entity._readEntity(p_obj.views[key], p_opt);\n            }\n        } else {\n            if (opt % 2 === 1) this.readSchema(p_obj, opt === 3 ? true : false); // opt: 1, 3\n            if (Math.floor(opt / 2) >= 1) this.readData(p_obj); // opt: 2, 3\n        }\n    };\n    \n    /**\n     * 없으면 빈 컬럼을 생성해야 하는지?  \n     * 이경우에 대해서 명료하게 처리햐야함 !!  \n     * @param {object} p_obj object<Schema> | object<Guid>\n     * @param {boolean} p_createRow true 이면, row[0] 기준으로 컬럼을 추가함\n     */\n    MetaSet.prototype.readSchema  = function(p_obj, p_createRow) {\n        var _this = this;\n        var metaSet = null;\n        var obj;\n        var entity;\n\n        if (!_isObject(p_obj)) throw new ExtendError(/EL05458/, null, [typeof p_obj]);\n\n        metaSet = p_obj['metaSet'] || p_obj['dataSet'] || p_obj;\n\n        if (MetaRegistry.isGuidObject(metaSet)) {\n            // if (MetaRegistry.hasRefer(metaSet)) metaSet = MetaRegistry.transformRefer(metaSet);  // 참조가 기본 존재함\n            metaSet = MetaRegistry.transformRefer(metaSet);\n            obj = MetaSet.transformSchema(metaSet);\n        } else obj = metaSet;\n\n        if (!_isSchema(obj)) throw new ExtendError(/EL05459/, null, [obj.tables, obj.views]);\n\n        if (obj['tables']) {\n            entity = obj['tables'];\n            if (entity['$key'] && Array.isArray(entity['$key'])) {\n                for (var i = 0; i < entity['$key'].length; i++) {\n                    $addEntity(entity['$key'][i], entity, this.tables);\n                }\n            } else for (var key in entity) $addEntity(key, entity, this.tables);\n        }\n        if (obj['views']) {\n            entity = obj['views'];\n            if (entity['$key'] && Array.isArray(entity['$key'])) {\n                for (var i = 0; i < entity['$key'].length; i++) {\n                    $addEntity(entity['$key'][i], entity, this.views);\n                }\n            } else for (var key in entity) $addEntity(key, entity, this.views);\n        }\n        return;\n\n        // inner funciton\n        function $addEntity(key, p_collec, p_baseCollec) {\n            var prop = p_collec[key];\n            if (!p_baseCollec.exists(key)) p_baseCollec.add(key);\n            MetaRegistry.setMetaObject(prop, p_baseCollec[key]);                 \n            p_baseCollec[key]._readSchema(p_collec[key], p_createRow, obj);                    \n        }\n    };\n\n    /**\n     * row 들을 불러 온다\n     * @param {object} p_obj 읽을 데이터\n     */\n    MetaSet.prototype.readData  = function(p_obj) {\n        var metaSet = null;\n        var obj;\n\n        if (!_isObject(p_obj)) throw new ExtendError(/EL0545A/, null, [typeof p_obj]);\n\n        metaSet = p_obj['metaSet'] || p_obj['dataSet'] || p_obj;\n        \n        if (MetaRegistry.isGuidObject(metaSet)) {\n            // if (MetaRegistry.hasRefer(metaSet)) metaSet = MetaRegistry.transformRefer(metaSet);\n            metaSet = MetaRegistry.transformRefer(metaSet);\n            obj = MetaSet.transformSchema(metaSet);\n        } else obj = metaSet;\n\n        if (!_isSchema(obj)) throw new ExtendError(/EL0545B/, null, [obj.tables, obj.views]);\n        \n        if (_isObject(obj['tables'])) $createRow(obj['tables'], this.tables);\n        if (_isObject(obj['views'])) $createRow(obj['views'], this.views);\n\n        function $createRow(p_entity, p_collec) {\n            for (var key in p_entity) {\n                if (Object.prototype.hasOwnProperty.call(p_entity, key) && p_collec.exists(key)) {\n                    p_collec[key].readData(p_entity[key]);\n                }\n            }\n        }\n    };\n\n    /**\n     * 메타셋을 스키마 타입의 객체로 쓰기(내보내기)\n     * @param {number} p_vOpt 옵션\n     * @returns {object} 스키마 타입\n     */\n    MetaSet.prototype.write  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var oSch;\n        var oGuid = this.getObject(p_vOpt);\n\n        return MetaSet.transformSchema(oGuid);\n    };\n\n    /**\n     * 메타셋 스키마(컬럼)을 스키마 타입의 객체로 쓰기\n     * @param {number} p_vOpt 옵션\n     * @returns {object} 스키마 타입\n     */\n    MetaSet.prototype.writeSchema  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema = this.write(vOpt);\n        \n        for (var prop in schema.tables) {\n            if (prop.indexOf('$') < 0) schema.tables[prop].rows = [];\n        }\n        for (var prop in schema.views) {\n            if (prop.indexOf('$') < 0) schema.views[prop].rows = [];\n        }\n        return schema;\n        \n    };\n\n    /**\n     * 메타셋 데이터(로우)를 스키마 타입의 객체로 쓰기\n     * @param {number} p_vOpt 옵션\n     * @returns {object} 스키마 타입\n     */\n    MetaSet.prototype.writeData  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema = this.write(vOpt);\n\n        for (var prop in schema.tables) {\n            if (prop.indexOf('$') < 0) schema.tables[prop].columns = {};\n        }\n        for (var prop in schema.views) {\n            if (prop.indexOf('$') < 0) schema.views[prop].columns = {};\n        }\n        return schema;\n    };\n\n    /**\n     * 메타테이블의 변경사항 허락 : commit\n     */\n    MetaSet.prototype.acceptChanges  = function() {\n        for (let i = 0; i < this.tables.count; i++) {\n            this.tables[i].acceptChanges();                \n        }\n    };\n    \n    /**\n     * 메타테이블의 변경사항 취소 : rollback\n     */\n    MetaSet.prototype.rejectChanges  = function() {\n        for (let i = 0; i < this.tables.count; i++) {\n            this.tables[i].rejectChanges();                \n        }\n    };\n    \n    /**\n     * 메타테이블들의 변경 유무\n     * @returns {boolean} 변경 여부\n     */\n    MetaSet.prototype.hasChanges  = function() {\n        for (let i = 0; i < this.tables.count; i++) {\n            var table = this.tables[i];\n            if (table.getChanges().length > 0) return true;\n        }\n        return false;\n    };\n\n    return MetaSet;\n\n}(MetaElement));\n\nexport default MetaSet;\nexport { MetaSet };"],"names":["_isObject","obj","_typeof","Array","isArray","_deepMerge","target","source","key","hasOwnProperty","targetValue","sourceValue","_loadJSON","_x","_loadJSON2","apply","this","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","filePath","isNode","isESM","response","wrap","_context3","prev","next","process","versions","node","globalThis","isDOM","require","import","abrupt","sent","fetch","json","t0","undefined","stop","_getLocale","_navigator$languages","locale","window","navigator","languages","language","Intl","DateTimeFormat","resolvedOptions","split","rawLocale","env","LANG","LC_ALL","LANGUAGE","replace","Message","_classCallCheck","_createClass","value","p_code","_this$$storage$lang$t","_this$$storage$lang$t2","$storage","lang","currentLang","defaultLang","String","p_msg","p_path","length","path","push","_changeLanguage","_callee","p_lang","i","localPath","msg","_context","concat","console","warn","_x2","p_values","result","getMessageByCode","p_template","namedValues","indexedValues","match","index","parseInt","_replacePlaceholders","code","intro","firstChar","substring","$intro","_autoDetect","_callee2","_context2","changeLanguage","_Message","_defineProperty","default","importMessage","defaultCode","ExtendError","_Error","p_prop","p_codeVal","_this","_callSuper","_prop","_msg","_build","_queue","queue","prop","Error","message","RegExp","get","_buildMessageProp","queue_cnt","j","_buildMsgQueue","_inherits","_wrapNativeSuper","_global","OLD_ENV","Type","Date","_isPrimitiveObj","_isLiteral","_equalLiternal","obj1","obj2","_creator","type","_typeName","_getKeyCode","val","exec","toUpperCase","restoreArrowFunction","transformedCode","altMatch","altParams","trim","altBody","params","body","forEach","assign","parts","extractedParam","originalParam","re","returnStatementMatch","returnType","_parseFunc","funBody","arrFunc","arrRetrun","return","arrParam","test","Function","error","_hasKindChoice","name","arr","indexOf","_hasKindArray","getAllProperties","hasObj","allProps","cur","is","props","Object","getOwnPropertyNames","prototype","getPrototypeOf","getTypes","ctor","hasUnion","union","proto","tempArr","call","__proto__","$getPrototype","isProtoChain","typeOf","extendType","strValue","firstStr","$type","ref","temp","def","_type","join","Number","Boolean","Symbol","BigInt","kind","toLowerCase","charAt","funcType","toString","_err","slice","_isFillObj","keys","_isEmptyObj","_execAllow","extType","tarType","opt","pathName","eType","tType","sExt","sTar","list","k","success","$arrayAllow","arrTarget","m","n","$choiceAllow","$classAllow","$unionAllow","$functionAllow","_execMatch","_elem","_tar","tar","elem","$arrayMatch","$choiceMatch","subPath","$classMatch","listDefType","$unionMatch","$functionMatch","deepEqual","keys1","keys2","hasType","typeObject","typeObj","temp2","allowType","matchType","isAllowType","isMatchType","Util","p_obj","getArrayDepth","p_elem","p_depts","level","createGuid","_p8","s","p","Math","random","deepCopy","p_target","nobj","inherits","create","superCtor","TempCtor","constructor","writable","configurable","enumerable","p_ctor","_interface","addCnt","defineProperty","$typeName","isImplementOf","EventEmitter","isLog","set","nVal","_isString","_NS","on","p_event","p_listener","addListener","once","self","onceListener","off","idx","splice","removeListener","removeAllListeners","emit","args","listeners","log","IObject","_KIND","instanceOf","equal","IMarshal","_guid","getObject","setObject","ICollection","add","remove","contains","IPropertyCollection","_super","indexToKey","IElement","_name","clone","IList","_list","count","IListControl","del","has","find","ISerialize","output","load","IArrayCollection","insertAt","NamespaceManager","$createNsRefer","_elemTypes","allowOverlap","arrType","storage","stack","findElement","ns","pop","_$KEYWORD","_validName","sName","_getArray","sections","_UNION","_getPathObject","fullName","nsPath","getPath","init","addNamespace","p_ns","parent","delNamespace","p_fullName","oPath","namespace","$findElement","p_stringify","p_space","fun","nObj","full","space","JSON","stringify","p_str","p_parse","parse","o","MetaRegistry","_getGuidList","oGuid","isGuidObject","register","p_meta","_ns","isMetaObject","registerClass","release","guid","p_oGuid","createMetaObject","p_origin","coClass","origin","getClass","argName","findSetObject","bind","createReferObject","$ref","createNsReferObject","findClass","$ns","setMetaObject","validObject","arrObj","$validUniqueGuid","$validReference","$findGuid","$validCollection","hasGuidObject","arrOrigin","hasRefer","$hasRefer","$findObject","transformRefer","$linkReference","parentName","p_key","releaseClass","loadMetaObject","meta","str","MetaObject","_PARAMS","p_obj1","p_obj2","_compare","parentFunction","unionTypes","funName","types","$$findFunctionName","$findFunction","p_vOpt","vOpt","MetaElement","p_name","p_owned","BaseCollection","p_owner","_owner","$KEYWORD","$event","$elements","$descriptors","newVal","arr1","_onAdd","p_idx","_onAdded","_onRemove","_onRemoved","_onClear","_onCleared","_onChanging","p_nVal","p_oVal","_onChanged","_getPropDescriptor","p_enum","oVal","_remove","_elems","owner","clear","removeAt","p_pos","ArrayCollection","desc","owned","p_desc","pos","map","callback","thisArg","newArr","filter","reduce","initialValue","acc","some","every","findIndex","PropertyCollection","$keys","propName","regex","exists","keyToIndex","IExportControl","write","IGroupControl","merge","copy","IImportControl","read","ISchemaControl","readSchema","writeSchema","ITransaction","acceptChanges","rejectChanges","TransactionQueue","p_collection","collection","commit","rollback","cmd","insert","p_etc","etc","p_clone","update","select","TransactionCollection","_transQueue","autoChanges","MetaRow","p_entity","_entity","columns","alias","column","oldValue","_valueTypes","rows","_changeKey","p_oldKey","p_newKey","p_nValue","p_oValue","MetaRowCollection","p_row","p_isCheck","isCheck","entity","valid","BaseColumn","$key","$value","$alias","_VALUE_TYPE","_default","caption","columnName","existColumnName","existAlias","oldKey","MetaColumn","p_property","required","constraints","getter","setter","__val","_val","_oldVal","_load","addConstraint","p_regex","p_condition","constraint","condition","p_value","funReturn","ObjectColumn","defValue","BaseColumnCollection","p_baseType","_baseType","_ownerIsEntity","initValue","addValue","MetaViewColumnCollection","rObj","p_column","p_refCollection","_baseEntity","item","property","addEntity","MetaTableColumnCollection","BaseEntity","_metaSet","_isSchema","transformSchema","$transformColumn","ii","row","$transformRow","_buildEntity","p_callback","p_items","orignal","$createRow","newRow","_readEntity","p_option","$loadColumn","floor","$loadRow","_readSchema","p_isCreateRow","Column","$addColumn","reset","getValue","setValue","p_matchType","tarRow","tarRows","tarColumns","tempRows","$mergeByRow","$mergeByColumn","$mergeByRowFill","$mergeByColumnFill","p_filter","p_args","MetaView","view","columnNames","selectList","readData","p_createRow","viewName","tableName","schema","writeData","validate","MetaTableCollection","MetaTable","p_table","table","any","existTableName","metaSet","getChanges","p_baseEntity","baseEntity","items","MetaViewCollection","p_view","existViewName","MetaSet","tables","views","$transformTable","$transformView","setName","p_opt","$addEntity","p_collec","p_baseCollec","hasChanges"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}