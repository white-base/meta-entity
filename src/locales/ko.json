{
  "EL02200": "---- Interface.* ----",
  "EL02210": "---- i-control-export.js ----",
  "EL02211": "write(opt): object 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02220": "---- i-control-import.js ----",
  "EL02221": "read(object) 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02230": "---- i-control-group.js ----",
  "EL02231": "merge(any, opt) 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02232": "copy(filter) 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02240": "---- i-control-schema.js ----",
  "EL02241": "readSchema(json) 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02242": "writeSchema(opt): object 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02250": "---- i-transaction.js ----",
  "EL02251": "acceptChanges() 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL02252": "rejectChanges() 은 추상메소드 입니다. '$1' 을 구현해야 합니다.",
  "EL05100": "---- Meta.Entity.* ----",
  "EL05110": "---- BaseColumn ----",
  "EL05111": "$1._entity 값이 [MetaElement] 인스턴스가 아닙니다.",
  "EL05112": "$1.columnName 는 'string' 타입입니다. typeof columnName = '$2'",
  "EL05113": "기존에 $1.columnName '$2'이 존재합니다.",
  "EL05114": "기존에 $1.alias '$2'이 존재하여 columnName 을 설정할 수 없습니다.",
  "EL05115": "$1.alias 는 'string' 타입입니다. typeof alias = '$2'",
  "EL05116": "기존에 $1.alias '$2'이 존재합니다.",
  "EL05117": "$1.label 는 'string' 타입입니다. typeof label = '$2'",
  "EL05118": "setObject(oGuid, origin); oGuid.['_entity'] guid 를 찾을 수 없습니다. name = '$1', guid = '$2'",
  "EL05119": "clone() 은 추상메소드 입니다. 상속해서 구현해야 합니다.",
  "EL05120": "---- ObjectColumn ----",
  "EL05121": "_load(prop); prop 는 'object' 타입입니다. typeof prop = '$2'",  
  "EL05122": "setObject(oGuid, origin); oGuid.['default'] guid 를 찾을 수 없습니다. guid = '$1'",
  "EL05123": "setObject(oGuid, origin); oGuid.['value'] guid 를 찾을 수 없습니다. guid = '$1'",
  "EL05130": "---- MetaColumn ----",
  "EL05131": "$1.required 는 'boolean' 타입입니다. typeof required = '$2'",
  "EL05132": "$1.kind 의 배열 요소는 'string'타입입니다. typeof [$2] = '$3",
  "EL05133": "$1.constraints 의 배열 요소는 'function' | {regex: RegExp, msg: string} 타입입니다. typeof [$2].regex = '$3', [$2].msg = '$4'",
  "EL05134": "$1.getter 는 'function' 타입입니다. typeof getter = '$2'",
  "EL05135": "$1.setter 는 'function' 타입입니다. typeof setter = '$2'",
  "EL05136": "addConstraint(regex, msg, code, condition); regex 는 RegExp 인스턴스가 아닙니다.",
  "EL05137": "addConstraint(regex, msg, code, condition); msg 는 'string' 타입입니다. typeof msg = '$1'",
  "EL05138": "valid(value); value 는 필수값 입니다. columnName = '$1' ",
  "EL05139": "valid(value); 함수 제약조건이 실패하였습니다. columnName = '$1' ",
  "EL0513A": "valid(value); 정규식 제약조건이 실패하였습니다. columnName = '$1', msg = '$2' ",
  "EL0513B": "$1.readOnly 는 'boolean' 타입입니다. typeof readOnly = '$2'",
  "EL0513C": "$1.visible 는 'boolean' 타입입니다. typeof visible = '$2'",
  "EL0513D": "$1.description 는 'string' 타입입니다. typeof description = '$2'",
  "EL0513E": "$1.order 는 'number' 타입입니다. typeof order = '$2'",
  "EL0513F": "$1.displayFormat 는 'function' 타입입니다. typeof displayFormat = '$2'",
  "EL0513G": "$1.codeRule 는 'string | object[] | object' 타입입니다. typeof codeRule = '$2'",

  "EL05140": "---- BaseColumnCollection ----",
  "EL05141": "$1._baseType 는 'function' 타입입니다. typeof getter = '$2'",
  "EL05142": "$1._baseType [BaseColumn]의 prototype 이 연결되어 있어야 합니다.(상속)",
  "EL05143": "add(name, vlaue); _onwer 의 rows 가 존재하여 columnColleciton 을 추가할 수 없습니다. _onwer.rows.count = '$1'",
  "EL05144": "add(name, vlaue); '$1' 에 '$2' 존재하여 추가할 수 없습니다.",
  "EL05145": "add(name, vlaue); '$1' 에 alias '$2'이 존재하여 추가할 수 없습니다.",
  "EL05146": "removeAt(idx); _onwer 의 rows 가 존재하여 columnColleciton 을 제거할 수 없습니다. _onwer.rows.count  = '$1'",
  "EL05147": "addValue(name, value) 은 추상메소드 입니다. 구현해야 합니다.",
  "EL05148": "컬럼 컬렉션은 setter 속성을 사용할 수 없습니다. add(), remove() 메소드를 사용해야 합니다. TODO: setter 속성 제거",
  "EL05150": "---- MetaTableColumnCollection ----",
  "EL05151": "add(any); any 는 'string' | [BaseColumn] 타입입니다. typeof any = '$1'",
  "EL05152": "addValue(name, value); name 은 'string' 타입입니다. typeof name = '$1'",
  "EL05160": "---- MetaViewColumnCollection ----",
  "EL05161": "add(any, refCol); refCol 값이 [BaseColumnCollection] 타입이 아닙니다.",
  "EL05162": "add(any, refCol); any 는 'string' | [BaseColumn] 타입입니다. typeof any = '$1'",
  "EL05163": "addValue(name, value, refCol); name 은 'string' 타입입니다. typeof name = '$1'",
  "EL05164": "addEntity(entity); entity 값이 [BaseEntity] 타입이 아닙니다.",
  "EL05200": "",
  "EL05210": "---- MetaRow ----",
  "EL05211": "$1.constructor(entity) 값이 [BaseEntity] 타입이 아닙니다.",
  "EL05212": "setObject(oGuid, origin); oGuid['_elem'].length = '$1' 길이와 oGuid['_key'].length = '$2' 길이가 서로 다릅니다.",
  "EL05213": "setObject(oGuid, origin); oGuid['_elem']['$1'] guid 를 찾을 수 없습니다. guid = '$2'",
  "EL05214": "changeKey(oldKey, newKey); 매개변수 '$1'이 'string' 타입이 아닙니다.",
  "EL05215": "changeKey(oldKey, newKey); 기존에 키가 존재하지 않습니다. '$1'",
  "EL05216": "changeKey(oldKey, newKey); 교체할 키가 기존키와 중복됩니다. '$1'",
  "EL05220": "---- MetaRowCollection ----",
  "EL05221": "target의 _entity 객체와 $1._onwer 객체가 같이야 합니다.",
  "EL05222": "insertAt(pos, row, isCheck); row 는 [MetaRow] 타입이 아닙니다.",
  "EL05223": "insertAt(pos, row, isCheck); row 의 _entity 객체와 $1._onwer 객체가 같이야 합니다.",
  "EL05224": "insertAt(pos, row, isCheck); row['$1'] 의 유효성 검사(valid)가 실패하였습니다. fail msg = '$2'",
  "EL05300": "---- base-entity.js ----",
  "EL05310": "---- property ----",
  "EL05311": "$1._mestaset 값은 [MetaSet] 타입이 아닙니다.",
  "EL05312": "$1.columns 속성을 재정의해야 합니다.",
  "EL05320": "---- private method :: _buildEntity, _readEntity, _readSchema - 14 ----",
  "EL05321": "_buildEntity(entity, cb, items); items['$1'] 가 'string' 타입이 아닙니다. typeof items['$1'] = '$2'",
  "EL05322": "_buildEntity(entity, cb, items); this.columns 에 '$1' 컬럼명이 존재하여 추가할 수 없습니다.",
  "EL05323": "_buildEntity(entity, cb, items); entity 에 대한 row 생성이 실패하였습니다.",
  "EL05324": "_readEntity(entity, opt); entity 가 [BaseEntity] 타입이 아닙니다.",
  "EL05325": "_readEntity(entity, opt); opt 가 'number' 타입이 아닙니다. typeof opt = '$1'",
  "EL05326": "_readEntity(entity, opt); entity 읽기가 실패하였습니다. opt = '$1'",
  "EL05327": "_readEntity(entity, opt); this.rows 가 존재하여 컬럼을 load 할 수 없습니다. opt = '$1'",
  "EL05328": "_readEntity(entity, opt); this.columns 에 '$1' 컬럼명이 존재하여 추가할 수 없습니다.",
  "EL05329": "_readSchema(obj, isRow, origin); obj._baseEntity guid를 찾을 수 없습니다. guid = '$1'",
  "EL0532A": "_readSchema(obj, isRow, origin); 스키마 읽기가 실패하였습니다.",
  "EL0532B": "_readSchema(obj, isRow, origin); this.rows 가 존재하여 컬럼을 추가 할 수 없습니다.",
  "EL0532C": "_readSchema(obj, isRow, origin); this.columns['$1'] guid를 찾을 수 없습니다. guid = '$2'",
  "EL0532D": "_readSchema(obj, isRow, origin); this.columns['$1']._entity guid를 찾을 수 없습니다. guid = '$2'",
  "EL0532E": "_readSchema(obj, isRow, origin); this.columns 에 '$1' 컬럼명이 존재하여 추가할 수 없습니다.",
  "EL05330": "---- method :: transformSchema(static), setValue, clone, select - 7, : getValue, clear, reset, newRow, getObject, setObject ----",
  "EL05331": "BaseEntity.transformSchema(oGuid); oGuid 는 스키마 객체가 아닙니다. oGuid = {columns: $1, rows: $2}",
  "EL05332": "BaseEntity.transformSchema(oGuid); 스키마 변환이 실패하였습니다.",
  "EL05333": "setValue(row); row 가 [MetaRow] 타입이 아닙니다.",
  "EL05334": "setValue(row); columns 에 row 설정이 실패하였습니다.",
  "EL05335": "select(filter, ...); MetaRegistry.namespace 에서 '$1' 가져오는데 싪패하였습니다.",
  "EL05336": "select(filter, ...); 조회가 실패하였습니다.",
  "EL05337": "clone() 은 추상메소드 입니다. 구현해야 합니다.",
  "EL05338": "validate(); 모든 컬럼이 MetaColumn 타입일 경우 유효성 검사를 수행할 수 있습니다. ",
  "EL05340": "---- merge, copy - 8 ----",
  "EL05341": "merge(target, opt, isMath); target 이 [BaseEntity] 타입이 아닙니다.",
  "EL05342": "merge(target, opt, isMath); opt 이 'number' 타입이 아닙니다. typeof opt = '$1'",
  "EL05343": "merge(target, opt, isMath); opt = 1, target.columns['$1'].name = '$2' 이 column name 에 존재합니다.",
  "EL05344": "merge(target, opt, isMath); opt = 1, target.columns['$1'].name = '$2' 이 column alias 에 존재합니다.",
  "EL05345": "merge(target, opt, isMath); opt = 3, target.columns['$1'].name = '$2' 이 columns name 에 존재합니다.",
  "EL05346": "merge(target, opt, isMath); opt = 3, target.columns['$1'].name = '$2' 이 columns alias 에 존재합니다.",
  "EL05347": "merge(target, opt, isMath); 병합이 실패하였습니다. opt = '$1'",
  "EL05348": "copy() 은 추상메소드 입니다. 구현해야 합니다.",
  "EL05350": "---- load, read, readSchema, readDate - 12 ----",
  "EL05351": "load(obj, parse); [BaseEntity] 타입의 obj 는 로드할 수 없습니다.",
  "EL05352": "load(obj, parse); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL05353": "load(obj, parse); 로드가 실패하였습니다.",
  "EL05354": "read(obj, opt); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL05355": "read(obj, opt); opt 이 'number' 타입이 아닙니다. typeof opt = '$1'",
  "EL05356": "read(obj, opt); opt 값은 범위(1 ~ 3)가 아닙니다. obj = '$1'",
  "EL05357": "read(obj, opt); 읽기가 실패하였습니다.",
  "EL05358": "readSchema(obj, isCreate, origin); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL05359": "readSchema(obj, isCreate, origin); obj 는 스키마 객체가 아닙니다. obj = {columns: $1, rows: $2}",
  "EL0535A": "readSchema(obj, isCreate, origin); 스카미 읽기가 실패하였습니다.",
  "EL0535B": "readData(obj); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL0535C": "readData(obj); obj 는 스키마 객체가 아닙니다. obj = {columns: $1, rows: $2}",
  "EL0535D": "readData(obj); 데이터 읽기가 실패하였습니다.",
  "EL05360": "---- output, write, writeSchema, writeData - 4 ----",
  "EL05361": "",
  "EL05400": "",
  "EL05410": "---- MetaTable ----",
  "EL05411": "$1.tableName 값은 'string' 타입이 아닙니다. typeof tableName = '$2'",
  "EL05412": "$1.columns 값이 [MetaTableColumnCollection] 타입이 아닙니다.",
  "EL05413": "$1.rows 존재하여 columns 을 설정할 수 없습니다. rows.count = '$2'",
  "EL05414": "setObject(oGuid, origin); oGuid.['_metaSet'] guid 를 찾을 수 없습니다. guid = '$1'",
  "EL05420": "---- MetaTableColleciton ----",
  "EL05421": "$1._baseType 값은 function 타입이 아닙니다. typeof _baseType = '$2'",
  "EL05422": "$1._baseType [MetaTable]의 prototype 이 연결되어 있어야 합니다.(상속)",
  "EL05423": "add(any); any 는 'string' | [MetaTable] 타입만 가능합니다. typeof any = '$1'",
  "EL05424": "add(any); tableName = '$1'이 기존에 존재합니다.",
  "EL05430": "---- MetaView ----",
  "EL05431": "$1.viewName 값은 'string' 타입이 아닙니다. typeof viewName = '$2'",
  "EL05432": "$1.columns 값은 [MetaViewColumnCollection] 타입이 아닙니다.",
  "EL05433": "$1.rows 존재하여 columns 을 설정할 수 없습니다. rows.count = '$2'",
  "EL05434": "$1._baseEntity 값은 [BaseEntity] 타입이 아닙니다.",
  "EL05435": "setObject(oGuid, origin); oGuid.['_metaSet'] guid 를 찾을 수 없습니다. guid = '$1'",
  "EL05436": "setObject(oGuid, origin); oGuid.['_baseEntity'] guid 를 찾을 수 없습니다. guid = '$1'",
  "EL05440": "---- MetaViewColleciton ----",
  "EL05441": "$1._baseType 값은 'function' 타입이 아닙니다. typeof _baseType = '$2'",
  "EL05442": "$1._baseType [MetaView]의 prototype 이 연결되어 있어야 합니다.(상속)",
  "EL05443": "add(obj, baseEntity); [MetaView] 타입의 obj와  baseEntity 를 동시에 입력할 수 없습니다.",
  "EL05444": "add(obj, baseEntity); baseEntity 는 [BaseEntity] 타입이 아닙니다.",
  "EL05445": "add(obj, baseEntity); obj 는 'string' | [MetaView] 타입만 가능합니다. typeof obj = '$1'",
  "EL05446": "add(obj, baseEntity); viewName = '$1'이 기존에 존재합니다.",
  "EL05450": "---- MetaSet ----",
  "EL05451": "$1.setName 값은 'string' 타입이 아닙니다. typeof setName = '$2'",
  "EL05452": "$1.autoChanges 값은 'boolean' 타입이 아닙니다. typeof setName = '$2'",
  "EL05453": "MetaSet.transformSchema(oGuid); oGuid 는 스키마 객체가 아닙니다. oGuid = {tables: .., views: ..}",
  "EL05454": "load(obj, parse); [MetaSet] 타입의 obj 는 로드할 수 없습니다.",
  "EL05455": "load(obj, parse); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL05456": "read(obj, opt); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL05457": "read(obj, opt); opt 이 'number' 타입이 아닙니다. typeof opt = '$1'",
  "EL05458": "readSchema(obj, isCreate); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL05459": "readSchema(obj, isCreate); obj 는 스키마 객체가 아닙니다. obj = {tables: $1, views: $2}",
  "EL0545A": "readData(obj); obj 가 'object' 타입이 아닙니다.(null제외) typeof obj = '$1'",
  "EL0545B": "readData(obj); obj 는 스키마 객체가 아닙니다. obj = {tables: $1, views: $2}",
  "EL05460": "---- CodeRuleRegistry ----",
  "EL05461": "CodeRuleRegistry.register(ns, rule);  ns 는 'string' 타입입니다. typeof ns = '$1'",
  "EL05462": "CodeRuleRegistry.register(ns, rule);  rule 는 'object' 타입입니다. typeof rule = '$1'"

}